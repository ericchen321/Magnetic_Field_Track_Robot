0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Tue Apr 04 01:12:45 2017
0000              5   ;--------------------------------------------------------
                  5   $name Receiver
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _DebuggingFctn
0000             30            public _MotorControl
0000             31            public _DetermineMode
0000             32            public _ReadFrequency
0000             33            public _Clean_LCD
0000             34            public _LCDprint
0000             35            public _LCD_4BIT
0000             36            public _WriteCommand
0000             37            public _WriteData
0000             38            public _LCD_byte
0000             39            public _LCD_pulse
0000             40            public _Timer2_ISR
0000             41            public _Volts_at_Pin
0000             42            public _ADC_at_Pin
0000             43            public _InitPinADC
0000             44            public _InitADC
0000             45            public _TIMER2_Init
0000             46            public _TIMER0_Init
0000             47            public _waitms
0000             48            public _Timer3us
0000             49            public __c51_external_startup
0000             50            public _LCDprint_PARM_3
0000             51            public _LCDprint_PARM_2
0000             52            public _freqstring
0000             53            public _millisecond
0000             54            public _WriteCount
0000             55            public _FreqBuffer
0000             56            public _mode
0000             57            public _frequency
0000             58            public _overflow_count
0000             59            public _dirout
0000             60            public _pwm_RED1
0000             61            public _pwm_RED0
0000             62            public _pwm_BLU1
0000             63            public _pwm_BLU0
0000             64            public _power
0000             65            public _pwm_count
0000             66   ;--------------------------------------------------------
0000             67   ; Special Function Registers
0000             68   ;--------------------------------------------------------
0000             69   _P0             DATA 0x80
0000             70   _SP             DATA 0x81
0000             71   _DPL            DATA 0x82
0000             72   _DPH            DATA 0x83
0000             73   _EMI0TC         DATA 0x84
0000             74   _EMI0CF         DATA 0x85
0000             75   _OSCLCN         DATA 0x86
0000             76   _PCON           DATA 0x87
0000             77   _TCON           DATA 0x88
0000             78   _TMOD           DATA 0x89
0000             79   _TL0            DATA 0x8a
0000             80   _TL1            DATA 0x8b
0000             81   _TH0            DATA 0x8c
0000             82   _TH1            DATA 0x8d
0000             83   _CKCON          DATA 0x8e
0000             84   _PSCTL          DATA 0x8f
0000             85   _P1             DATA 0x90
0000             86   _TMR3CN         DATA 0x91
0000             87   _TMR4CN         DATA 0x91
0000             88   _TMR3RLL        DATA 0x92
0000             89   _TMR4RLL        DATA 0x92
0000             90   _TMR3RLH        DATA 0x93
0000             91   _TMR4RLH        DATA 0x93
0000             92   _TMR3L          DATA 0x94
0000             93   _TMR4L          DATA 0x94
0000             94   _TMR3H          DATA 0x95
0000             95   _TMR4H          DATA 0x95
0000             96   _USB0ADR        DATA 0x96
0000             97   _USB0DAT        DATA 0x97
0000             98   _SCON           DATA 0x98
0000             99   _SCON0          DATA 0x98
0000            100   _SBUF           DATA 0x99
0000            101   _SBUF0          DATA 0x99
0000            102   _CPT1CN         DATA 0x9a
0000            103   _CPT0CN         DATA 0x9b
0000            104   _CPT1MD         DATA 0x9c
0000            105   _CPT0MD         DATA 0x9d
0000            106   _CPT1MX         DATA 0x9e
0000            107   _CPT0MX         DATA 0x9f
0000            108   _P2             DATA 0xa0
0000            109   _SPI0CFG        DATA 0xa1
0000            110   _SPI0CKR        DATA 0xa2
0000            111   _SPI0DAT        DATA 0xa3
0000            112   _P0MDOUT        DATA 0xa4
0000            113   _P1MDOUT        DATA 0xa5
0000            114   _P2MDOUT        DATA 0xa6
0000            115   _P3MDOUT        DATA 0xa7
0000            116   _IE             DATA 0xa8
0000            117   _CLKSEL         DATA 0xa9
0000            118   _EMI0CN         DATA 0xaa
0000            119   __XPAGE         DATA 0xaa
0000            120   _SBCON1         DATA 0xac
0000            121   _P4MDOUT        DATA 0xae
0000            122   _PFE0CN         DATA 0xaf
0000            123   _P3             DATA 0xb0
0000            124   _OSCXCN         DATA 0xb1
0000            125   _OSCICN         DATA 0xb2
0000            126   _OSCICL         DATA 0xb3
0000            127   _SBRLL1         DATA 0xb4
0000            128   _SBRLH1         DATA 0xb5
0000            129   _FLSCL          DATA 0xb6
0000            130   _FLKEY          DATA 0xb7
0000            131   _IP             DATA 0xb8
0000            132   _CLKMUL         DATA 0xb9
0000            133   _SMBTC          DATA 0xb9
0000            134   _AMX0N          DATA 0xba
0000            135   _AMX0P          DATA 0xbb
0000            136   _ADC0CF         DATA 0xbc
0000            137   _ADC0L          DATA 0xbd
0000            138   _ADC0H          DATA 0xbe
0000            139   _SFRPAGE        DATA 0xbf
0000            140   _SMB0CN         DATA 0xc0
0000            141   _SMB1CN         DATA 0xc0
0000            142   _SMB0CF         DATA 0xc1
0000            143   _SMB1CF         DATA 0xc1
0000            144   _SMB0DAT        DATA 0xc2
0000            145   _SMB1DAT        DATA 0xc2
0000            146   _ADC0GTL        DATA 0xc3
0000            147   _ADC0GTH        DATA 0xc4
0000            148   _ADC0LTL        DATA 0xc5
0000            149   _ADC0LTH        DATA 0xc6
0000            150   _P4             DATA 0xc7
0000            151   _TMR2CN         DATA 0xc8
0000            152   _TMR5CN         DATA 0xc8
0000            153   _REG01CN        DATA 0xc9
0000            154   _TMR2RLL        DATA 0xca
0000            155   _TMR5RLL        DATA 0xca
0000            156   _TMR2RLH        DATA 0xcb
0000            157   _TMR5RLH        DATA 0xcb
0000            158   _TMR2L          DATA 0xcc
0000            159   _TMR5L          DATA 0xcc
0000            160   _TMR2H          DATA 0xcd
0000            161   _TMR5H          DATA 0xcd
0000            162   _SMB0ADM        DATA 0xce
0000            163   _SMB1ADM        DATA 0xce
0000            164   _SMB0ADR        DATA 0xcf
0000            165   _SMB1ADR        DATA 0xcf
0000            166   _PSW            DATA 0xd0
0000            167   _REF0CN         DATA 0xd1
0000            168   _SCON1          DATA 0xd2
0000            169   _SBUF1          DATA 0xd3
0000            170   _P0SKIP         DATA 0xd4
0000            171   _P1SKIP         DATA 0xd5
0000            172   _P2SKIP         DATA 0xd6
0000            173   _USB0XCN        DATA 0xd7
0000            174   _PCA0CN         DATA 0xd8
0000            175   _PCA0MD         DATA 0xd9
0000            176   _PCA0CPM0       DATA 0xda
0000            177   _PCA0CPM1       DATA 0xdb
0000            178   _PCA0CPM2       DATA 0xdc
0000            179   _PCA0CPM3       DATA 0xdd
0000            180   _PCA0CPM4       DATA 0xde
0000            181   _P3SKIP         DATA 0xdf
0000            182   _ACC            DATA 0xe0
0000            183   _XBR0           DATA 0xe1
0000            184   _XBR1           DATA 0xe2
0000            185   _XBR2           DATA 0xe3
0000            186   _IT01CF         DATA 0xe4
0000            187   _CKCON1         DATA 0xe4
0000            188   _SMOD1          DATA 0xe5
0000            189   _EIE1           DATA 0xe6
0000            190   _EIE2           DATA 0xe7
0000            191   _ADC0CN         DATA 0xe8
0000            192   _PCA0CPL1       DATA 0xe9
0000            193   _PCA0CPH1       DATA 0xea
0000            194   _PCA0CPL2       DATA 0xeb
0000            195   _PCA0CPH2       DATA 0xec
0000            196   _PCA0CPL3       DATA 0xed
0000            197   _PCA0CPH3       DATA 0xee
0000            198   _RSTSRC         DATA 0xef
0000            199   _B              DATA 0xf0
0000            200   _P0MDIN         DATA 0xf1
0000            201   _P1MDIN         DATA 0xf2
0000            202   _P2MDIN         DATA 0xf3
0000            203   _P3MDIN         DATA 0xf4
0000            204   _P4MDIN         DATA 0xf5
0000            205   _EIP1           DATA 0xf6
0000            206   _EIP2           DATA 0xf7
0000            207   _SPI0CN         DATA 0xf8
0000            208   _PCA0L          DATA 0xf9
0000            209   _PCA0H          DATA 0xfa
0000            210   _PCA0CPL0       DATA 0xfb
0000            211   _PCA0CPH0       DATA 0xfc
0000            212   _PCA0CPL4       DATA 0xfd
0000            213   _PCA0CPH4       DATA 0xfe
0000            214   _VDM0CN         DATA 0xff
0000            215   _DPTR           DATA 0x8382
0000            216   _TMR2RL         DATA 0xcbca
0000            217   _TMR3RL         DATA 0x9392
0000            218   _TMR4RL         DATA 0x9392
0000            219   _TMR5RL         DATA 0xcbca
0000            220   _TMR2           DATA 0xcdcc
0000            221   _TMR3           DATA 0x9594
0000            222   _TMR4           DATA 0x9594
0000            223   _TMR5           DATA 0xcdcc
0000            224   _SBRL1          DATA 0xb5b4
0000            225   _ADC0           DATA 0xbebd
0000            226   _ADC0GT         DATA 0xc4c3
0000            227   _ADC0LT         DATA 0xc6c5
0000            228   _PCA0           DATA 0xfaf9
0000            229   _PCA0CP1        DATA 0xeae9
0000            230   _PCA0CP2        DATA 0xeceb
0000            231   _PCA0CP3        DATA 0xeeed
0000            232   _PCA0CP0        DATA 0xfcfb
0000            233   _PCA0CP4        DATA 0xfefd
0000            234   ;--------------------------------------------------------
0000            235   ; special function bits
0000            236   ;--------------------------------------------------------
0000            237   _P0_0           BIT 0x80
0000            238   _P0_1           BIT 0x81
0000            239   _P0_2           BIT 0x82
0000            240   _P0_3           BIT 0x83
0000            241   _P0_4           BIT 0x84
0000            242   _P0_5           BIT 0x85
0000            243   _P0_6           BIT 0x86
0000            244   _P0_7           BIT 0x87
0000            245   _TF1            BIT 0x8f
0000            246   _TR1            BIT 0x8e
0000            247   _TF0            BIT 0x8d
0000            248   _TR0            BIT 0x8c
0000            249   _IE1            BIT 0x8b
0000            250   _IT1            BIT 0x8a
0000            251   _IE0            BIT 0x89
0000            252   _IT0            BIT 0x88
0000            253   _P1_0           BIT 0x90
0000            254   _P1_1           BIT 0x91
0000            255   _P1_2           BIT 0x92
0000            256   _P1_3           BIT 0x93
0000            257   _P1_4           BIT 0x94
0000            258   _P1_5           BIT 0x95
0000            259   _P1_6           BIT 0x96
0000            260   _P1_7           BIT 0x97
0000            261   _S0MODE         BIT 0x9f
0000            262   _SCON0_6        BIT 0x9e
0000            263   _MCE0           BIT 0x9d
0000            264   _REN0           BIT 0x9c
0000            265   _TB80           BIT 0x9b
0000            266   _RB80           BIT 0x9a
0000            267   _TI0            BIT 0x99
0000            268   _RI0            BIT 0x98
0000            269   _SCON_6         BIT 0x9e
0000            270   _MCE            BIT 0x9d
0000            271   _REN            BIT 0x9c
0000            272   _TB8            BIT 0x9b
0000            273   _RB8            BIT 0x9a
0000            274   _TI             BIT 0x99
0000            275   _RI             BIT 0x98
0000            276   _P2_0           BIT 0xa0
0000            277   _P2_1           BIT 0xa1
0000            278   _P2_2           BIT 0xa2
0000            279   _P2_3           BIT 0xa3
0000            280   _P2_4           BIT 0xa4
0000            281   _P2_5           BIT 0xa5
0000            282   _P2_6           BIT 0xa6
0000            283   _P2_7           BIT 0xa7
0000            284   _EA             BIT 0xaf
0000            285   _ESPI0          BIT 0xae
0000            286   _ET2            BIT 0xad
0000            287   _ES0            BIT 0xac
0000            288   _ET1            BIT 0xab
0000            289   _EX1            BIT 0xaa
0000            290   _ET0            BIT 0xa9
0000            291   _EX0            BIT 0xa8
0000            292   _P3_0           BIT 0xb0
0000            293   _P3_1           BIT 0xb1
0000            294   _P3_2           BIT 0xb2
0000            295   _P3_3           BIT 0xb3
0000            296   _P3_4           BIT 0xb4
0000            297   _P3_5           BIT 0xb5
0000            298   _P3_6           BIT 0xb6
0000            299   _P3_7           BIT 0xb7
0000            300   _IP_7           BIT 0xbf
0000            301   _PSPI0          BIT 0xbe
0000            302   _PT2            BIT 0xbd
0000            303   _PS0            BIT 0xbc
0000            304   _PT1            BIT 0xbb
0000            305   _PX1            BIT 0xba
0000            306   _PT0            BIT 0xb9
0000            307   _PX0            BIT 0xb8
0000            308   _MASTER0        BIT 0xc7
0000            309   _TXMODE0        BIT 0xc6
0000            310   _STA0           BIT 0xc5
0000            311   _STO0           BIT 0xc4
0000            312   _ACKRQ0         BIT 0xc3
0000            313   _ARBLOST0       BIT 0xc2
0000            314   _ACK0           BIT 0xc1
0000            315   _SI0            BIT 0xc0
0000            316   _MASTER1        BIT 0xc7
0000            317   _TXMODE1        BIT 0xc6
0000            318   _STA1           BIT 0xc5
0000            319   _STO1           BIT 0xc4
0000            320   _ACKRQ1         BIT 0xc3
0000            321   _ARBLOST1       BIT 0xc2
0000            322   _ACK1           BIT 0xc1
0000            323   _SI1            BIT 0xc0
0000            324   _TF2            BIT 0xcf
0000            325   _TF2H           BIT 0xcf
0000            326   _TF2L           BIT 0xce
0000            327   _TF2LEN         BIT 0xcd
0000            328   _TF2CEN         BIT 0xcc
0000            329   _T2SPLIT        BIT 0xcb
0000            330   _TR2            BIT 0xca
0000            331   _T2CSS          BIT 0xc9
0000            332   _T2XCLK         BIT 0xc8
0000            333   _TF5H           BIT 0xcf
0000            334   _TF5L           BIT 0xce
0000            335   _TF5LEN         BIT 0xcd
0000            336   _TMR5CN_4       BIT 0xcc
0000            337   _T5SPLIT        BIT 0xcb
0000            338   _TR5            BIT 0xca
0000            339   _TMR5CN_1       BIT 0xc9
0000            340   _T5XCLK         BIT 0xc8
0000            341   _CY             BIT 0xd7
0000            342   _AC             BIT 0xd6
0000            343   _F0             BIT 0xd5
0000            344   _RS1            BIT 0xd4
0000            345   _RS0            BIT 0xd3
0000            346   _OV             BIT 0xd2
0000            347   _F1             BIT 0xd1
0000            348   _PARITY         BIT 0xd0
0000            349   _CF             BIT 0xdf
0000            350   _CR             BIT 0xde
0000            351   _PCA0CN_5       BIT 0xde
0000            352   _CCF4           BIT 0xdc
0000            353   _CCF3           BIT 0xdb
0000            354   _CCF2           BIT 0xda
0000            355   _CCF1           BIT 0xd9
0000            356   _CCF0           BIT 0xd8
0000            357   _ACC_7          BIT 0xe7
0000            358   _ACC_6          BIT 0xe6
0000            359   _ACC_5          BIT 0xe5
0000            360   _ACC_4          BIT 0xe4
0000            361   _ACC_3          BIT 0xe3
0000            362   _ACC_2          BIT 0xe2
0000            363   _ACC_1          BIT 0xe1
0000            364   _ACC_0          BIT 0xe0
0000            365   _AD0EN          BIT 0xef
0000            366   _AD0TM          BIT 0xee
0000            367   _AD0INT         BIT 0xed
0000            368   _AD0BUSY        BIT 0xec
0000            369   _AD0WINT        BIT 0xeb
0000            370   _AD0CM2         BIT 0xea
0000            371   _AD0CM1         BIT 0xe9
0000            372   _AD0CM0         BIT 0xe8
0000            373   _B_7            BIT 0xf7
0000            374   _B_6            BIT 0xf6
0000            375   _B_5            BIT 0xf5
0000            376   _B_4            BIT 0xf4
0000            377   _B_3            BIT 0xf3
0000            378   _B_2            BIT 0xf2
0000            379   _B_1            BIT 0xf1
0000            380   _B_0            BIT 0xf0
0000            381   _SPIF           BIT 0xff
0000            382   _WCOL           BIT 0xfe
0000            383   _MODF           BIT 0xfd
0000            384   _RXOVRN         BIT 0xfc
0000            385   _NSSMD1         BIT 0xfb
0000            386   _NSSMD0         BIT 0xfa
0000            387   _TXBMT          BIT 0xf9
0000            388   _SPIEN          BIT 0xf8
0000            389   ;--------------------------------------------------------
0000            390   ; overlayable register banks
0000            391   ;--------------------------------------------------------
0000            392            rbank0 segment data overlay
0000            393   ;--------------------------------------------------------
0000            394   ; internal ram data
0000            395   ;--------------------------------------------------------
0000            396            rseg R_DSEG
0000            397   _pwm_count:
0000            398            ds 1
0001            399   _power:
0001            400            ds 1
0002            401   _pwm_BLU0:
0002            402            ds 1
0003            403   _pwm_BLU1:
0003            404            ds 1
0004            405   _pwm_RED0:
0004            406            ds 1
0005            407   _pwm_RED1:
0005            408            ds 1
0006            409   _dirout:
0006            410            ds 1
0007            411   _overflow_count:
0007            412            ds 1
0008            413   _frequency:
0008            414            ds 4
000C            415   _mode:
000C            416            ds 2
000E            417   _FreqBuffer:
000E            418            ds 16
001E            419   _WriteCount:
001E            420            ds 1
001F            421   _millisecond:
001F            422            ds 2
0021            423   _freqstring:
0021            424            ds 10
002B            425   _LCDprint_PARM_2:
002B            426            ds 1
002C            427   _DetermineMode_ForwardSigCount_1_86:
002C            428            ds 1
002D            429   _DetermineMode_StopSigCount_1_86:
002D            430            ds 1
002E            431   _MotorControl_IndVolts_1_93:
002E            432            ds 3
0031            433   _main_IndVolts_1_105:
0031            434            ds 12
003D            435   ;--------------------------------------------------------
003D            436   ; overlayable items in internal ram 
003D            437   ;--------------------------------------------------------
0000            438            rseg    R_OSEG
0000            439            rseg    R_OSEG
0000            440   _InitPinADC_PARM_2:
0000            441            ds 1
0001            442            rseg    R_OSEG
0001            443   ;--------------------------------------------------------
0001            444   ; indirectly addressable internal ram data
0001            445   ;--------------------------------------------------------
0000            446            rseg R_ISEG
0000            447   ;--------------------------------------------------------
0000            448   ; absolute internal ram data
0000            449   ;--------------------------------------------------------
0000            450            DSEG
0000            451   ;--------------------------------------------------------
0000            452   ; bit data
0000            453   ;--------------------------------------------------------
0000            454            rseg R_BSEG
0000            455   _Timer2_ISR_sloc0_1_0:
0000            456            DBIT    1
0001            457   _LCDprint_PARM_3:
0001            458            DBIT    1
0002            459   ;--------------------------------------------------------
0002            460   ; paged external ram data
0002            461   ;--------------------------------------------------------
0000            462            rseg R_PSEG
0000            463   ;--------------------------------------------------------
0000            464   ; external ram data
0000            465   ;--------------------------------------------------------
0000            466            rseg R_XSEG
0000            467   ;--------------------------------------------------------
0000            468   ; absolute external ram data
0000            469   ;--------------------------------------------------------
0000            470            XSEG
0000            471   ;--------------------------------------------------------
0000            472   ; external initialized ram data
0000            473   ;--------------------------------------------------------
0000            474            rseg R_IXSEG
0000            475            rseg R_HOME
0000            476            rseg R_GSINIT
0000            477            rseg R_CSEG
0000            478   ;--------------------------------------------------------
0000            479   ; Reset entry point and interrupt vectors
0000            480   ;--------------------------------------------------------
0000            481            CSEG at 0x0000
0000 020100     482            ljmp    _crt0
002B            483            CSEG at 0x002b
002B 020100     484            ljmp    _Timer2_ISR
002E            485   ;--------------------------------------------------------
002E            486   ; global & static initialisations
002E            487   ;--------------------------------------------------------
0000            488            rseg R_HOME
0000            489            rseg R_GSINIT
0000            490            rseg R_GSINIT
0000            491   ;--------------------------------------------------------
0000            492   ; data variables initialization
0000            493   ;--------------------------------------------------------
0000            494            rseg R_DINIT
0000            495   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:56: volatile unsigned char pwm_count=0;
0000 756800     496            mov     _pwm_count,#0x00
0003            497   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:57: volatile unsigned char power=30;
0003 75281E     498            mov     _power,#0x1E
0006            499   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:58: volatile unsigned char pwm_BLU0=0;
0006 75E800     500            mov     _pwm_BLU0,#0x00
0009            501   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:59: volatile unsigned char pwm_BLU1=0;
0009 75A800     502            mov     _pwm_BLU1,#0x00
000C            503   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:60: volatile unsigned char pwm_RED0=0;
000C 756800     504            mov     _pwm_RED0,#0x00
000F            505   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:61: volatile unsigned char pwm_RED1=0;
000F 752800     506            mov     _pwm_RED1,#0x00
0012            507   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:62: volatile unsigned char dirout=0;
0012 75E800     508            mov     _dirout,#0x00
0015            509   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:63: unsigned char overflow_count=0;
0015 75A800     510            mov     _overflow_count,#0x00
0018            511   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:64: volatile float frequency=0;
0018 758000     512            mov     _frequency,#0x00
001B 758100     513            mov     (_frequency + 1),#0x00
001E 758200     514            mov     (_frequency + 2),#0x00
0021 758300     515            mov     (_frequency + 3),#0x00
0024            516   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:65: unsigned int mode=FORWARD;
0024 75C003     517            mov     _mode,#0x03
0027 E4         518            clr     a
0028 F5C1       519            mov     (_mode + 1),a
002A            520   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:66: volatile float FreqBuffer[4]={0,0,0,0};
002A 758000     521            mov     _FreqBuffer,#0x00
002D 758100     522            mov     (_FreqBuffer + 1),#0x00
0030 758200     523            mov     (_FreqBuffer + 2),#0x00
0033 758300     524            mov     (_FreqBuffer + 3),#0x00
0036 758400     525            mov     (_FreqBuffer + 0x0004),#0x00
0039 758500     526            mov     ((_FreqBuffer + 0x0004) + 1),#0x00
003C 758600     527            mov     ((_FreqBuffer + 0x0004) + 2),#0x00
003F 758700     528            mov     ((_FreqBuffer + 0x0004) + 3),#0x00
0042 758800     529            mov     (_FreqBuffer + 0x0008),#0x00
0045 758900     530            mov     ((_FreqBuffer + 0x0008) + 1),#0x00
0048 758A00     531            mov     ((_FreqBuffer + 0x0008) + 2),#0x00
004B 758B00     532            mov     ((_FreqBuffer + 0x0008) + 3),#0x00
004E 758C00     533            mov     (_FreqBuffer + 0x000c),#0x00
0051 758D00     534            mov     ((_FreqBuffer + 0x000c) + 1),#0x00
0054 758E00     535            mov     ((_FreqBuffer + 0x000c) + 2),#0x00
0057 758F00     536            mov     ((_FreqBuffer + 0x000c) + 3),#0x00
005A            537   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:67: unsigned char WriteCount = 0;
005A 754000     538            mov     _WriteCount,#0x00
005D            539   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:68: unsigned int millisecond=0;
005D E4         540            clr     a
005E F500       541            mov     _millisecond,a
0060 F501       542            mov     (_millisecond + 1),a
0062            543            ; The linker places a 'ret' at the end of segment R_DINIT.
0062            544   ;--------------------------------------------------------
0062            545   ; code
0062            546   ;--------------------------------------------------------
0000            547            rseg R_CSEG
0000            548   ;------------------------------------------------------------
0000            549   ;Allocation info for local variables in function '_c51_external_startup'
0000            550   ;------------------------------------------------------------
0000            551   ;------------------------------------------------------------
0000            552   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:74: char _c51_external_startup (void)
0000            553   ;        -----------------------------------------
0000            554   ;         function _c51_external_startup
0000            555   ;        -----------------------------------------
0000            556   __c51_external_startup:
0000            557            using   0
0000            558   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:76: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     559            anl     _PCA0MD,#0xBF
0003            560   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:77: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     561            mov     _VDM0CN,#0x80
0006            562   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:78: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     563            mov     _RSTSRC,#0x06
0009            564   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:86: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     565            orl     _CLKSEL,#0x03
000C            566   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:90: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     567            orl     _OSCICN,#0x03
000F            568   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:93: SCON0 = 0x10;
000F 759810     569            mov     _SCON0,#0x10
0012            570   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:95: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     571            mov     _TH1,#0x30
0015            572   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:96: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     573            anl     _CKCON,#0xF4
0018            574   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:97: CKCON |=  0x08;
0018 438E08     575            orl     _CKCON,#0x08
001B            576   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:110: TL1 = TH1;      // Init Timer1
001B 858D8B     577            mov     _TL1,_TH1
001E            578   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:111: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     579            anl     _TMOD,#0x0F
0021            580   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:112: TMOD |=  0x20;
0021 438920     581            orl     _TMOD,#0x20
0024            582   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:113: TR1 = 1; // START Timer1
0024 D28E       583            setb    _TR1
0026            584   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:114: TI = 1;  // Indicate TX0 ready
0026 D299       585            setb    _TI
0028            586   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:117: P2MDOUT|=0b_0000_0011;
0028 43A603     587            orl     _P2MDOUT,#0x03
002B            588   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:118: P0MDOUT |= 0x01;  // set P0.0 and P0.4 as push-pull outputs
002B 43A401     589            orl     _P0MDOUT,#0x01
002E            590   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:119: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)
002E 75E101     591            mov     _XBR0,#0x01
0031            592   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:120: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     593            mov     _XBR1,#0x40
0034            594   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:122: return 0;
0034 758200     595            mov     dpl,#0x00
0037 22         596            ret
0038            597   ;------------------------------------------------------------
0038            598   ;Allocation info for local variables in function 'Timer3us'
0038            599   ;------------------------------------------------------------
0038            600   ;us                        Allocated to registers r2 
0038            601   ;i                         Allocated to registers r3 
0038            602   ;------------------------------------------------------------
0038            603   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:129: void Timer3us(unsigned char us)
0038            604   ;        -----------------------------------------
0038            605   ;         function Timer3us
0038            606   ;        -----------------------------------------
0038            607   _Timer3us:
0038 AA82       608            mov     r2,dpl
003A            609   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:134: CKCON|=0b_0100_0000;
003A 438E40     610            orl     _CKCON,#0x40
003D            611   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:136: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
003D 7592D0     612            mov     _TMR3RL,#0xD0
0040 7593FF     613            mov     (_TMR3RL >> 8),#0xFF
0043            614   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:137: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0043 859294     615            mov     _TMR3,_TMR3RL
0046 859395     616            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0049            617   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:139: TMR3CN = 0x04;                 // Sart Timer3 and clear overflow flag
0049 759104     618            mov     _TMR3CN,#0x04
004C            619   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:140: for (i = 0; i < us; i++)       // Count <us> overflows
004C 7B00       620            mov     r3,#0x00
004E            621   L003004?:
004E C3         622            clr     c
004F EB         623            mov     a,r3
0050 9A         624            subb    a,r2
0051 5001       625            jnc     L003007?
0053            626   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:142: while (!(TMR3CN & 0x80));  // Wait for overflow
0053            627   L003001?:
0053 E591       628            mov     a,_TMR3CN
0055 30E7D8     629            jnb     acc.7,L003001?
0058            630   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:143: TMR3CN &= ~(0x80);         // Clear overflow indicator
0058 53917F     631            anl     _TMR3CN,#0x7F
005B            632   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:140: for (i = 0; i < us; i++)       // Count <us> overflows
005B 0B         633            inc     r3
005C 8001       634            sjmp    L003004?
005E            635   L003007?:
005E            636   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:145: TMR3CN = 0 ;                   // Stop Timer3 and clear overflow flag
005E 759100     637            mov     _TMR3CN,#0x00
0061 22         638            ret
0062            639   ;------------------------------------------------------------
0062            640   ;Allocation info for local variables in function 'waitms'
0062            641   ;------------------------------------------------------------
0062            642   ;ms                        Allocated to registers r2 r3 
0062            643   ;j                         Allocated to registers r2 r3 
0062            644   ;------------------------------------------------------------
0062            645   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:152: void waitms (unsigned int ms)
0062            646   ;        -----------------------------------------
0062            647   ;         function waitms
0062            648   ;        -----------------------------------------
0062            649   _waitms:
0062 AA82       650            mov     r2,dpl
0064 AB83       651            mov     r3,dph
0066            652   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:155: for(j=ms; j!=0; j--)
0066            653   L004001?:
0066 BA00D8     654            cjne    r2,#0x00,L004010?
0069 BB00D8     655            cjne    r3,#0x00,L004010?
006C 22         656            ret
006D            657   L004010?:
006D            658   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:157: Timer3us(249);
006D 7582F9     659            mov     dpl,#0xF9
0070 C002       660            push    ar2
0072 C003       661            push    ar3
0074 120100     662            lcall   _Timer3us
0077            663   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:158: Timer3us(249);
0077 7582F9     664            mov     dpl,#0xF9
007A 120100     665            lcall   _Timer3us
007D            666   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:159: Timer3us(249);
007D 7582F9     667            mov     dpl,#0xF9
0080 120100     668            lcall   _Timer3us
0083            669   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:160: Timer3us(250);
0083 7582FA     670            mov     dpl,#0xFA
0086 120100     671            lcall   _Timer3us
0089 D003       672            pop     ar3
008B D002       673            pop     ar2
008D            674   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:155: for(j=ms; j!=0; j--)
008D 1A         675            dec     r2
008E BAFF18     676            cjne    r2,#0xff,L004011?
0091 1B         677            dec     r3
0092            678   L004011?:
0092 8001       679            sjmp    L004001?
0094            680   ;------------------------------------------------------------
0094            681   ;Allocation info for local variables in function 'TIMER0_Init'
0094            682   ;------------------------------------------------------------
0094            683   ;------------------------------------------------------------
0094            684   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:166: void TIMER0_Init(void)
0094            685   ;        -----------------------------------------
0094            686   ;         function TIMER0_Init
0094            687   ;        -----------------------------------------
0094            688   _TIMER0_Init:
0094            689   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:168: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
0094 5389F0     690            anl     _TMOD,#0xF0
0097            691   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:169: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
0097 438901     692            orl     _TMOD,#0x01
009A            693   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:170: TR0=0; // Stop Timer/Counter 0
009A C28C       694            clr     _TR0
009C 22         695            ret
009D            696   ;------------------------------------------------------------
009D            697   ;Allocation info for local variables in function 'TIMER2_Init'
009D            698   ;------------------------------------------------------------
009D            699   ;------------------------------------------------------------
009D            700   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:176: void TIMER2_Init(void)
009D            701   ;        -----------------------------------------
009D            702   ;         function TIMER2_Init
009D            703   ;        -----------------------------------------
009D            704   _TIMER2_Init:
009D            705   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:178: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
009D 75C800     706            mov     _TMR2CN,#0x00
00A0            707   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:179: CKCON|=0b_0001_0000;
00A0 438E10     708            orl     _CKCON,#0x10
00A3            709   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:180: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
00A3 75CA78     710            mov     _TMR2RL,#0x78
00A6 75CBEC     711            mov     (_TMR2RL >> 8),#0xEC
00A9            712   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:181: TMR2=0xffff;   // Set to reload immediately
00A9 75CCFF     713            mov     _TMR2,#0xFF
00AC 75CDFF     714            mov     (_TMR2 >> 8),#0xFF
00AF            715   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:182: ET2=1;         // Enable Timer2 interrupts
00AF D2AD       716            setb    _ET2
00B1            717   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:183: TR2=1;         // Start Timer2
00B1 D2CA       718            setb    _TR2
00B3 22         719            ret
00B4            720   ;------------------------------------------------------------
00B4            721   ;Allocation info for local variables in function 'InitADC'
00B4            722   ;------------------------------------------------------------
00B4            723   ;------------------------------------------------------------
00B4            724   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:189: void InitADC (void)
00B4            725   ;        -----------------------------------------
00B4            726   ;         function InitADC
00B4            727   ;        -----------------------------------------
00B4            728   _InitADC:
00B4            729   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:192: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
00B4 75BCF8     730            mov     _ADC0CF,#0xF8
00B7            731   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:193: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
00B7 75E880     732            mov     _ADC0CN,#0x80
00BA            733   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:194: REF0CN = 0b_0000_1000; //Select VDD as the voltage reference for the converter
00BA 75D108     734            mov     _REF0CN,#0x08
00BD 22         735            ret
00BE            736   ;------------------------------------------------------------
00BE            737   ;Allocation info for local variables in function 'InitPinADC'
00BE            738   ;------------------------------------------------------------
00BE            739   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00BE            740   ;portno                    Allocated to registers r2 
00BE            741   ;mask                      Allocated to registers r3 
00BE            742   ;------------------------------------------------------------
00BE            743   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:201: void InitPinADC (unsigned char portno, unsigned char pinno)
00BE            744   ;        -----------------------------------------
00BE            745   ;         function InitPinADC
00BE            746   ;        -----------------------------------------
00BE            747   _InitPinADC:
00BE AA82       748            mov     r2,dpl
00C0            749   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:205: mask=1<<pinno;
00C0 8550F0     750            mov     b,_InitPinADC_PARM_2
00C3 05F0       751            inc     b
00C5 7401       752            mov     a,#0x01
00C7 8001       753            sjmp    L008012?
00C9            754   L008010?:
00C9 25E0       755            add     a,acc
00CB            756   L008012?:
00CB D5F0D8     757            djnz    b,L008010?
00CE FB         758            mov     r3,a
00CF            759   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:207: switch (portno)
00CF EA         760            mov     a,r2
00D0 24FC       761            add     a,#0xff - 0x03
00D2 4001       762            jc      L008007?
00D4 EA         763            mov     a,r2
00D5 2A         764            add     a,r2
00D6 2A         765            add     a,r2
00D7 90A158     766            mov     dptr,#L008014?
00DA 73         767            jmp     @a+dptr
00DB            768   L008014?:
00DB 020100     769            ljmp    L008001?
00DE 020100     770            ljmp    L008002?
00E1 020100     771            ljmp    L008003?
00E4 020100     772            ljmp    L008004?
00E7            773   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:209: case 0:
00E7            774   L008001?:
00E7            775   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:210: P0MDIN &= (~mask); // Set pin as analog input
00E7 EB         776            mov     a,r3
00E8 F4         777            cpl     a
00E9 52F1       778            anl     _P0MDIN,a
00EB            779   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:211: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00EB EB         780            mov     a,r3
00EC 42D4       781            orl     _P0SKIP,a
00EE            782   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:212: break;
00EE            783   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:213: case 1:
00EE 22         784            ret
00EF            785   L008002?:
00EF            786   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:214: P1MDIN &= (~mask); // Set pin as analog input
00EF EB         787            mov     a,r3
00F0 F4         788            cpl     a
00F1 52F2       789            anl     _P1MDIN,a
00F3            790   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:215: P1SKIP |= mask; // Skip Crossbar decoding for this pin
00F3 EB         791            mov     a,r3
00F4 42D5       792            orl     _P1SKIP,a
00F6            793   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:216: break;
00F6            794   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:217: case 2:
00F6 22         795            ret
00F7            796   L008003?:
00F7            797   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:218: P2MDIN &= (~mask); // Set pin as analog input
00F7 EB         798            mov     a,r3
00F8 F4         799            cpl     a
00F9 52F3       800            anl     _P2MDIN,a
00FB            801   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:219: P2SKIP |= mask; // Skip Crossbar decoding for this pin
00FB EB         802            mov     a,r3
00FC 42D6       803            orl     _P2SKIP,a
00FE            804   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:220: break;
00FE            805   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:221: case 3:
00FE 22         806            ret
00FF            807   L008004?:
00FF            808   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:222: P3MDIN &= (~mask); // Set pin as analog input
00FF EB         809            mov     a,r3
0100 F4         810            cpl     a
0101 FA         811            mov     r2,a
0102 52F4       812            anl     _P3MDIN,a
0104            813   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:223: P3SKIP |= mask; // Skip Crossbar decoding for this pin
0104 EB         814            mov     a,r3
0105 42DF       815            orl     _P3SKIP,a
0107            816   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:227: }
0107            817   L008007?:
0107 22         818            ret
0108            819   ;------------------------------------------------------------
0108            820   ;Allocation info for local variables in function 'ADC_at_Pin'
0108            821   ;------------------------------------------------------------
0108            822   ;pin                       Allocated to registers 
0108            823   ;------------------------------------------------------------
0108            824   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:234: unsigned int ADC_at_Pin(unsigned char pin)
0108            825   ;        -----------------------------------------
0108            826   ;         function ADC_at_Pin
0108            827   ;        -----------------------------------------
0108            828   _ADC_at_Pin:
0108 8582BB     829            mov     _AMX0P,dpl
010B            830   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:237: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
010B 75BA1F     831            mov     _AMX0N,#0x1F
010E            832   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:239: AD0BUSY=1;
010E D2EC       833            setb    _AD0BUSY
0110            834   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:240: while (AD0BUSY); // Wait for dummy conversion to finish
0110            835   L009001?:
0110 20EC98     836            jb      _AD0BUSY,L009001?
0113            837   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:242: AD0BUSY = 1;
0113 D2EC       838            setb    _AD0BUSY
0115            839   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:243: while (AD0BUSY); // Wait for conversion to complete
0115            840   L009004?:
0115 20ECD8     841            jb      _AD0BUSY,L009004?
0118            842   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:244: return (ADC0L+(ADC0H*0x100));
0118 AABD       843            mov     r2,_ADC0L
011A 7B00       844            mov     r3,#0x00
011C ADBE       845            mov     r5,_ADC0H
011E 7C00       846            mov     r4,#0x00
0120 EC         847            mov     a,r4
0121 2A         848            add     a,r2
0122 F582       849            mov     dpl,a
0124 ED         850            mov     a,r5
0125 3B         851            addc    a,r3
0126 F583       852            mov     dph,a
0128 22         853            ret
0129            854   ;------------------------------------------------------------
0129            855   ;Allocation info for local variables in function 'Volts_at_Pin'
0129            856   ;------------------------------------------------------------
0129            857   ;pin                       Allocated to registers r2 
0129            858   ;------------------------------------------------------------
0129            859   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:251: float Volts_at_Pin(unsigned char pin)
0129            860   ;        -----------------------------------------
0129            861   ;         function Volts_at_Pin
0129            862   ;        -----------------------------------------
0129            863   _Volts_at_Pin:
0129            864   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:253: return ((ADC_at_Pin(pin)*VDD_onboard)/1024.0);
0129 120100     865            lcall   _ADC_at_Pin
012C 120100     866            lcall   ___uint2fs
012F AA82       867            mov     r2,dpl
0131 AB83       868            mov     r3,dph
0133 ACF0       869            mov     r4,b
0135 FD         870            mov     r5,a
0136 C002       871            push    ar2
0138 C003       872            push    ar3
013A C004       873            push    ar4
013C C005       874            push    ar5
013E 90DD2F     875            mov     dptr,#0xDD2F
0141 75F054     876            mov     b,#0x54
0144 7440       877            mov     a,#0x40
0146 120100     878            lcall   ___fsmul
0149 AA82       879            mov     r2,dpl
014B AB83       880            mov     r3,dph
014D ACF0       881            mov     r4,b
014F FD         882            mov     r5,a
0150 E581       883            mov     a,sp
0152 24FC       884            add     a,#0xfc
0154 F581       885            mov     sp,a
0156 E4         886            clr     a
0157 C0E0       887            push    acc
0159 C0E0       888            push    acc
015B 7480       889            mov     a,#0x80
015D C0E0       890            push    acc
015F 7444       891            mov     a,#0x44
0161 C0E0       892            push    acc
0163 8A82       893            mov     dpl,r2
0165 8B83       894            mov     dph,r3
0167 8CF0       895            mov     b,r4
0169 ED         896            mov     a,r5
016A 120100     897            lcall   ___fsdiv
016D AA82       898            mov     r2,dpl
016F AB83       899            mov     r3,dph
0171 ACF0       900            mov     r4,b
0173 FD         901            mov     r5,a
0174 E581       902            mov     a,sp
0176 24FC       903            add     a,#0xfc
0178 F581       904            mov     sp,a
017A 8A82       905            mov     dpl,r2
017C 8B83       906            mov     dph,r3
017E 8CF0       907            mov     b,r4
0180 ED         908            mov     a,r5
0181 22         909            ret
0182            910   ;------------------------------------------------------------
0182            911   ;Allocation info for local variables in function 'Timer2_ISR'
0182            912   ;------------------------------------------------------------
0182            913   ;------------------------------------------------------------
0182            914   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:260: void Timer2_ISR (void) interrupt 5
0182            915   ;        -----------------------------------------
0182            916   ;         function Timer2_ISR
0182            917   ;        -----------------------------------------
0182            918   _Timer2_ISR:
0182 C0E0       919            push    acc
0184 C0D0       920            push    psw
0186 75D000     921            mov     psw,#0x00
0189            922   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:262: TF2H = 0; // Clear Timer2 interrupt flag
0189 C2CF       923            clr     _TF2H
018B            924   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:264: pwm_count++;
018B 0568       925            inc     _pwm_count
018D            926   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:265: if(pwm_count>100) pwm_count=0;
018D E568       927            mov     a,_pwm_count
018F 249B       928            add     a,#0xff - 0x64
0191 5001       929            jnc     L011002?
0193 756800     930            mov     _pwm_count,#0x00
0196            931   L011002?:
0196            932   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:267: BLU0=pwm_count>pwm_BLU0?0:1;
0196 C3         933            clr     c
0197 E5E8       934            mov     a,_pwm_BLU0
0199 9568       935            subb    a,_pwm_count
019B 9298       936            mov  _Timer2_ISR_sloc0_1_0,c
019D B3         937            cpl     c
019E 92A5       938            mov     _P2_5,c
01A0            939   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:268: BLU1=pwm_count>pwm_BLU1?0:1;
01A0 C3         940            clr     c
01A1 E5A8       941            mov     a,_pwm_BLU1
01A3 9568       942            subb    a,_pwm_count
01A5 9298       943            mov  _Timer2_ISR_sloc0_1_0,c
01A7 B3         944            cpl     c
01A8 92A2       945            mov     _P2_2,c
01AA            946   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:270: RED0=pwm_count>pwm_RED0?0:1;
01AA C3         947            clr     c
01AB E568       948            mov     a,_pwm_RED0
01AD 9568       949            subb    a,_pwm_count
01AF 9298       950            mov  _Timer2_ISR_sloc0_1_0,c
01B1 B3         951            cpl     c
01B2 92A3       952            mov     _P2_3,c
01B4            953   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:271: RED1=pwm_count>pwm_RED1?0:1;
01B4 C3         954            clr     c
01B5 E528       955            mov     a,_pwm_RED1
01B7 9568       956            subb    a,_pwm_count
01B9 9298       957            mov  _Timer2_ISR_sloc0_1_0,c
01BB B3         958            cpl     c
01BC 92A4       959            mov     _P2_4,c
01BE D0D0       960            pop     psw
01C0 D0E0       961            pop     acc
01C2 32         962            reti
01C3            963   ;        eliminated unneeded push/pop dpl
01C3            964   ;        eliminated unneeded push/pop dph
01C3            965   ;        eliminated unneeded push/pop b
01C3            966   ;------------------------------------------------------------
01C3            967   ;Allocation info for local variables in function 'LCD_pulse'
01C3            968   ;------------------------------------------------------------
01C3            969   ;------------------------------------------------------------
01C3            970   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:277: void LCD_pulse (void)
01C3            971   ;        -----------------------------------------
01C3            972   ;         function LCD_pulse
01C3            973   ;        -----------------------------------------
01C3            974   _LCD_pulse:
01C3            975   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:279: LCD_E=1;
01C3 D295       976            setb    _P1_5
01C5            977   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:280: Timer3us(40);
01C5 758228     978            mov     dpl,#0x28
01C8 120100     979            lcall   _Timer3us
01CB            980   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:281: LCD_E=0;
01CB C295       981            clr     _P1_5
01CD 22         982            ret
01CE            983   ;------------------------------------------------------------
01CE            984   ;Allocation info for local variables in function 'LCD_byte'
01CE            985   ;------------------------------------------------------------
01CE            986   ;x                         Allocated to registers r2 
01CE            987   ;------------------------------------------------------------
01CE            988   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:284: void LCD_byte (unsigned char x)
01CE            989   ;        -----------------------------------------
01CE            990   ;         function LCD_byte
01CE            991   ;        -----------------------------------------
01CE            992   _LCD_byte:
01CE AA82       993            mov     r2,dpl
01D0            994   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:287: ACC=x; //Send high nible
01D0 8AE0       995            mov     _ACC,r2
01D2            996   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:288: LCD_D7=ACC_7;
01D2 A2E7       997            mov     c,_ACC_7
01D4 9290       998            mov     _P1_0,c
01D6            999   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:289: LCD_D6=ACC_6;
01D6 A2E6      1000            mov     c,_ACC_6
01D8 9291      1001            mov     _P1_1,c
01DA           1002   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:290: LCD_D5=ACC_5;
01DA A2E5      1003            mov     c,_ACC_5
01DC 9292      1004            mov     _P1_2,c
01DE           1005   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:291: LCD_D4=ACC_4;
01DE A2E4      1006            mov     c,_ACC_4
01E0 9293      1007            mov     _P1_3,c
01E2           1008   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:292: LCD_pulse();
01E2 C002      1009            push    ar2
01E4 120100    1010            lcall   _LCD_pulse
01E7           1011   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:293: Timer3us(40);
01E7 758228    1012            mov     dpl,#0x28
01EA 120100    1013            lcall   _Timer3us
01ED D002      1014            pop     ar2
01EF           1015   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:294: ACC=x; //Send low nible
01EF 8AE0      1016            mov     _ACC,r2
01F1           1017   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:295: LCD_D7=ACC_3;
01F1 A2E3      1018            mov     c,_ACC_3
01F3 9290      1019            mov     _P1_0,c
01F5           1020   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:296: LCD_D6=ACC_2;
01F5 A2E2      1021            mov     c,_ACC_2
01F7 9291      1022            mov     _P1_1,c
01F9           1023   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:297: LCD_D5=ACC_1;
01F9 A2E1      1024            mov     c,_ACC_1
01FB 9292      1025            mov     _P1_2,c
01FD           1026   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:298: LCD_D4=ACC_0;
01FD A2E0      1027            mov     c,_ACC_0
01FF 9293      1028            mov     _P1_3,c
0201           1029   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:299: LCD_pulse();
0201 020100    1030            ljmp    _LCD_pulse
0204           1031   ;------------------------------------------------------------
0204           1032   ;Allocation info for local variables in function 'WriteData'
0204           1033   ;------------------------------------------------------------
0204           1034   ;x                         Allocated to registers r2 
0204           1035   ;------------------------------------------------------------
0204           1036   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:302: void WriteData (unsigned char x)
0204           1037   ;        -----------------------------------------
0204           1038   ;         function WriteData
0204           1039   ;        -----------------------------------------
0204           1040   _WriteData:
0204 AA82      1041            mov     r2,dpl
0206           1042   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:304: LCD_RS=1;
0206 D2A1      1043            setb    _P2_1
0208           1044   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:305: LCD_byte(x);
0208 8A82      1045            mov     dpl,r2
020A 120100    1046            lcall   _LCD_byte
020D           1047   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:306: waitms(2);
020D 900002    1048            mov     dptr,#0x0002
0210 020100    1049            ljmp    _waitms
0213           1050   ;------------------------------------------------------------
0213           1051   ;Allocation info for local variables in function 'WriteCommand'
0213           1052   ;------------------------------------------------------------
0213           1053   ;x                         Allocated to registers r2 
0213           1054   ;------------------------------------------------------------
0213           1055   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:309: void WriteCommand (unsigned char x)
0213           1056   ;        -----------------------------------------
0213           1057   ;         function WriteCommand
0213           1058   ;        -----------------------------------------
0213           1059   _WriteCommand:
0213 AA82      1060            mov     r2,dpl
0215           1061   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:311: LCD_RS=0;
0215 C2A1      1062            clr     _P2_1
0217           1063   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:312: LCD_byte(x);
0217 8A82      1064            mov     dpl,r2
0219 120100    1065            lcall   _LCD_byte
021C           1066   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:313: waitms(5);
021C 900005    1067            mov     dptr,#0x0005
021F 020100    1068            ljmp    _waitms
0222           1069   ;------------------------------------------------------------
0222           1070   ;Allocation info for local variables in function 'LCD_4BIT'
0222           1071   ;------------------------------------------------------------
0222           1072   ;------------------------------------------------------------
0222           1073   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:316: void LCD_4BIT (void)
0222           1074   ;        -----------------------------------------
0222           1075   ;         function LCD_4BIT
0222           1076   ;        -----------------------------------------
0222           1077   _LCD_4BIT:
0222           1078   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:318: LCD_E=0; // Resting state of LCD's enable is zero
0222 C295      1079            clr     _P1_5
0224           1080   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:319: LCD_RW=0; // We are only writing to the LCD in this program
0224 C297      1081            clr     _P1_7
0226           1082   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:320: waitms(20);
0226 900014    1083            mov     dptr,#0x0014
0229 120100    1084            lcall   _waitms
022C           1085   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:322: WriteCommand(0x33);
022C 758233    1086            mov     dpl,#0x33
022F 120100    1087            lcall   _WriteCommand
0232           1088   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:323: WriteCommand(0x33);
0232 758233    1089            mov     dpl,#0x33
0235 120100    1090            lcall   _WriteCommand
0238           1091   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:324: WriteCommand(0x32); // Change to 4-bit mode
0238 758232    1092            mov     dpl,#0x32
023B 120100    1093            lcall   _WriteCommand
023E           1094   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:327: WriteCommand(0x28);
023E 758228    1095            mov     dpl,#0x28
0241 120100    1096            lcall   _WriteCommand
0244           1097   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:328: WriteCommand(0x0c);
0244 75820C    1098            mov     dpl,#0x0C
0247 120100    1099            lcall   _WriteCommand
024A           1100   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:329: WriteCommand(0x01); // Clear screen command (takes some time)
024A 758201    1101            mov     dpl,#0x01
024D 120100    1102            lcall   _WriteCommand
0250           1103   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:330: waitms(20); // Wait for clear screen command to finsih.
0250 900014    1104            mov     dptr,#0x0014
0253 020100    1105            ljmp    _waitms
0256           1106   ;------------------------------------------------------------
0256           1107   ;Allocation info for local variables in function 'LCDprint'
0256           1108   ;------------------------------------------------------------
0256           1109   ;line                      Allocated with name '_LCDprint_PARM_2'
0256           1110   ;string                    Allocated to registers r2 r3 r4 
0256           1111   ;j                         Allocated to registers r5 r6 
0256           1112   ;------------------------------------------------------------
0256           1113   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:333: void LCDprint(char * string, unsigned char line, bit clear)
0256           1114   ;        -----------------------------------------
0256           1115   ;         function LCDprint
0256           1116   ;        -----------------------------------------
0256           1117   _LCDprint:
0256 AA82      1118            mov     r2,dpl
0258 AB83      1119            mov     r3,dph
025A ACF0      1120            mov     r4,b
025C           1121   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:337: WriteCommand(line==2?0xc0:0x80);
025C 7402      1122            mov     a,#0x02
025E B58098    1123            cjne    a,_LCDprint_PARM_2,L017013?
0261 7DC0      1124            mov     r5,#0xC0
0263 8001      1125            sjmp    L017014?
0265           1126   L017013?:
0265 7D80      1127            mov     r5,#0x80
0267           1128   L017014?:
0267 8D82      1129            mov     dpl,r5
0269 C002      1130            push    ar2
026B C003      1131            push    ar3
026D C004      1132            push    ar4
026F 120100    1133            lcall   _WriteCommand
0272           1134   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:338: waitms(5);
0272 900005    1135            mov     dptr,#0x0005
0275 120100    1136            lcall   _waitms
0278 D004      1137            pop     ar4
027A D003      1138            pop     ar3
027C D002      1139            pop     ar2
027E           1140   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:339: for(j=0; string[j]!=0; j++)      WriteData(string[j]);// Write the message
027E 7D00      1141            mov     r5,#0x00
0280 7E00      1142            mov     r6,#0x00
0282           1143   L017003?:
0282 ED        1144            mov     a,r5
0283 2A        1145            add     a,r2
0284 FF        1146            mov     r7,a
0285 EE        1147            mov     a,r6
0286 3B        1148            addc    a,r3
0287 F8        1149            mov     r0,a
0288 8C01      1150            mov     ar1,r4
028A 8F82      1151            mov     dpl,r7
028C 8883      1152            mov     dph,r0
028E 89F0      1153            mov     b,r1
0290 120100    1154            lcall   __gptrget
0293 FF        1155            mov     r7,a
0294 6001      1156            jz      L017006?
0296 8F82      1157            mov     dpl,r7
0298 C002      1158            push    ar2
029A C003      1159            push    ar3
029C C004      1160            push    ar4
029E C005      1161            push    ar5
02A0 C006      1162            push    ar6
02A2 120100    1163            lcall   _WriteData
02A5 D006      1164            pop     ar6
02A7 D005      1165            pop     ar5
02A9 D004      1166            pop     ar4
02AB D003      1167            pop     ar3
02AD D002      1168            pop     ar2
02AF 0D        1169            inc     r5
02B0 BD0018    1170            cjne    r5,#0x00,L017003?
02B3 0E        1171            inc     r6
02B4 8001      1172            sjmp    L017003?
02B6           1173   L017006?:
02B6           1174   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:340: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
02B6 3030D8    1175            jnb     _LCDprint_PARM_3,L017011?
02B9 8D02      1176            mov     ar2,r5
02BB 8E03      1177            mov     ar3,r6
02BD           1178   L017007?:
02BD C3        1179            clr     c
02BE EA        1180            mov     a,r2
02BF 9410      1181            subb    a,#0x10
02C1 EB        1182            mov     a,r3
02C2 6480      1183            xrl     a,#0x80
02C4 9480      1184            subb    a,#0x80
02C6 5001      1185            jnc     L017011?
02C8 758220    1186            mov     dpl,#0x20
02CB C002      1187            push    ar2
02CD C003      1188            push    ar3
02CF 120100    1189            lcall   _WriteData
02D2 D003      1190            pop     ar3
02D4 D002      1191            pop     ar2
02D6 0A        1192            inc     r2
02D7 BA0018    1193            cjne    r2,#0x00,L017007?
02DA 0B        1194            inc     r3
02DB 8001      1195            sjmp    L017007?
02DD           1196   L017011?:
02DD 22        1197            ret
02DE           1198   ;------------------------------------------------------------
02DE           1199   ;Allocation info for local variables in function 'Clean_LCD'
02DE           1200   ;------------------------------------------------------------
02DE           1201   ;------------------------------------------------------------
02DE           1202   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:344: void Clean_LCD(void){
02DE           1203   ;        -----------------------------------------
02DE           1204   ;         function Clean_LCD
02DE           1205   ;        -----------------------------------------
02DE           1206   _Clean_LCD:
02DE           1207   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:345: LCDprint("                ", 1, 1);
02DE 758001    1208            mov     _LCDprint_PARM_2,#0x01
02E1 D230      1209            setb    _LCDprint_PARM_3
02E3 90A658    1210            mov     dptr,#__str_0
02E6 75F080    1211            mov     b,#0x80
02E9 120100    1212            lcall   _LCDprint
02EC           1213   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:346: LCDprint("                ", 2, 1);
02EC 758002    1214            mov     _LCDprint_PARM_2,#0x02
02EF D230      1215            setb    _LCDprint_PARM_3
02F1 90A658    1216            mov     dptr,#__str_0
02F4 75F080    1217            mov     b,#0x80
02F7 020100    1218            ljmp    _LCDprint
02FA           1219   ;------------------------------------------------------------
02FA           1220   ;Allocation info for local variables in function 'ReadFrequency'
02FA           1221   ;------------------------------------------------------------
02FA           1222   ;------------------------------------------------------------
02FA           1223   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:352: void ReadFrequency (void)
02FA           1224   ;        -----------------------------------------
02FA           1225   ;         function ReadFrequency
02FA           1226   ;        -----------------------------------------
02FA           1227   _ReadFrequency:
02FA           1228   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:356: TL0=0;
02FA 758A00    1229            mov     _TL0,#0x00
02FD           1230   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:357: TH0=0;
02FD 758C00    1231            mov     _TH0,#0x00
0300           1232   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:358: TF0=0;
0300 C28D      1233            clr     _TF0
0302           1234   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:359: overflow_count=0;
0302 75A800    1235            mov     _overflow_count,#0x00
0305           1236   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:361: while(FRQIN!=0); // Wait for the signal to be zero
0305           1237   L019001?:
0305 209698    1238            jb      _P1_6,L019001?
0308           1239   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:362: while(FRQIN!=1); // Wait for the signal to be one
0308           1240   L019004?:
0308 3096D8    1241            jnb     _P1_6,L019004?
030B           1242   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:363: TR0=1; // Start the timer
030B D28C      1243            setb    _TR0
030D           1244   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:364: while(FRQIN!=0) // Wait for the signal to be zero
030D           1245   L019009?:
030D 309658    1246            jnb     _P1_6,L019014?
0310           1247   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:366: if(TF0==1) // Did the 16-bit timer overflow?
0310           1248   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:368: TF0=0;
0310 108D98    1249            jbc     _TF0,L019031?
0313 8001      1250            sjmp    L019009?
0315           1251   L019031?:
0315           1252   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:369: overflow_count++;
0315 05A8      1253            inc     _overflow_count
0317           1254   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:372: while(FRQIN!=1) // Wait for the signal to be one
0317 8001      1255            sjmp    L019009?
0319           1256   L019014?:
0319 2096D8    1257            jb      _P1_6,L019016?
031C           1258   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:374: if(TF0==1) // Did the 16-bit timer overflow?
031C           1259   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:376: TF0=0;
031C 108D18    1260            jbc     _TF0,L019033?
031F 8001      1261            sjmp    L019014?
0321           1262   L019033?:
0321           1263   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:377: overflow_count++;
0321 05A8      1264            inc     _overflow_count
0323 8001      1265            sjmp    L019014?
0325           1266   L019016?:
0325           1267   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:381: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period. Then convert it to frequency
0325 C28C      1268            clr     _TR0
0327           1269   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:383: frequency=1.0/((overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK)); // Compute frequency
0327 85A882    1270            mov     dpl,_overflow_count
032A 120100    1271            lcall   ___uchar2fs
032D AA82      1272            mov     r2,dpl
032F AB83      1273            mov     r3,dph
0331 ACF0      1274            mov     r4,b
0333 FD        1275            mov     r5,a
0334 C002      1276            push    ar2
0336 C003      1277            push    ar3
0338 C004      1278            push    ar4
033A C005      1279            push    ar5
033C 900000    1280            mov     dptr,#0x0000
033F 75F080    1281            mov     b,#0x80
0342 7447      1282            mov     a,#0x47
0344 120100    1283            lcall   ___fsmul
0347 AA82      1284            mov     r2,dpl
0349 AB83      1285            mov     r3,dph
034B ACF0      1286            mov     r4,b
034D FD        1287            mov     r5,a
034E E581      1288            mov     a,sp
0350 24FC      1289            add     a,#0xfc
0352 F581      1290            mov     sp,a
0354 858C82    1291            mov     dpl,_TH0
0357 C002      1292            push    ar2
0359 C003      1293            push    ar3
035B C004      1294            push    ar4
035D C005      1295            push    ar5
035F 120100    1296            lcall   ___uchar2fs
0362 AE82      1297            mov     r6,dpl
0364 AF83      1298            mov     r7,dph
0366 A8F0      1299            mov     r0,b
0368 F9        1300            mov     r1,a
0369 C006      1301            push    ar6
036B C007      1302            push    ar7
036D C000      1303            push    ar0
036F C001      1304            push    ar1
0371 900000    1305            mov     dptr,#0x0000
0374 75F080    1306            mov     b,#0x80
0377 7443      1307            mov     a,#0x43
0379 120100    1308            lcall   ___fsmul
037C AE82      1309            mov     r6,dpl
037E AF83      1310            mov     r7,dph
0380 A8F0      1311            mov     r0,b
0382 F9        1312            mov     r1,a
0383 E581      1313            mov     a,sp
0385 24FC      1314            add     a,#0xfc
0387 F581      1315            mov     sp,a
0389 D005      1316            pop     ar5
038B D004      1317            pop     ar4
038D D003      1318            pop     ar3
038F D002      1319            pop     ar2
0391 C006      1320            push    ar6
0393 C007      1321            push    ar7
0395 C000      1322            push    ar0
0397 C001      1323            push    ar1
0399 8A82      1324            mov     dpl,r2
039B 8B83      1325            mov     dph,r3
039D 8CF0      1326            mov     b,r4
039F ED        1327            mov     a,r5
03A0 120100    1328            lcall   ___fsadd
03A3 AA82      1329            mov     r2,dpl
03A5 AB83      1330            mov     r3,dph
03A7 ACF0      1331            mov     r4,b
03A9 FD        1332            mov     r5,a
03AA E581      1333            mov     a,sp
03AC 24FC      1334            add     a,#0xfc
03AE F581      1335            mov     sp,a
03B0 AE8A      1336            mov     r6,_TL0
03B2 7F00      1337            mov     r7,#0x00
03B4 8E82      1338            mov     dpl,r6
03B6 8F83      1339            mov     dph,r7
03B8 C002      1340            push    ar2
03BA C003      1341            push    ar3
03BC C004      1342            push    ar4
03BE C005      1343            push    ar5
03C0 120100    1344            lcall   ___sint2fs
03C3 AE82      1345            mov     r6,dpl
03C5 AF83      1346            mov     r7,dph
03C7 A8F0      1347            mov     r0,b
03C9 F9        1348            mov     r1,a
03CA D005      1349            pop     ar5
03CC D004      1350            pop     ar4
03CE D003      1351            pop     ar3
03D0 D002      1352            pop     ar2
03D2 C006      1353            push    ar6
03D4 C007      1354            push    ar7
03D6 C000      1355            push    ar0
03D8 C001      1356            push    ar1
03DA 8A82      1357            mov     dpl,r2
03DC 8B83      1358            mov     dph,r3
03DE 8CF0      1359            mov     b,r4
03E0 ED        1360            mov     a,r5
03E1 120100    1361            lcall   ___fsadd
03E4 AA82      1362            mov     r2,dpl
03E6 AB83      1363            mov     r3,dph
03E8 ACF0      1364            mov     r4,b
03EA FD        1365            mov     r5,a
03EB E581      1366            mov     a,sp
03ED 24FC      1367            add     a,#0xfc
03EF F581      1368            mov     sp,a
03F1 C002      1369            push    ar2
03F3 C003      1370            push    ar3
03F5 C004      1371            push    ar4
03F7 C005      1372            push    ar5
03F9 9037BD    1373            mov     dptr,#0x37BD
03FC 75F086    1374            mov     b,#0x86
03FF 7434      1375            mov     a,#0x34
0401 120100    1376            lcall   ___fsmul
0404 AA82      1377            mov     r2,dpl
0406 AB83      1378            mov     r3,dph
0408 ACF0      1379            mov     r4,b
040A FD        1380            mov     r5,a
040B E581      1381            mov     a,sp
040D 24FC      1382            add     a,#0xfc
040F F581      1383            mov     sp,a
0411 C002      1384            push    ar2
0413 C003      1385            push    ar3
0415 C004      1386            push    ar4
0417 C005      1387            push    ar5
0419 900000    1388            mov     dptr,#0x0000
041C 75F080    1389            mov     b,#0x80
041F 743F      1390            mov     a,#0x3F
0421 120100    1391            lcall   ___fsdiv
0424 858280    1392            mov     _frequency,dpl
0427 858381    1393            mov     (_frequency + 1),dph
042A 85F082    1394            mov     (_frequency + 2),b
042D F583      1395            mov     (_frequency + 3),a
042F E581      1396            mov     a,sp
0431 24FC      1397            add     a,#0xfc
0433 F581      1398            mov     sp,a
0435 22        1399            ret
0436           1400   ;------------------------------------------------------------
0436           1401   ;Allocation info for local variables in function 'DetermineMode'
0436           1402   ;------------------------------------------------------------
0436           1403   ;ReadCount                 Allocated to registers r4 
0436           1404   ;ForwardSigCount           Allocated with name '_DetermineMode_ForwardSigCount_1_86'
0436           1405   ;StopSigCount              Allocated with name '_DetermineMode_StopSigCount_1_86'
0436           1406   ;------------------------------------------------------------
0436           1407   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:389: void DetermineMode (void) {
0436           1408   ;        -----------------------------------------
0436           1409   ;         function DetermineMode
0436           1410   ;        -----------------------------------------
0436           1411   _DetermineMode:
0436           1412   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:394: ReadFrequency();
0436 120100    1413            lcall   _ReadFrequency
0439           1414   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:398: FreqBuffer[WriteCount]=frequency;
0439 E540      1415            mov     a,_WriteCount
043B 2540      1416            add     a,_WriteCount
043D 25E0      1417            add     a,acc
043F FA        1418            mov     r2,a
0440 2480      1419            add     a,#_FreqBuffer
0442 F8        1420            mov     r0,a
0443 A680      1421            mov     @r0,_frequency
0445 08        1422            inc     r0
0446 A681      1423            mov     @r0,(_frequency + 1)
0448 08        1424            inc     r0
0449 A682      1425            mov     @r0,(_frequency + 2)
044B 08        1426            inc     r0
044C A683      1427            mov     @r0,(_frequency + 3)
044E           1428   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:399: WriteCount++;
044E 0540      1429            inc     _WriteCount
0450           1430   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:400: if (WriteCount==4){
0450 7404      1431            mov     a,#0x04
0452 B54018    1432            cjne    a,_WriteCount,L020025?
0455           1433   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:401: WriteCount=0;
0455 754000    1434            mov     _WriteCount,#0x00
0458           1435   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:406: for (ReadCount=0; ReadCount<4; ReadCount++){
0458           1436   L020025?:
0458 754800    1437            mov     _DetermineMode_ForwardSigCount_1_86,#0x00
045B 75A800    1438            mov     _DetermineMode_StopSigCount_1_86,#0x00
045E 7C00      1439            mov     r4,#0x00
0460           1440   L020013?:
0460 BC0498    1441            cjne    r4,#0x04,L020031?
0463           1442   L020031?:
0463 4001      1443            jc      L020032?
0465 020100    1444            ljmp    L020016?
0468           1445   L020032?:
0468           1446   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:407: if (FreqBuffer[ReadCount]>(FRQFORWARD-1000) && FreqBuffer[ReadCount]<(FRQFORWARD+1000)){
0468 EC        1447            mov     a,r4
0469 2C        1448            add     a,r4
046A 25E0      1449            add     a,acc
046C FD        1450            mov     r5,a
046D 2480      1451            add     a,#_FreqBuffer
046F F8        1452            mov     r0,a
0470 8606      1453            mov     ar6,@r0
0472 08        1454            inc     r0
0473 8607      1455            mov     ar7,@r0
0475 08        1456            inc     r0
0476 8603      1457            mov     ar3,@r0
0478 08        1458            inc     r0
0479 8602      1459            mov     ar2,@r0
047B 18        1460            dec     r0
047C 18        1461            dec     r0
047D 18        1462            dec     r0
047E C004      1463            push    ar4
0480 C005      1464            push    ar5
0482 E4        1465            clr     a
0483 C0E0      1466            push    acc
0485 C0E0      1467            push    acc
0487 747A      1468            mov     a,#0x7A
0489 C0E0      1469            push    acc
048B 7446      1470            mov     a,#0x46
048D C0E0      1471            push    acc
048F 8E82      1472            mov     dpl,r6
0491 8F83      1473            mov     dph,r7
0493 8BF0      1474            mov     b,r3
0495 EA        1475            mov     a,r2
0496 120100    1476            lcall   ___fsgt
0499 AA82      1477            mov     r2,dpl
049B E581      1478            mov     a,sp
049D 24FC      1479            add     a,#0xfc
049F F581      1480            mov     sp,a
04A1 D005      1481            pop     ar5
04A3 D004      1482            pop     ar4
04A5 EA        1483            mov     a,r2
04A6 6001      1484            jz      L020004?
04A8 ED        1485            mov     a,r5
04A9 2480      1486            add     a,#_FreqBuffer
04AB F8        1487            mov     r0,a
04AC 8602      1488            mov     ar2,@r0
04AE 08        1489            inc     r0
04AF 8603      1490            mov     ar3,@r0
04B1 08        1491            inc     r0
04B2 8605      1492            mov     ar5,@r0
04B4 08        1493            inc     r0
04B5 8606      1494            mov     ar6,@r0
04B7 18        1495            dec     r0
04B8 18        1496            dec     r0
04B9 18        1497            dec     r0
04BA C004      1498            push    ar4
04BC E4        1499            clr     a
04BD C0E0      1500            push    acc
04BF 74A0      1501            mov     a,#0xA0
04C1 C0E0      1502            push    acc
04C3 748C      1503            mov     a,#0x8C
04C5 C0E0      1504            push    acc
04C7 7446      1505            mov     a,#0x46
04C9 C0E0      1506            push    acc
04CB 8A82      1507            mov     dpl,r2
04CD 8B83      1508            mov     dph,r3
04CF 8DF0      1509            mov     b,r5
04D1 EE        1510            mov     a,r6
04D2 120100    1511            lcall   ___fslt
04D5 AA82      1512            mov     r2,dpl
04D7 E581      1513            mov     a,sp
04D9 24FC      1514            add     a,#0xfc
04DB F581      1515            mov     sp,a
04DD D004      1516            pop     ar4
04DF EA        1517            mov     a,r2
04E0 6001      1518            jz      L020004?
04E2           1519   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:408: ForwardSigCount++;
04E2 0548      1520            inc     _DetermineMode_ForwardSigCount_1_86
04E4           1521   L020004?:
04E4           1522   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:410: if (FreqBuffer[ReadCount]>(FRQSTOP-1000) && FreqBuffer[ReadCount]<(FRQSTOP+1000)){
04E4 EC        1523            mov     a,r4
04E5 2C        1524            add     a,r4
04E6 25E0      1525            add     a,acc
04E8 FA        1526            mov     r2,a
04E9 2480      1527            add     a,#_FreqBuffer
04EB F8        1528            mov     r0,a
04EC 8603      1529            mov     ar3,@r0
04EE 08        1530            inc     r0
04EF 8605      1531            mov     ar5,@r0
04F1 08        1532            inc     r0
04F2 8606      1533            mov     ar6,@r0
04F4 08        1534            inc     r0
04F5 8607      1535            mov     ar7,@r0
04F7 18        1536            dec     r0
04F8 18        1537            dec     r0
04F9 18        1538            dec     r0
04FA C002      1539            push    ar2
04FC C004      1540            push    ar4
04FE E4        1541            clr     a
04FF C0E0      1542            push    acc
0501 7480      1543            mov     a,#0x80
0503 C0E0      1544            push    acc
0505 743B      1545            mov     a,#0x3B
0507 C0E0      1546            push    acc
0509 7446      1547            mov     a,#0x46
050B C0E0      1548            push    acc
050D 8B82      1549            mov     dpl,r3
050F 8D83      1550            mov     dph,r5
0511 8EF0      1551            mov     b,r6
0513 EF        1552            mov     a,r7
0514 120100    1553            lcall   ___fsgt
0517 AB82      1554            mov     r3,dpl
0519 E581      1555            mov     a,sp
051B 24FC      1556            add     a,#0xfc
051D F581      1557            mov     sp,a
051F D004      1558            pop     ar4
0521 D002      1559            pop     ar2
0523 EB        1560            mov     a,r3
0524 6001      1561            jz      L020015?
0526 EA        1562            mov     a,r2
0527 2480      1563            add     a,#_FreqBuffer
0529 F8        1564            mov     r0,a
052A 8602      1565            mov     ar2,@r0
052C 08        1566            inc     r0
052D 8603      1567            mov     ar3,@r0
052F 08        1568            inc     r0
0530 8605      1569            mov     ar5,@r0
0532 08        1570            inc     r0
0533 8606      1571            mov     ar6,@r0
0535 18        1572            dec     r0
0536 18        1573            dec     r0
0537 18        1574            dec     r0
0538 C004      1575            push    ar4
053A E4        1576            clr     a
053B C0E0      1577            push    acc
053D 74C0      1578            mov     a,#0xC0
053F C0E0      1579            push    acc
0541 745A      1580            mov     a,#0x5A
0543 C0E0      1581            push    acc
0545 7446      1582            mov     a,#0x46
0547 C0E0      1583            push    acc
0549 8A82      1584            mov     dpl,r2
054B 8B83      1585            mov     dph,r3
054D 8DF0      1586            mov     b,r5
054F EE        1587            mov     a,r6
0550 120100    1588            lcall   ___fslt
0553 AA82      1589            mov     r2,dpl
0555 E581      1590            mov     a,sp
0557 24FC      1591            add     a,#0xfc
0559 F581      1592            mov     sp,a
055B D004      1593            pop     ar4
055D EA        1594            mov     a,r2
055E 6001      1595            jz      L020015?
0560           1596   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:411: StopSigCount++;  
0560 05A8      1597            inc     _DetermineMode_StopSigCount_1_86
0562           1598   L020015?:
0562           1599   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:406: for (ReadCount=0; ReadCount<4; ReadCount++){
0562 0C        1600            inc     r4
0563 020100    1601            ljmp    L020013?
0566           1602   L020016?:
0566           1603   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:416: if (StopSigCount > 2){
0566 E5A8      1604            mov     a,_DetermineMode_StopSigCount_1_86
0568 24FD      1605            add     a,#0xff - 0x02
056A 5001      1606            jnc     L020010?
056C           1607   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:417: mode = STOP;
056C E4        1608            clr     a
056D F5C0      1609            mov     _mode,a
056F F5C1      1610            mov     (_mode + 1),a
0571           1611   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:418: return;
0571 22        1612            ret
0572           1613   L020010?:
0572           1614   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:422: if (ForwardSigCount > 2){
0572 E548      1615            mov     a,_DetermineMode_ForwardSigCount_1_86
0574 24FD      1616            add     a,#0xff - 0x02
0576 5001      1617            jnc     L020017?
0578           1618   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:423: mode = FORWARD;    
0578 75C003    1619            mov     _mode,#0x03
057B E4        1620            clr     a
057C F5C1      1621            mov     (_mode + 1),a
057E           1622   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:424: return;
057E           1623   L020017?:
057E 22        1624            ret
057F           1625   ;------------------------------------------------------------
057F           1626   ;Allocation info for local variables in function 'MotorControl'
057F           1627   ;------------------------------------------------------------
057F           1628   ;IndVolts                  Allocated with name '_MotorControl_IndVolts_1_93'
057F           1629   ;------------------------------------------------------------
057F           1630   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:435: void MotorControl (volatile float IndVolts[])
057F           1631   ;        -----------------------------------------
057F           1632   ;         function MotorControl
057F           1633   ;        -----------------------------------------
057F           1634   _MotorControl:
057F 8582F8    1635            mov     _MotorControl_IndVolts_1_93,dpl
0582 8583F9    1636            mov     (_MotorControl_IndVolts_1_93 + 1),dph
0585 85F0FA    1637            mov     (_MotorControl_IndVolts_1_93 + 2),b
0588           1638   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:438: switch (mode){
0588 C3        1639            clr     c
0589 7405      1640            mov     a,#0x05
058B 95C0      1641            subb    a,_mode
058D E4        1642            clr     a
058E 95C1      1643            subb    a,(_mode + 1)
0590 5001      1644            jnc     L021028?
0592 22        1645            ret
0593           1646   L021028?:
0593 E5C0      1647            mov     a,_mode
0595 25C0      1648            add     a,_mode
0597 25C0      1649            add     a,_mode
0599 90AC18    1650            mov     dptr,#L021029?
059C 73        1651            jmp     @a+dptr
059D           1652   L021029?:
059D 020100    1653            ljmp    L021015?
05A0 020100    1654            ljmp    L021016?
05A3 020100    1655            ljmp    L021017?
05A6 020100    1656            ljmp    L021001?
05A9 020100    1657            ljmp    L021008?
05AC 020100    1658            ljmp    L021018?
05AF           1659   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:440: case FORWARD:
05AF           1660   L021001?:
05AF           1661   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:441: if((IndVolts[0] - Vblue_middle) > Vblue_thresh){
05AF AAF8      1662            mov     r2,_MotorControl_IndVolts_1_93
05B1 ABF9      1663            mov     r3,(_MotorControl_IndVolts_1_93 + 1)
05B3 ACFA      1664            mov     r4,(_MotorControl_IndVolts_1_93 + 2)
05B5 8A82      1665            mov     dpl,r2
05B7 8B83      1666            mov     dph,r3
05B9 8CF0      1667            mov     b,r4
05BB 120100    1668            lcall   __gptrget
05BE FD        1669            mov     r5,a
05BF A3        1670            inc     dptr
05C0 120100    1671            lcall   __gptrget
05C3 FE        1672            mov     r6,a
05C4 A3        1673            inc     dptr
05C5 120100    1674            lcall   __gptrget
05C8 FF        1675            mov     r7,a
05C9 A3        1676            inc     dptr
05CA 120100    1677            lcall   __gptrget
05CD F8        1678            mov     r0,a
05CE C002      1679            push    ar2
05D0 C003      1680            push    ar3
05D2 C004      1681            push    ar4
05D4 7462      1682            mov     a,#0x62
05D6 C0E0      1683            push    acc
05D8 7410      1684            mov     a,#0x10
05DA C0E0      1685            push    acc
05DC 74F8      1686            mov     a,#0xF8
05DE C0E0      1687            push    acc
05E0 743E      1688            mov     a,#0x3E
05E2 C0E0      1689            push    acc
05E4 8D82      1690            mov     dpl,r5
05E6 8E83      1691            mov     dph,r6
05E8 8FF0      1692            mov     b,r7
05EA E8        1693            mov     a,r0
05EB 120100    1694            lcall   ___fssub
05EE AD82      1695            mov     r5,dpl
05F0 AE83      1696            mov     r6,dph
05F2 AFF0      1697            mov     r7,b
05F4 F8        1698            mov     r0,a
05F5 E581      1699            mov     a,sp
05F7 24FC      1700            add     a,#0xfc
05F9 F581      1701            mov     sp,a
05FB 74AC      1702            mov     a,#0xAC
05FD C0E0      1703            push    acc
05FF 741C      1704            mov     a,#0x1C
0601 C0E0      1705            push    acc
0603 74DA      1706            mov     a,#0xDA
0605 C0E0      1707            push    acc
0607 743D      1708            mov     a,#0x3D
0609 C0E0      1709            push    acc
060B 8D82      1710            mov     dpl,r5
060D 8E83      1711            mov     dph,r6
060F 8FF0      1712            mov     b,r7
0611 E8        1713            mov     a,r0
0612 120100    1714            lcall   ___fsgt
0615 AD82      1715            mov     r5,dpl
0617 E581      1716            mov     a,sp
0619 24FC      1717            add     a,#0xfc
061B F581      1718            mov     sp,a
061D D004      1719            pop     ar4
061F D003      1720            pop     ar3
0621 D002      1721            pop     ar2
0623 ED        1722            mov     a,r5
0624 6001      1723            jz      L021006?
0626           1724   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:442: pwm_BLU1= 0;
0626 75A800    1725            mov     _pwm_BLU1,#0x00
0629           1726   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:443: pwm_BLU0 = 0;
0629 75E800    1727            mov     _pwm_BLU0,#0x00
062C           1728   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:444: pwm_RED1 = power;
062C 852828    1729            mov     _pwm_RED1,_power
062F           1730   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:445: pwm_RED0 = 0; 
062F 756800    1731            mov     _pwm_RED0,#0x00
0632 22        1732            ret
0633           1733   L021006?:
0633           1734   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:448: else if( (IndVolts[1] - Vred_middle) > Vred_thresh ){
0633 7404      1735            mov     a,#0x04
0635 2A        1736            add     a,r2
0636 FA        1737            mov     r2,a
0637 E4        1738            clr     a
0638 3B        1739            addc    a,r3
0639 FB        1740            mov     r3,a
063A 8A82      1741            mov     dpl,r2
063C 8B83      1742            mov     dph,r3
063E 8CF0      1743            mov     b,r4
0640 120100    1744            lcall   __gptrget
0643 FA        1745            mov     r2,a
0644 A3        1746            inc     dptr
0645 120100    1747            lcall   __gptrget
0648 FB        1748            mov     r3,a
0649 A3        1749            inc     dptr
064A 120100    1750            lcall   __gptrget
064D FC        1751            mov     r4,a
064E A3        1752            inc     dptr
064F 120100    1753            lcall   __gptrget
0652 FD        1754            mov     r5,a
0653 741B      1755            mov     a,#0x1B
0655 C0E0      1756            push    acc
0657 742F      1757            mov     a,#0x2F
0659 C0E0      1758            push    acc
065B 74CD      1759            mov     a,#0xCD
065D C0E0      1760            push    acc
065F 743E      1761            mov     a,#0x3E
0661 C0E0      1762            push    acc
0663 8A82      1763            mov     dpl,r2
0665 8B83      1764            mov     dph,r3
0667 8CF0      1765            mov     b,r4
0669 ED        1766            mov     a,r5
066A 120100    1767            lcall   ___fssub
066D AA82      1768            mov     r2,dpl
066F AB83      1769            mov     r3,dph
0671 ACF0      1770            mov     r4,b
0673 FD        1771            mov     r5,a
0674 E581      1772            mov     a,sp
0676 24FC      1773            add     a,#0xfc
0678 F581      1774            mov     sp,a
067A 74AC      1775            mov     a,#0xAC
067C C0E0      1776            push    acc
067E 741C      1777            mov     a,#0x1C
0680 C0E0      1778            push    acc
0682 745A      1779            mov     a,#0x5A
0684 C0E0      1780            push    acc
0686 743D      1781            mov     a,#0x3D
0688 C0E0      1782            push    acc
068A 8A82      1783            mov     dpl,r2
068C 8B83      1784            mov     dph,r3
068E 8CF0      1785            mov     b,r4
0690 ED        1786            mov     a,r5
0691 120100    1787            lcall   ___fsgt
0694 AA82      1788            mov     r2,dpl
0696 E581      1789            mov     a,sp
0698 24FC      1790            add     a,#0xfc
069A F581      1791            mov     sp,a
069C EA        1792            mov     a,r2
069D 6001      1793            jz      L021003?
069F           1794   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:449: pwm_BLU1=power;
069F 8528A8    1795            mov     _pwm_BLU1,_power
06A2           1796   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:450: pwm_BLU0=0;
06A2 75E800    1797            mov     _pwm_BLU0,#0x00
06A5           1798   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:451: pwm_RED1=0;
06A5 752800    1799            mov     _pwm_RED1,#0x00
06A8           1800   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:452: pwm_RED0=0;
06A8 756800    1801            mov     _pwm_RED0,#0x00
06AB 22        1802            ret
06AC           1803   L021003?:
06AC           1804   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:455: pwm_BLU1 = power;
06AC 8528A8    1805            mov     _pwm_BLU1,_power
06AF           1806   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:456: pwm_BLU0 = 0;
06AF 75E800    1807            mov     _pwm_BLU0,#0x00
06B2           1808   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:457: pwm_RED1 = power;
06B2 852828    1809            mov     _pwm_RED1,_power
06B5           1810   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:458: pwm_RED0 = 0;
06B5 756800    1811            mov     _pwm_RED0,#0x00
06B8           1812   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:460: break;
06B8 22        1813            ret
06B9           1814   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:463: case BACKWARD:
06B9           1815   L021008?:
06B9           1816   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:464: if((IndVolts[0] - Vblue_middle) > Vblue_thresh){
06B9 AAF8      1817            mov     r2,_MotorControl_IndVolts_1_93
06BB ABF9      1818            mov     r3,(_MotorControl_IndVolts_1_93 + 1)
06BD ACFA      1819            mov     r4,(_MotorControl_IndVolts_1_93 + 2)
06BF 8A82      1820            mov     dpl,r2
06C1 8B83      1821            mov     dph,r3
06C3 8CF0      1822            mov     b,r4
06C5 120100    1823            lcall   __gptrget
06C8 FD        1824            mov     r5,a
06C9 A3        1825            inc     dptr
06CA 120100    1826            lcall   __gptrget
06CD FE        1827            mov     r6,a
06CE A3        1828            inc     dptr
06CF 120100    1829            lcall   __gptrget
06D2 FF        1830            mov     r7,a
06D3 A3        1831            inc     dptr
06D4 120100    1832            lcall   __gptrget
06D7 F8        1833            mov     r0,a
06D8 C002      1834            push    ar2
06DA C003      1835            push    ar3
06DC C004      1836            push    ar4
06DE 7462      1837            mov     a,#0x62
06E0 C0E0      1838            push    acc
06E2 7410      1839            mov     a,#0x10
06E4 C0E0      1840            push    acc
06E6 74F8      1841            mov     a,#0xF8
06E8 C0E0      1842            push    acc
06EA 743E      1843            mov     a,#0x3E
06EC C0E0      1844            push    acc
06EE 8D82      1845            mov     dpl,r5
06F0 8E83      1846            mov     dph,r6
06F2 8FF0      1847            mov     b,r7
06F4 E8        1848            mov     a,r0
06F5 120100    1849            lcall   ___fssub
06F8 AD82      1850            mov     r5,dpl
06FA AE83      1851            mov     r6,dph
06FC AFF0      1852            mov     r7,b
06FE F8        1853            mov     r0,a
06FF E581      1854            mov     a,sp
0701 24FC      1855            add     a,#0xfc
0703 F581      1856            mov     sp,a
0705 74AC      1857            mov     a,#0xAC
0707 C0E0      1858            push    acc
0709 741C      1859            mov     a,#0x1C
070B C0E0      1860            push    acc
070D 74DA      1861            mov     a,#0xDA
070F C0E0      1862            push    acc
0711 743D      1863            mov     a,#0x3D
0713 C0E0      1864            push    acc
0715 8D82      1865            mov     dpl,r5
0717 8E83      1866            mov     dph,r6
0719 8FF0      1867            mov     b,r7
071B E8        1868            mov     a,r0
071C 120100    1869            lcall   ___fsgt
071F AD82      1870            mov     r5,dpl
0721 E581      1871            mov     a,sp
0723 24FC      1872            add     a,#0xfc
0725 F581      1873            mov     sp,a
0727 D004      1874            pop     ar4
0729 D003      1875            pop     ar3
072B D002      1876            pop     ar2
072D ED        1877            mov     a,r5
072E 6001      1878            jz      L021013?
0730           1879   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:465: pwm_BLU1= 0;
0730 75A800    1880            mov     _pwm_BLU1,#0x00
0733           1881   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:466: pwm_BLU0 = 0;
0733 75E800    1882            mov     _pwm_BLU0,#0x00
0736           1883   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:467: pwm_RED1 = 0;
0736 752800    1884            mov     _pwm_RED1,#0x00
0739           1885   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:468: pwm_RED0 = power; 
0739 852868    1886            mov     _pwm_RED0,_power
073C 22        1887            ret
073D           1888   L021013?:
073D           1889   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:471: else if( (IndVolts[1] - Vred_middle) > Vred_thresh ){
073D 7404      1890            mov     a,#0x04
073F 2A        1891            add     a,r2
0740 FA        1892            mov     r2,a
0741 E4        1893            clr     a
0742 3B        1894            addc    a,r3
0743 FB        1895            mov     r3,a
0744 8A82      1896            mov     dpl,r2
0746 8B83      1897            mov     dph,r3
0748 8CF0      1898            mov     b,r4
074A 120100    1899            lcall   __gptrget
074D FA        1900            mov     r2,a
074E A3        1901            inc     dptr
074F 120100    1902            lcall   __gptrget
0752 FB        1903            mov     r3,a
0753 A3        1904            inc     dptr
0754 120100    1905            lcall   __gptrget
0757 FC        1906            mov     r4,a
0758 A3        1907            inc     dptr
0759 120100    1908            lcall   __gptrget
075C FD        1909            mov     r5,a
075D 741B      1910            mov     a,#0x1B
075F C0E0      1911            push    acc
0761 742F      1912            mov     a,#0x2F
0763 C0E0      1913            push    acc
0765 74CD      1914            mov     a,#0xCD
0767 C0E0      1915            push    acc
0769 743E      1916            mov     a,#0x3E
076B C0E0      1917            push    acc
076D 8A82      1918            mov     dpl,r2
076F 8B83      1919            mov     dph,r3
0771 8CF0      1920            mov     b,r4
0773 ED        1921            mov     a,r5
0774 120100    1922            lcall   ___fssub
0777 AA82      1923            mov     r2,dpl
0779 AB83      1924            mov     r3,dph
077B ACF0      1925            mov     r4,b
077D FD        1926            mov     r5,a
077E E581      1927            mov     a,sp
0780 24FC      1928            add     a,#0xfc
0782 F581      1929            mov     sp,a
0784 74AC      1930            mov     a,#0xAC
0786 C0E0      1931            push    acc
0788 741C      1932            mov     a,#0x1C
078A C0E0      1933            push    acc
078C 745A      1934            mov     a,#0x5A
078E C0E0      1935            push    acc
0790 743D      1936            mov     a,#0x3D
0792 C0E0      1937            push    acc
0794 8A82      1938            mov     dpl,r2
0796 8B83      1939            mov     dph,r3
0798 8CF0      1940            mov     b,r4
079A ED        1941            mov     a,r5
079B 120100    1942            lcall   ___fsgt
079E AA82      1943            mov     r2,dpl
07A0 E581      1944            mov     a,sp
07A2 24FC      1945            add     a,#0xfc
07A4 F581      1946            mov     sp,a
07A6 EA        1947            mov     a,r2
07A7 6001      1948            jz      L021010?
07A9           1949   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:472: pwm_BLU1=0;
07A9 75A800    1950            mov     _pwm_BLU1,#0x00
07AC           1951   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:473: pwm_BLU0=power;
07AC 8528E8    1952            mov     _pwm_BLU0,_power
07AF           1953   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:474: pwm_RED1=0;
07AF 752800    1954            mov     _pwm_RED1,#0x00
07B2           1955   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:475: pwm_RED0=0;
07B2 756800    1956            mov     _pwm_RED0,#0x00
07B5 22        1957            ret
07B6           1958   L021010?:
07B6           1959   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:478: pwm_BLU1 = power;
07B6 8528A8    1960            mov     _pwm_BLU1,_power
07B9           1961   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:479: pwm_BLU0 = 0;
07B9 75E800    1962            mov     _pwm_BLU0,#0x00
07BC           1963   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:480: pwm_RED1 = power;
07BC 852828    1964            mov     _pwm_RED1,_power
07BF           1965   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:481: pwm_RED0 = 0;
07BF 756800    1966            mov     _pwm_RED0,#0x00
07C2           1967   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:483: break;
07C2           1968   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:487: case STOP:
07C2 22        1969            ret
07C3           1970   L021015?:
07C3           1971   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:488: pwm_BLU1 = 0;
07C3 75A800    1972            mov     _pwm_BLU1,#0x00
07C6           1973   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:489: pwm_BLU0 = 0;
07C6 75E800    1974            mov     _pwm_BLU0,#0x00
07C9           1975   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:490: pwm_RED1 = 0;
07C9 752800    1976            mov     _pwm_RED1,#0x00
07CC           1977   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:491: pwm_RED0 = 0;
07CC 756800    1978            mov     _pwm_RED0,#0x00
07CF           1979   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:492: break;
07CF           1980   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:496: case NITL:
07CF 22        1981            ret
07D0           1982   L021016?:
07D0           1983   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:497: pwm_BLU1 = 0;
07D0           1984   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:498: pwm_BLU0 = 0;
07D0           1985   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:499: pwm_RED1 = 3*power;
07D0 E4        1986            clr     a
07D1 F5A8      1987            mov     _pwm_BLU1,a
07D3 F5E8      1988            mov     _pwm_BLU0,a
07D5 E528      1989            mov     a,_power
07D7 75F003    1990            mov     b,#0x03
07DA A4        1991            mul     ab
07DB F528      1992            mov     _pwm_RED1,a
07DD           1993   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:500: pwm_RED0 = 0;
07DD 756800    1994            mov     _pwm_RED0,#0x00
07E0           1995   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:501: waitms(1000);
07E0 9003E8    1996            mov     dptr,#0x03E8
07E3 120100    1997            lcall   _waitms
07E6           1998   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:502: mode=STOP;
07E6 E4        1999            clr     a
07E7 F5C0      2000            mov     _mode,a
07E9 F5C1      2001            mov     (_mode + 1),a
07EB           2002   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:503: break;
07EB           2003   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:507: case NITR:
07EB 22        2004            ret
07EC           2005   L021017?:
07EC           2006   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:508: pwm_BLU1 = 3*power;
07EC E528      2007            mov     a,_power
07EE 75F003    2008            mov     b,#0x03
07F1 A4        2009            mul     ab
07F2 F5A8      2010            mov     _pwm_BLU1,a
07F4           2011   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:509: pwm_BLU0 = 0;
07F4 75E800    2012            mov     _pwm_BLU0,#0x00
07F7           2013   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:510: pwm_RED1 = 0;
07F7 752800    2014            mov     _pwm_RED1,#0x00
07FA           2015   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:511: pwm_RED0 = 0;
07FA 756800    2016            mov     _pwm_RED0,#0x00
07FD           2017   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:512: waitms(1000);
07FD 9003E8    2018            mov     dptr,#0x03E8
0800 120100    2019            lcall   _waitms
0803           2020   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:513: mode = STOP;
0803 E4        2021            clr     a
0804 F5C0      2022            mov     _mode,a
0806 F5C1      2023            mov     (_mode + 1),a
0808           2024   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:514: break;
0808           2025   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:518: case ROTATE:
0808 22        2026            ret
0809           2027   L021018?:
0809           2028   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:519: pwm_BLU1 = 3*power;
0809 E528      2029            mov     a,_power
080B 75F003    2030            mov     b,#0x03
080E A4        2031            mul     ab
080F F5A8      2032            mov     _pwm_BLU1,a
0811           2033   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:520: pwm_BLU0 = 0;
0811           2034   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:521: pwm_RED1 = 0;
0811           2035   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:522: pwm_RED0 = 3*power;
0811 E4        2036            clr     a
0812 F5E8      2037            mov     _pwm_BLU0,a
0814 F528      2038            mov     _pwm_RED1,a
0816 E528      2039            mov     a,_power
0818 75F003    2040            mov     b,#0x03
081B A4        2041            mul     ab
081C F568      2042            mov     _pwm_RED0,a
081E           2043   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:523: waitms(1200);
081E 9004B0    2044            mov     dptr,#0x04B0
0821 120100    2045            lcall   _waitms
0824           2046   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:524: mode = STOP;
0824 E4        2047            clr     a
0825 F5C0      2048            mov     _mode,a
0827 F5C1      2049            mov     (_mode + 1),a
0829           2050   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:530: }
0829 22        2051            ret
082A           2052   ;------------------------------------------------------------
082A           2053   ;Allocation info for local variables in function 'DebuggingFctn'
082A           2054   ;------------------------------------------------------------
082A           2055   ;------------------------------------------------------------
082A           2056   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:541: void DebuggingFctn (void)
082A           2057   ;        -----------------------------------------
082A           2058   ;         function DebuggingFctn
082A           2059   ;        -----------------------------------------
082A           2060   _DebuggingFctn:
082A           2061   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:543: sprintf(freqstring, "FR=%5.0f M = %d", frequency, mode);
082A C0C0      2062            push    _mode
082C C0C1      2063            push    (_mode + 1)
082E C080      2064            push    _frequency
0830 C081      2065            push    (_frequency + 1)
0832 C082      2066            push    (_frequency + 2)
0834 C083      2067            push    (_frequency + 3)
0836 7418      2068            mov     a,#__str_1
0838 C0E0      2069            push    acc
083A 74AF      2070            mov     a,#(__str_1 >> 8)
083C C0E0      2071            push    acc
083E 7480      2072            mov     a,#0x80
0840 C0E0      2073            push    acc
0842 74C0      2074            mov     a,#_freqstring
0844 C0E0      2075            push    acc
0846 7417      2076            mov     a,#(_freqstring >> 8)
0848 C0E0      2077            push    acc
084A 7440      2078            mov     a,#0x40
084C C0E0      2079            push    acc
084E 120100    2080            lcall   _sprintf
0851 E581      2081            mov     a,sp
0853 24F4      2082            add     a,#0xf4
0855 F581      2083            mov     sp,a
0857           2084   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:544: LCDprint(freqstring, 1,1);
0857 758001    2085            mov     _LCDprint_PARM_2,#0x01
085A D230      2086            setb    _LCDprint_PARM_3
085C 9017C0    2087            mov     dptr,#_freqstring
085F 75F040    2088            mov     b,#0x40
0862 020100    2089            ljmp    _LCDprint
0865           2090   ;------------------------------------------------------------
0865           2091   ;Allocation info for local variables in function 'main'
0865           2092   ;------------------------------------------------------------
0865           2093   ;IndVolts                  Allocated with name '_main_IndVolts_1_105'
0865           2094   ;------------------------------------------------------------
0865           2095   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:551: void main (void)
0865           2096   ;        -----------------------------------------
0865           2097   ;         function main
0865           2098   ;        -----------------------------------------
0865           2099   _main:
0865           2100   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:558: TIMER0_Init(); // Initialize timer 0 to read the frequency of the fm signal
0865 120100    2101            lcall   _TIMER0_Init
0868           2102   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:559: TIMER2_Init(); // Initialize timer 2 for periodic interrupts used for motor control
0868 120100    2103            lcall   _TIMER2_Init
086B           2104   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:560: LCD_4BIT(); // Initialize the LCD
086B 120100    2105            lcall   _LCD_4BIT
086E           2106   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:561: EA=1; // Enable interrupts
086E D2AF      2107            setb    _EA
0870           2108   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:563: InitPinADC(1, 4); // Configure P1.4 as analog input
0870 755004    2109            mov     _InitPinADC_PARM_2,#0x04
0873 758201    2110            mov     dpl,#0x01
0876 120100    2111            lcall   _InitPinADC
0879           2112   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:564: InitPinADC(2, 0); // Configure P2.0 as analog input
0879 755000    2113            mov     _InitPinADC_PARM_2,#0x00
087C 758202    2114            mov     dpl,#0x02
087F 120100    2115            lcall   _InitPinADC
0882           2116   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:565: InitPinADC(2, 7); // Configure P2.7 as analog input
0882 755007    2117            mov     _InitPinADC_PARM_2,#0x07
0885 758202    2118            mov     dpl,#0x02
0888 120100    2119            lcall   _InitPinADC
088B           2120   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:566: InitADC();
088B 120100    2121            lcall   _InitADC
088E           2122   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:567: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
088E 7498      2123            mov     a,#__str_2
0890 C0E0      2124            push    acc
0892 74AF      2125            mov     a,#(__str_2 >> 8)
0894 C0E0      2126            push    acc
0896 7480      2127            mov     a,#0x80
0898 C0E0      2128            push    acc
089A 120100    2129            lcall   _printf
089D 1581      2130            dec     sp
089F 1581      2131            dec     sp
08A1 1581      2132            dec     sp
08A3           2133   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:575: while(1)
08A3           2134   L023004?:
08A3           2135   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:581: if (millisecond%100==0){
08A3 750064    2136            mov     __moduint_PARM_2,#0x64
08A6 E4        2137            clr     a
08A7 F501      2138            mov     (__moduint_PARM_2 + 1),a
08A9 850082    2139            mov     dpl,_millisecond
08AC 850183    2140            mov     dph,(_millisecond + 1)
08AF 120100    2141            lcall   __moduint
08B2 E582      2142            mov     a,dpl
08B4 8583F0    2143            mov     b,dph
08B7 45F0      2144            orl     a,b
08B9 7001      2145            jnz     L023002?
08BB           2146   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:582: DetermineMode();
08BB 120100    2147            lcall   _DetermineMode
08BE           2148   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:583: DebuggingFctn(); // (For debugging only) Show the user current command of the vehicle
08BE 120100    2149            lcall   _DebuggingFctn
08C1           2150   L023002?:
08C1           2151   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:589: IndVolts[0] = Volts_at_Pin(LQFP32_MUX_P2_7);
08C1 75820F    2152            mov     dpl,#0x0F
08C4 120100    2153            lcall   _Volts_at_Pin
08C7 AA82      2154            mov     r2,dpl
08C9 AB83      2155            mov     r3,dph
08CB ACF0      2156            mov     r4,b
08CD FD        2157            mov     r5,a
08CE 8A48      2158            mov     _main_IndVolts_1_105,r2
08D0 8B49      2159            mov     (_main_IndVolts_1_105 + 1),r3
08D2 8C4A      2160            mov     (_main_IndVolts_1_105 + 2),r4
08D4 8D4B      2161            mov     (_main_IndVolts_1_105 + 3),r5
08D6           2162   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:590: IndVolts[1] = Volts_at_Pin(LQFP32_MUX_P1_4);
08D6 758204    2163            mov     dpl,#0x04
08D9 120100    2164            lcall   _Volts_at_Pin
08DC AA82      2165            mov     r2,dpl
08DE AB83      2166            mov     r3,dph
08E0 ACF0      2167            mov     r4,b
08E2 FD        2168            mov     r5,a
08E3 8A4C      2169            mov     (_main_IndVolts_1_105 + 0x0004),r2
08E5 8B4D      2170            mov     ((_main_IndVolts_1_105 + 0x0004) + 1),r3
08E7 8C4E      2171            mov     ((_main_IndVolts_1_105 + 0x0004) + 2),r4
08E9 8D4F      2172            mov     ((_main_IndVolts_1_105 + 0x0004) + 3),r5
08EB           2173   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:591: IndVolts[2] = Volts_at_Pin(LQFP32_MUX_P2_0);
08EB 758208    2174            mov     dpl,#0x08
08EE 120100    2175            lcall   _Volts_at_Pin
08F1 AA82      2176            mov     r2,dpl
08F3 AB83      2177            mov     r3,dph
08F5 ACF0      2178            mov     r4,b
08F7 FD        2179            mov     r5,a
08F8 8A50      2180            mov     (_main_IndVolts_1_105 + 0x0008),r2
08FA 8B51      2181            mov     ((_main_IndVolts_1_105 + 0x0008) + 1),r3
08FC 8C52      2182            mov     ((_main_IndVolts_1_105 + 0x0008) + 2),r4
08FE 8D53      2183            mov     ((_main_IndVolts_1_105 + 0x0008) + 3),r5
0900           2184   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:595: MotorControl(IndVolts);
0900 909D48    2185            mov     dptr,#_main_IndVolts_1_105
0903 75F040    2186            mov     b,#0x40
0906 120100    2187            lcall   _MotorControl
0909           2188   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:600: waitms(20);
0909 900014    2189            mov     dptr,#0x0014
090C 120100    2190            lcall   _waitms
090F           2191   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:601: millisecond = millisecond + 20;
090F 7414      2192            mov     a,#0x14
0911 2500      2193            add     a,_millisecond
0913 F500      2194            mov     _millisecond,a
0915 E4        2195            clr     a
0916 3501      2196            addc    a,(_millisecond + 1)
0918 F501      2197            mov     (_millisecond + 1),a
091A 020100    2198            ljmp    L023004?
091D           2199            rseg R_CSEG
091D           2200   
0000           2201            rseg R_XINIT
0000           2202   
0000           2203            rseg R_CONST
0000           2204   __str_0:
0000 20202020  2205            db '                '
     20202020
     20202020
     20202020
0010 00        2206            db 0x00
0011           2207   __str_1:
0011 46523D25  2208            db 'FR=%5.0f M = %d'
     352E3066
     204D203D
     202564
0020 00        2209            db 0x00
0021           2210   __str_2:
0021 1B        2211            db 0x1B
0022 5B324A    2212            db '[2J'
0025 00        2213            db 0x00
0026           2214   
002E           2215            CSEG
002E           2216   
002E           2217   end
