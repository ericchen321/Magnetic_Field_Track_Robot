0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Tue Apr 04 06:04:20 2017
0000              5   ;--------------------------------------------------------
                  5   $name Receiver
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _DebuggingFctn
0000             30            public _MotorControl
0000             31            public _DetermineMode
0000             32            public _ReadPeriod
0000             33            public _Clean_LCD
0000             34            public _LCDprint
0000             35            public _LCD_4BIT
0000             36            public _WriteCommand
0000             37            public _WriteData
0000             38            public _LCD_byte
0000             39            public _LCD_pulse
0000             40            public _Timer2_ISR
0000             41            public _Volts_at_Pin
0000             42            public _ADC_at_Pin
0000             43            public _InitPinADC
0000             44            public _InitADC
0000             45            public _TIMER2_Init
0000             46            public _TIMER0_Init
0000             47            public _waitms
0000             48            public _Timer3us
0000             49            public __c51_external_startup
0000             50            public _LCDprint_PARM_3
0000             51            public _LCDprint_PARM_2
0000             52            public _debugstring
0000             53            public _period
0000             54            public _millisecond
0000             55            public _WriteCount
0000             56            public _mode
0000             57            public _overflow_count
0000             58            public _dirout
0000             59            public _pwm_RED1
0000             60            public _pwm_RED0
0000             61            public _pwm_BLU1
0000             62            public _pwm_BLU0
0000             63            public _power
0000             64            public _pwm_count
0000             65   ;--------------------------------------------------------
0000             66   ; Special Function Registers
0000             67   ;--------------------------------------------------------
0000             68   _P0             DATA 0x80
0000             69   _SP             DATA 0x81
0000             70   _DPL            DATA 0x82
0000             71   _DPH            DATA 0x83
0000             72   _EMI0TC         DATA 0x84
0000             73   _EMI0CF         DATA 0x85
0000             74   _OSCLCN         DATA 0x86
0000             75   _PCON           DATA 0x87
0000             76   _TCON           DATA 0x88
0000             77   _TMOD           DATA 0x89
0000             78   _TL0            DATA 0x8a
0000             79   _TL1            DATA 0x8b
0000             80   _TH0            DATA 0x8c
0000             81   _TH1            DATA 0x8d
0000             82   _CKCON          DATA 0x8e
0000             83   _PSCTL          DATA 0x8f
0000             84   _P1             DATA 0x90
0000             85   _TMR3CN         DATA 0x91
0000             86   _TMR4CN         DATA 0x91
0000             87   _TMR3RLL        DATA 0x92
0000             88   _TMR4RLL        DATA 0x92
0000             89   _TMR3RLH        DATA 0x93
0000             90   _TMR4RLH        DATA 0x93
0000             91   _TMR3L          DATA 0x94
0000             92   _TMR4L          DATA 0x94
0000             93   _TMR3H          DATA 0x95
0000             94   _TMR4H          DATA 0x95
0000             95   _USB0ADR        DATA 0x96
0000             96   _USB0DAT        DATA 0x97
0000             97   _SCON           DATA 0x98
0000             98   _SCON0          DATA 0x98
0000             99   _SBUF           DATA 0x99
0000            100   _SBUF0          DATA 0x99
0000            101   _CPT1CN         DATA 0x9a
0000            102   _CPT0CN         DATA 0x9b
0000            103   _CPT1MD         DATA 0x9c
0000            104   _CPT0MD         DATA 0x9d
0000            105   _CPT1MX         DATA 0x9e
0000            106   _CPT0MX         DATA 0x9f
0000            107   _P2             DATA 0xa0
0000            108   _SPI0CFG        DATA 0xa1
0000            109   _SPI0CKR        DATA 0xa2
0000            110   _SPI0DAT        DATA 0xa3
0000            111   _P0MDOUT        DATA 0xa4
0000            112   _P1MDOUT        DATA 0xa5
0000            113   _P2MDOUT        DATA 0xa6
0000            114   _P3MDOUT        DATA 0xa7
0000            115   _IE             DATA 0xa8
0000            116   _CLKSEL         DATA 0xa9
0000            117   _EMI0CN         DATA 0xaa
0000            118   __XPAGE         DATA 0xaa
0000            119   _SBCON1         DATA 0xac
0000            120   _P4MDOUT        DATA 0xae
0000            121   _PFE0CN         DATA 0xaf
0000            122   _P3             DATA 0xb0
0000            123   _OSCXCN         DATA 0xb1
0000            124   _OSCICN         DATA 0xb2
0000            125   _OSCICL         DATA 0xb3
0000            126   _SBRLL1         DATA 0xb4
0000            127   _SBRLH1         DATA 0xb5
0000            128   _FLSCL          DATA 0xb6
0000            129   _FLKEY          DATA 0xb7
0000            130   _IP             DATA 0xb8
0000            131   _CLKMUL         DATA 0xb9
0000            132   _SMBTC          DATA 0xb9
0000            133   _AMX0N          DATA 0xba
0000            134   _AMX0P          DATA 0xbb
0000            135   _ADC0CF         DATA 0xbc
0000            136   _ADC0L          DATA 0xbd
0000            137   _ADC0H          DATA 0xbe
0000            138   _SFRPAGE        DATA 0xbf
0000            139   _SMB0CN         DATA 0xc0
0000            140   _SMB1CN         DATA 0xc0
0000            141   _SMB0CF         DATA 0xc1
0000            142   _SMB1CF         DATA 0xc1
0000            143   _SMB0DAT        DATA 0xc2
0000            144   _SMB1DAT        DATA 0xc2
0000            145   _ADC0GTL        DATA 0xc3
0000            146   _ADC0GTH        DATA 0xc4
0000            147   _ADC0LTL        DATA 0xc5
0000            148   _ADC0LTH        DATA 0xc6
0000            149   _P4             DATA 0xc7
0000            150   _TMR2CN         DATA 0xc8
0000            151   _TMR5CN         DATA 0xc8
0000            152   _REG01CN        DATA 0xc9
0000            153   _TMR2RLL        DATA 0xca
0000            154   _TMR5RLL        DATA 0xca
0000            155   _TMR2RLH        DATA 0xcb
0000            156   _TMR5RLH        DATA 0xcb
0000            157   _TMR2L          DATA 0xcc
0000            158   _TMR5L          DATA 0xcc
0000            159   _TMR2H          DATA 0xcd
0000            160   _TMR5H          DATA 0xcd
0000            161   _SMB0ADM        DATA 0xce
0000            162   _SMB1ADM        DATA 0xce
0000            163   _SMB0ADR        DATA 0xcf
0000            164   _SMB1ADR        DATA 0xcf
0000            165   _PSW            DATA 0xd0
0000            166   _REF0CN         DATA 0xd1
0000            167   _SCON1          DATA 0xd2
0000            168   _SBUF1          DATA 0xd3
0000            169   _P0SKIP         DATA 0xd4
0000            170   _P1SKIP         DATA 0xd5
0000            171   _P2SKIP         DATA 0xd6
0000            172   _USB0XCN        DATA 0xd7
0000            173   _PCA0CN         DATA 0xd8
0000            174   _PCA0MD         DATA 0xd9
0000            175   _PCA0CPM0       DATA 0xda
0000            176   _PCA0CPM1       DATA 0xdb
0000            177   _PCA0CPM2       DATA 0xdc
0000            178   _PCA0CPM3       DATA 0xdd
0000            179   _PCA0CPM4       DATA 0xde
0000            180   _P3SKIP         DATA 0xdf
0000            181   _ACC            DATA 0xe0
0000            182   _XBR0           DATA 0xe1
0000            183   _XBR1           DATA 0xe2
0000            184   _XBR2           DATA 0xe3
0000            185   _IT01CF         DATA 0xe4
0000            186   _CKCON1         DATA 0xe4
0000            187   _SMOD1          DATA 0xe5
0000            188   _EIE1           DATA 0xe6
0000            189   _EIE2           DATA 0xe7
0000            190   _ADC0CN         DATA 0xe8
0000            191   _PCA0CPL1       DATA 0xe9
0000            192   _PCA0CPH1       DATA 0xea
0000            193   _PCA0CPL2       DATA 0xeb
0000            194   _PCA0CPH2       DATA 0xec
0000            195   _PCA0CPL3       DATA 0xed
0000            196   _PCA0CPH3       DATA 0xee
0000            197   _RSTSRC         DATA 0xef
0000            198   _B              DATA 0xf0
0000            199   _P0MDIN         DATA 0xf1
0000            200   _P1MDIN         DATA 0xf2
0000            201   _P2MDIN         DATA 0xf3
0000            202   _P3MDIN         DATA 0xf4
0000            203   _P4MDIN         DATA 0xf5
0000            204   _EIP1           DATA 0xf6
0000            205   _EIP2           DATA 0xf7
0000            206   _SPI0CN         DATA 0xf8
0000            207   _PCA0L          DATA 0xf9
0000            208   _PCA0H          DATA 0xfa
0000            209   _PCA0CPL0       DATA 0xfb
0000            210   _PCA0CPH0       DATA 0xfc
0000            211   _PCA0CPL4       DATA 0xfd
0000            212   _PCA0CPH4       DATA 0xfe
0000            213   _VDM0CN         DATA 0xff
0000            214   _DPTR           DATA 0x8382
0000            215   _TMR2RL         DATA 0xcbca
0000            216   _TMR3RL         DATA 0x9392
0000            217   _TMR4RL         DATA 0x9392
0000            218   _TMR5RL         DATA 0xcbca
0000            219   _TMR2           DATA 0xcdcc
0000            220   _TMR3           DATA 0x9594
0000            221   _TMR4           DATA 0x9594
0000            222   _TMR5           DATA 0xcdcc
0000            223   _SBRL1          DATA 0xb5b4
0000            224   _ADC0           DATA 0xbebd
0000            225   _ADC0GT         DATA 0xc4c3
0000            226   _ADC0LT         DATA 0xc6c5
0000            227   _PCA0           DATA 0xfaf9
0000            228   _PCA0CP1        DATA 0xeae9
0000            229   _PCA0CP2        DATA 0xeceb
0000            230   _PCA0CP3        DATA 0xeeed
0000            231   _PCA0CP0        DATA 0xfcfb
0000            232   _PCA0CP4        DATA 0xfefd
0000            233   ;--------------------------------------------------------
0000            234   ; special function bits
0000            235   ;--------------------------------------------------------
0000            236   _P0_0           BIT 0x80
0000            237   _P0_1           BIT 0x81
0000            238   _P0_2           BIT 0x82
0000            239   _P0_3           BIT 0x83
0000            240   _P0_4           BIT 0x84
0000            241   _P0_5           BIT 0x85
0000            242   _P0_6           BIT 0x86
0000            243   _P0_7           BIT 0x87
0000            244   _TF1            BIT 0x8f
0000            245   _TR1            BIT 0x8e
0000            246   _TF0            BIT 0x8d
0000            247   _TR0            BIT 0x8c
0000            248   _IE1            BIT 0x8b
0000            249   _IT1            BIT 0x8a
0000            250   _IE0            BIT 0x89
0000            251   _IT0            BIT 0x88
0000            252   _P1_0           BIT 0x90
0000            253   _P1_1           BIT 0x91
0000            254   _P1_2           BIT 0x92
0000            255   _P1_3           BIT 0x93
0000            256   _P1_4           BIT 0x94
0000            257   _P1_5           BIT 0x95
0000            258   _P1_6           BIT 0x96
0000            259   _P1_7           BIT 0x97
0000            260   _S0MODE         BIT 0x9f
0000            261   _SCON0_6        BIT 0x9e
0000            262   _MCE0           BIT 0x9d
0000            263   _REN0           BIT 0x9c
0000            264   _TB80           BIT 0x9b
0000            265   _RB80           BIT 0x9a
0000            266   _TI0            BIT 0x99
0000            267   _RI0            BIT 0x98
0000            268   _SCON_6         BIT 0x9e
0000            269   _MCE            BIT 0x9d
0000            270   _REN            BIT 0x9c
0000            271   _TB8            BIT 0x9b
0000            272   _RB8            BIT 0x9a
0000            273   _TI             BIT 0x99
0000            274   _RI             BIT 0x98
0000            275   _P2_0           BIT 0xa0
0000            276   _P2_1           BIT 0xa1
0000            277   _P2_2           BIT 0xa2
0000            278   _P2_3           BIT 0xa3
0000            279   _P2_4           BIT 0xa4
0000            280   _P2_5           BIT 0xa5
0000            281   _P2_6           BIT 0xa6
0000            282   _P2_7           BIT 0xa7
0000            283   _EA             BIT 0xaf
0000            284   _ESPI0          BIT 0xae
0000            285   _ET2            BIT 0xad
0000            286   _ES0            BIT 0xac
0000            287   _ET1            BIT 0xab
0000            288   _EX1            BIT 0xaa
0000            289   _ET0            BIT 0xa9
0000            290   _EX0            BIT 0xa8
0000            291   _P3_0           BIT 0xb0
0000            292   _P3_1           BIT 0xb1
0000            293   _P3_2           BIT 0xb2
0000            294   _P3_3           BIT 0xb3
0000            295   _P3_4           BIT 0xb4
0000            296   _P3_5           BIT 0xb5
0000            297   _P3_6           BIT 0xb6
0000            298   _P3_7           BIT 0xb7
0000            299   _IP_7           BIT 0xbf
0000            300   _PSPI0          BIT 0xbe
0000            301   _PT2            BIT 0xbd
0000            302   _PS0            BIT 0xbc
0000            303   _PT1            BIT 0xbb
0000            304   _PX1            BIT 0xba
0000            305   _PT0            BIT 0xb9
0000            306   _PX0            BIT 0xb8
0000            307   _MASTER0        BIT 0xc7
0000            308   _TXMODE0        BIT 0xc6
0000            309   _STA0           BIT 0xc5
0000            310   _STO0           BIT 0xc4
0000            311   _ACKRQ0         BIT 0xc3
0000            312   _ARBLOST0       BIT 0xc2
0000            313   _ACK0           BIT 0xc1
0000            314   _SI0            BIT 0xc0
0000            315   _MASTER1        BIT 0xc7
0000            316   _TXMODE1        BIT 0xc6
0000            317   _STA1           BIT 0xc5
0000            318   _STO1           BIT 0xc4
0000            319   _ACKRQ1         BIT 0xc3
0000            320   _ARBLOST1       BIT 0xc2
0000            321   _ACK1           BIT 0xc1
0000            322   _SI1            BIT 0xc0
0000            323   _TF2            BIT 0xcf
0000            324   _TF2H           BIT 0xcf
0000            325   _TF2L           BIT 0xce
0000            326   _TF2LEN         BIT 0xcd
0000            327   _TF2CEN         BIT 0xcc
0000            328   _T2SPLIT        BIT 0xcb
0000            329   _TR2            BIT 0xca
0000            330   _T2CSS          BIT 0xc9
0000            331   _T2XCLK         BIT 0xc8
0000            332   _TF5H           BIT 0xcf
0000            333   _TF5L           BIT 0xce
0000            334   _TF5LEN         BIT 0xcd
0000            335   _TMR5CN_4       BIT 0xcc
0000            336   _T5SPLIT        BIT 0xcb
0000            337   _TR5            BIT 0xca
0000            338   _TMR5CN_1       BIT 0xc9
0000            339   _T5XCLK         BIT 0xc8
0000            340   _CY             BIT 0xd7
0000            341   _AC             BIT 0xd6
0000            342   _F0             BIT 0xd5
0000            343   _RS1            BIT 0xd4
0000            344   _RS0            BIT 0xd3
0000            345   _OV             BIT 0xd2
0000            346   _F1             BIT 0xd1
0000            347   _PARITY         BIT 0xd0
0000            348   _CF             BIT 0xdf
0000            349   _CR             BIT 0xde
0000            350   _PCA0CN_5       BIT 0xde
0000            351   _CCF4           BIT 0xdc
0000            352   _CCF3           BIT 0xdb
0000            353   _CCF2           BIT 0xda
0000            354   _CCF1           BIT 0xd9
0000            355   _CCF0           BIT 0xd8
0000            356   _ACC_7          BIT 0xe7
0000            357   _ACC_6          BIT 0xe6
0000            358   _ACC_5          BIT 0xe5
0000            359   _ACC_4          BIT 0xe4
0000            360   _ACC_3          BIT 0xe3
0000            361   _ACC_2          BIT 0xe2
0000            362   _ACC_1          BIT 0xe1
0000            363   _ACC_0          BIT 0xe0
0000            364   _AD0EN          BIT 0xef
0000            365   _AD0TM          BIT 0xee
0000            366   _AD0INT         BIT 0xed
0000            367   _AD0BUSY        BIT 0xec
0000            368   _AD0WINT        BIT 0xeb
0000            369   _AD0CM2         BIT 0xea
0000            370   _AD0CM1         BIT 0xe9
0000            371   _AD0CM0         BIT 0xe8
0000            372   _B_7            BIT 0xf7
0000            373   _B_6            BIT 0xf6
0000            374   _B_5            BIT 0xf5
0000            375   _B_4            BIT 0xf4
0000            376   _B_3            BIT 0xf3
0000            377   _B_2            BIT 0xf2
0000            378   _B_1            BIT 0xf1
0000            379   _B_0            BIT 0xf0
0000            380   _SPIF           BIT 0xff
0000            381   _WCOL           BIT 0xfe
0000            382   _MODF           BIT 0xfd
0000            383   _RXOVRN         BIT 0xfc
0000            384   _NSSMD1         BIT 0xfb
0000            385   _NSSMD0         BIT 0xfa
0000            386   _TXBMT          BIT 0xf9
0000            387   _SPIEN          BIT 0xf8
0000            388   ;--------------------------------------------------------
0000            389   ; overlayable register banks
0000            390   ;--------------------------------------------------------
0000            391            rbank0 segment data overlay
0000            392   ;--------------------------------------------------------
0000            393   ; internal ram data
0000            394   ;--------------------------------------------------------
0000            395            rseg R_DSEG
0000            396   _pwm_count:
0000            397            ds 1
0001            398   _power:
0001            399            ds 1
0002            400   _pwm_BLU0:
0002            401            ds 1
0003            402   _pwm_BLU1:
0003            403            ds 1
0004            404   _pwm_RED0:
0004            405            ds 1
0005            406   _pwm_RED1:
0005            407            ds 1
0006            408   _dirout:
0006            409            ds 1
0007            410   _overflow_count:
0007            411            ds 1
0008            412   _mode:
0008            413            ds 2
000A            414   _WriteCount:
000A            415            ds 1
000B            416   _millisecond:
000B            417            ds 2
000D            418   _period:
000D            419            ds 4
0011            420   _debugstring:
0011            421            ds 10
001B            422   _LCDprint_PARM_2:
001B            423            ds 1
001C            424   _MotorControl_IndVolts_1_90:
001C            425            ds 3
001F            426   _DebuggingFctn_IndVolts_1_99:
001F            427            ds 3
0022            428   _main_IndVolts_1_102:
0022            429            ds 12
002E            430   _main_sloc0_1_0:
002E            431            ds 4
0032            432   ;--------------------------------------------------------
0032            433   ; overlayable items in internal ram 
0032            434   ;--------------------------------------------------------
0000            435            rseg    R_OSEG
0000            436            rseg    R_OSEG
0000            437   _InitPinADC_PARM_2:
0000            438            ds 1
0001            439            rseg    R_OSEG
0001            440   ;--------------------------------------------------------
0001            441   ; indirectly addressable internal ram data
0001            442   ;--------------------------------------------------------
0000            443            rseg R_ISEG
0000            444   ;--------------------------------------------------------
0000            445   ; absolute internal ram data
0000            446   ;--------------------------------------------------------
0000            447            DSEG
0000            448   ;--------------------------------------------------------
0000            449   ; bit data
0000            450   ;--------------------------------------------------------
0000            451            rseg R_BSEG
0000            452   _Timer2_ISR_sloc0_1_0:
0000            453            DBIT    1
0001            454   _LCDprint_PARM_3:
0001            455            DBIT    1
0002            456   ;--------------------------------------------------------
0002            457   ; paged external ram data
0002            458   ;--------------------------------------------------------
0000            459            rseg R_PSEG
0000            460   ;--------------------------------------------------------
0000            461   ; external ram data
0000            462   ;--------------------------------------------------------
0000            463            rseg R_XSEG
0000            464   ;--------------------------------------------------------
0000            465   ; absolute external ram data
0000            466   ;--------------------------------------------------------
0000            467            XSEG
0000            468   ;--------------------------------------------------------
0000            469   ; external initialized ram data
0000            470   ;--------------------------------------------------------
0000            471            rseg R_IXSEG
0000            472            rseg R_HOME
0000            473            rseg R_GSINIT
0000            474            rseg R_CSEG
0000            475   ;--------------------------------------------------------
0000            476   ; Reset entry point and interrupt vectors
0000            477   ;--------------------------------------------------------
0000            478            CSEG at 0x0000
0000 020100     479            ljmp    _crt0
002B            480            CSEG at 0x002b
002B 020100     481            ljmp    _Timer2_ISR
002E            482   ;--------------------------------------------------------
002E            483   ; global & static initialisations
002E            484   ;--------------------------------------------------------
0000            485            rseg R_HOME
0000            486            rseg R_GSINIT
0000            487            rseg R_GSINIT
0000            488   ;--------------------------------------------------------
0000            489   ; data variables initialization
0000            490   ;--------------------------------------------------------
0000            491            rseg R_DINIT
0000            492   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:56: volatile unsigned char pwm_count=0;
0000 752800     493            mov     _pwm_count,#0x00
0003            494   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:57: volatile unsigned char power=30;
0003 75E81E     495            mov     _power,#0x1E
0006            496   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:58: volatile unsigned char pwm_BLU0=0;
0006 75A800     497            mov     _pwm_BLU0,#0x00
0009            498   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:59: volatile unsigned char pwm_BLU1=0;
0009 756800     499            mov     _pwm_BLU1,#0x00
000C            500   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:60: volatile unsigned char pwm_RED0=0;
000C 752800     501            mov     _pwm_RED0,#0x00
000F            502   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:61: volatile unsigned char pwm_RED1=0;
000F 75E800     503            mov     _pwm_RED1,#0x00
0012            504   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:62: volatile unsigned char dirout=0;
0012 75A800     505            mov     _dirout,#0x00
0015            506   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:63: unsigned char overflow_count=0;
0015 758000     507            mov     _overflow_count,#0x00
0018            508   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:64: unsigned int mode=FORWARD;
0018 75C003     509            mov     _mode,#0x03
001B E4         510            clr     a
001C F5C1       511            mov     (_mode + 1),a
001E            512   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:65: unsigned char WriteCount = 0;
001E 758000     513            mov     _WriteCount,#0x00
0021            514   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:66: unsigned int millisecond=0;
0021 E4         515            clr     a
0022 F540       516            mov     _millisecond,a
0024 F541       517            mov     (_millisecond + 1),a
0026            518   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:67: volatile float period=0;
0026 750000     519            mov     _period,#0x00
0029 750100     520            mov     (_period + 1),#0x00
002C 750200     521            mov     (_period + 2),#0x00
002F 750300     522            mov     (_period + 3),#0x00
0032            523            ; The linker places a 'ret' at the end of segment R_DINIT.
0032            524   ;--------------------------------------------------------
0032            525   ; code
0032            526   ;--------------------------------------------------------
0000            527            rseg R_CSEG
0000            528   ;------------------------------------------------------------
0000            529   ;Allocation info for local variables in function '_c51_external_startup'
0000            530   ;------------------------------------------------------------
0000            531   ;------------------------------------------------------------
0000            532   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:73: char _c51_external_startup (void)
0000            533   ;        -----------------------------------------
0000            534   ;         function _c51_external_startup
0000            535   ;        -----------------------------------------
0000            536   __c51_external_startup:
0000            537            using   0
0000            538   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:75: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     539            anl     _PCA0MD,#0xBF
0003            540   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:76: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     541            mov     _VDM0CN,#0x80
0006            542   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:77: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     543            mov     _RSTSRC,#0x06
0009            544   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:85: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     545            orl     _CLKSEL,#0x03
000C            546   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:89: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     547            orl     _OSCICN,#0x03
000F            548   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:92: SCON0 = 0x10;
000F 759810     549            mov     _SCON0,#0x10
0012            550   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:94: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     551            mov     _TH1,#0x30
0015            552   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:95: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     553            anl     _CKCON,#0xF4
0018            554   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:96: CKCON |=  0x08;
0018 438E08     555            orl     _CKCON,#0x08
001B            556   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:109: TL1 = TH1;      // Init Timer1
001B 858D8B     557            mov     _TL1,_TH1
001E            558   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:110: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     559            anl     _TMOD,#0x0F
0021            560   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:111: TMOD |=  0x20;
0021 438920     561            orl     _TMOD,#0x20
0024            562   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:112: TR1 = 1; // START Timer1
0024 D28E       563            setb    _TR1
0026            564   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:113: TI = 1;  // Indicate TX0 ready
0026 D299       565            setb    _TI
0028            566   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:116: P2MDOUT|=0b_0000_0011;
0028 43A603     567            orl     _P2MDOUT,#0x03
002B            568   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:117: P0MDOUT |= 0x01;  // set P0.0 and P0.4 as push-pull outputs
002B 43A401     569            orl     _P0MDOUT,#0x01
002E            570   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:118: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)
002E 75E101     571            mov     _XBR0,#0x01
0031            572   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:119: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     573            mov     _XBR1,#0x40
0034            574   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:121: return 0;
0034 758200     575            mov     dpl,#0x00
0037 22         576            ret
0038            577   ;------------------------------------------------------------
0038            578   ;Allocation info for local variables in function 'Timer3us'
0038            579   ;------------------------------------------------------------
0038            580   ;us                        Allocated to registers r2 
0038            581   ;i                         Allocated to registers r3 
0038            582   ;------------------------------------------------------------
0038            583   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:128: void Timer3us(unsigned char us)
0038            584   ;        -----------------------------------------
0038            585   ;         function Timer3us
0038            586   ;        -----------------------------------------
0038            587   _Timer3us:
0038 AA82       588            mov     r2,dpl
003A            589   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:133: CKCON|=0b_0100_0000;
003A 438E40     590            orl     _CKCON,#0x40
003D            591   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:135: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
003D 7592D0     592            mov     _TMR3RL,#0xD0
0040 7593FF     593            mov     (_TMR3RL >> 8),#0xFF
0043            594   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:136: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0043 859294     595            mov     _TMR3,_TMR3RL
0046 859395     596            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0049            597   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:138: TMR3CN = 0x04;                 // Sart Timer3 and clear overflow flag
0049 759104     598            mov     _TMR3CN,#0x04
004C            599   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:139: for (i = 0; i < us; i++)       // Count <us> overflows
004C 7B00       600            mov     r3,#0x00
004E            601   L003004?:
004E C3         602            clr     c
004F EB         603            mov     a,r3
0050 9A         604            subb    a,r2
0051 5001       605            jnc     L003007?
0053            606   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:141: while (!(TMR3CN & 0x80));  // Wait for overflow
0053            607   L003001?:
0053 E591       608            mov     a,_TMR3CN
0055 30E768     609            jnb     acc.7,L003001?
0058            610   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:142: TMR3CN &= ~(0x80);         // Clear overflow indicator
0058 53917F     611            anl     _TMR3CN,#0x7F
005B            612   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:139: for (i = 0; i < us; i++)       // Count <us> overflows
005B 0B         613            inc     r3
005C 8001       614            sjmp    L003004?
005E            615   L003007?:
005E            616   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:144: TMR3CN = 0 ;                   // Stop Timer3 and clear overflow flag
005E 759100     617            mov     _TMR3CN,#0x00
0061 22         618            ret
0062            619   ;------------------------------------------------------------
0062            620   ;Allocation info for local variables in function 'waitms'
0062            621   ;------------------------------------------------------------
0062            622   ;ms                        Allocated to registers r2 r3 
0062            623   ;j                         Allocated to registers r2 r3 
0062            624   ;------------------------------------------------------------
0062            625   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:151: void waitms (unsigned int ms)
0062            626   ;        -----------------------------------------
0062            627   ;         function waitms
0062            628   ;        -----------------------------------------
0062            629   _waitms:
0062 AA82       630            mov     r2,dpl
0064 AB83       631            mov     r3,dph
0066            632   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:154: for(j=ms; j!=0; j--)
0066            633   L004001?:
0066 BA0068     634            cjne    r2,#0x00,L004010?
0069 BB0068     635            cjne    r3,#0x00,L004010?
006C 22         636            ret
006D            637   L004010?:
006D            638   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:156: Timer3us(249);
006D 7582F9     639            mov     dpl,#0xF9
0070 C002       640            push    ar2
0072 C003       641            push    ar3
0074 120100     642            lcall   _Timer3us
0077            643   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:157: Timer3us(249);
0077 7582F9     644            mov     dpl,#0xF9
007A 120100     645            lcall   _Timer3us
007D            646   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:158: Timer3us(249);
007D 7582F9     647            mov     dpl,#0xF9
0080 120100     648            lcall   _Timer3us
0083            649   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:159: Timer3us(250);
0083 7582FA     650            mov     dpl,#0xFA
0086 120100     651            lcall   _Timer3us
0089 D003       652            pop     ar3
008B D002       653            pop     ar2
008D            654   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:154: for(j=ms; j!=0; j--)
008D 1A         655            dec     r2
008E BAFFA8     656            cjne    r2,#0xff,L004011?
0091 1B         657            dec     r3
0092            658   L004011?:
0092 8001       659            sjmp    L004001?
0094            660   ;------------------------------------------------------------
0094            661   ;Allocation info for local variables in function 'TIMER0_Init'
0094            662   ;------------------------------------------------------------
0094            663   ;------------------------------------------------------------
0094            664   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:165: void TIMER0_Init(void)
0094            665   ;        -----------------------------------------
0094            666   ;         function TIMER0_Init
0094            667   ;        -----------------------------------------
0094            668   _TIMER0_Init:
0094            669   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:167: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
0094 5389F0     670            anl     _TMOD,#0xF0
0097            671   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:168: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
0097 438901     672            orl     _TMOD,#0x01
009A            673   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:169: TR0=0; // Stop Timer/Counter 0
009A C28C       674            clr     _TR0
009C 22         675            ret
009D            676   ;------------------------------------------------------------
009D            677   ;Allocation info for local variables in function 'TIMER2_Init'
009D            678   ;------------------------------------------------------------
009D            679   ;------------------------------------------------------------
009D            680   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:175: void TIMER2_Init(void)
009D            681   ;        -----------------------------------------
009D            682   ;         function TIMER2_Init
009D            683   ;        -----------------------------------------
009D            684   _TIMER2_Init:
009D            685   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:177: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
009D 75C800     686            mov     _TMR2CN,#0x00
00A0            687   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:178: CKCON|=0b_0001_0000;
00A0 438E10     688            orl     _CKCON,#0x10
00A3            689   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:179: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
00A3 75CA78     690            mov     _TMR2RL,#0x78
00A6 75CBEC     691            mov     (_TMR2RL >> 8),#0xEC
00A9            692   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:180: TMR2=0xffff;   // Set to reload immediately
00A9 75CCFF     693            mov     _TMR2,#0xFF
00AC 75CDFF     694            mov     (_TMR2 >> 8),#0xFF
00AF            695   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:181: ET2=1;         // Enable Timer2 interrupts
00AF D2AD       696            setb    _ET2
00B1            697   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:182: TR2=1;         // Start Timer2
00B1 D2CA       698            setb    _TR2
00B3 22         699            ret
00B4            700   ;------------------------------------------------------------
00B4            701   ;Allocation info for local variables in function 'InitADC'
00B4            702   ;------------------------------------------------------------
00B4            703   ;------------------------------------------------------------
00B4            704   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:188: void InitADC (void)
00B4            705   ;        -----------------------------------------
00B4            706   ;         function InitADC
00B4            707   ;        -----------------------------------------
00B4            708   _InitADC:
00B4            709   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:191: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
00B4 75BCF8     710            mov     _ADC0CF,#0xF8
00B7            711   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:192: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
00B7 75E880     712            mov     _ADC0CN,#0x80
00BA            713   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:193: REF0CN = 0b_0000_1000; //Select VDD as the voltage reference for the converter
00BA 75D108     714            mov     _REF0CN,#0x08
00BD 22         715            ret
00BE            716   ;------------------------------------------------------------
00BE            717   ;Allocation info for local variables in function 'InitPinADC'
00BE            718   ;------------------------------------------------------------
00BE            719   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00BE            720   ;portno                    Allocated to registers r2 
00BE            721   ;mask                      Allocated to registers r3 
00BE            722   ;------------------------------------------------------------
00BE            723   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:200: void InitPinADC (unsigned char portno, unsigned char pinno)
00BE            724   ;        -----------------------------------------
00BE            725   ;         function InitPinADC
00BE            726   ;        -----------------------------------------
00BE            727   _InitPinADC:
00BE AA82       728            mov     r2,dpl
00C0            729   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:204: mask=1<<pinno;
00C0 8550F0     730            mov     b,_InitPinADC_PARM_2
00C3 05F0       731            inc     b
00C5 7401       732            mov     a,#0x01
00C7 8001       733            sjmp    L008012?
00C9            734   L008010?:
00C9 25E0       735            add     a,acc
00CB            736   L008012?:
00CB D5F068     737            djnz    b,L008010?
00CE FB         738            mov     r3,a
00CF            739   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:206: switch (portno)
00CF EA         740            mov     a,r2
00D0 24FC       741            add     a,#0xff - 0x03
00D2 4001       742            jc      L008007?
00D4 EA         743            mov     a,r2
00D5 2A         744            add     a,r2
00D6 2A         745            add     a,r2
00D7 90A0E8     746            mov     dptr,#L008014?
00DA 73         747            jmp     @a+dptr
00DB            748   L008014?:
00DB 020100     749            ljmp    L008001?
00DE 020100     750            ljmp    L008002?
00E1 020100     751            ljmp    L008003?
00E4 020100     752            ljmp    L008004?
00E7            753   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:208: case 0:
00E7            754   L008001?:
00E7            755   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:209: P0MDIN &= (~mask); // Set pin as analog input
00E7 EB         756            mov     a,r3
00E8 F4         757            cpl     a
00E9 52F1       758            anl     _P0MDIN,a
00EB            759   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:210: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00EB EB         760            mov     a,r3
00EC 42D4       761            orl     _P0SKIP,a
00EE            762   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:211: break;
00EE            763   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:212: case 1:
00EE 22         764            ret
00EF            765   L008002?:
00EF            766   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:213: P1MDIN &= (~mask); // Set pin as analog input
00EF EB         767            mov     a,r3
00F0 F4         768            cpl     a
00F1 52F2       769            anl     _P1MDIN,a
00F3            770   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:214: P1SKIP |= mask; // Skip Crossbar decoding for this pin
00F3 EB         771            mov     a,r3
00F4 42D5       772            orl     _P1SKIP,a
00F6            773   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:215: break;
00F6            774   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:216: case 2:
00F6 22         775            ret
00F7            776   L008003?:
00F7            777   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:217: P2MDIN &= (~mask); // Set pin as analog input
00F7 EB         778            mov     a,r3
00F8 F4         779            cpl     a
00F9 52F3       780            anl     _P2MDIN,a
00FB            781   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:218: P2SKIP |= mask; // Skip Crossbar decoding for this pin
00FB EB         782            mov     a,r3
00FC 42D6       783            orl     _P2SKIP,a
00FE            784   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:219: break;
00FE            785   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:220: case 3:
00FE 22         786            ret
00FF            787   L008004?:
00FF            788   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:221: P3MDIN &= (~mask); // Set pin as analog input
00FF EB         789            mov     a,r3
0100 F4         790            cpl     a
0101 FA         791            mov     r2,a
0102 52F4       792            anl     _P3MDIN,a
0104            793   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:222: P3SKIP |= mask; // Skip Crossbar decoding for this pin
0104 EB         794            mov     a,r3
0105 42DF       795            orl     _P3SKIP,a
0107            796   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:226: }
0107            797   L008007?:
0107 22         798            ret
0108            799   ;------------------------------------------------------------
0108            800   ;Allocation info for local variables in function 'ADC_at_Pin'
0108            801   ;------------------------------------------------------------
0108            802   ;pin                       Allocated to registers 
0108            803   ;------------------------------------------------------------
0108            804   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:233: unsigned int ADC_at_Pin(unsigned char pin)
0108            805   ;        -----------------------------------------
0108            806   ;         function ADC_at_Pin
0108            807   ;        -----------------------------------------
0108            808   _ADC_at_Pin:
0108 8582BB     809            mov     _AMX0P,dpl
010B            810   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:236: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
010B 75BA1F     811            mov     _AMX0N,#0x1F
010E            812   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:238: AD0BUSY=1;
010E D2EC       813            setb    _AD0BUSY
0110            814   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:239: while (AD0BUSY); // Wait for dummy conversion to finish
0110            815   L009001?:
0110 20EC28     816            jb      _AD0BUSY,L009001?
0113            817   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:241: AD0BUSY = 1;
0113 D2EC       818            setb    _AD0BUSY
0115            819   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:242: while (AD0BUSY); // Wait for conversion to complete
0115            820   L009004?:
0115 20EC68     821            jb      _AD0BUSY,L009004?
0118            822   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:243: return (ADC0L+(ADC0H*0x100));
0118 AABD       823            mov     r2,_ADC0L
011A 7B00       824            mov     r3,#0x00
011C ADBE       825            mov     r5,_ADC0H
011E 7C00       826            mov     r4,#0x00
0120 EC         827            mov     a,r4
0121 2A         828            add     a,r2
0122 F582       829            mov     dpl,a
0124 ED         830            mov     a,r5
0125 3B         831            addc    a,r3
0126 F583       832            mov     dph,a
0128 22         833            ret
0129            834   ;------------------------------------------------------------
0129            835   ;Allocation info for local variables in function 'Volts_at_Pin'
0129            836   ;------------------------------------------------------------
0129            837   ;pin                       Allocated to registers r2 
0129            838   ;------------------------------------------------------------
0129            839   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:250: float Volts_at_Pin(unsigned char pin)
0129            840   ;        -----------------------------------------
0129            841   ;         function Volts_at_Pin
0129            842   ;        -----------------------------------------
0129            843   _Volts_at_Pin:
0129            844   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:252: return ((ADC_at_Pin(pin)*VDD_onboard)/1024.0);
0129 120100     845            lcall   _ADC_at_Pin
012C 120100     846            lcall   ___uint2fs
012F AA82       847            mov     r2,dpl
0131 AB83       848            mov     r3,dph
0133 ACF0       849            mov     r4,b
0135 FD         850            mov     r5,a
0136 C002       851            push    ar2
0138 C003       852            push    ar3
013A C004       853            push    ar4
013C C005       854            push    ar5
013E 90DD2F     855            mov     dptr,#0xDD2F
0141 75F054     856            mov     b,#0x54
0144 7440       857            mov     a,#0x40
0146 120100     858            lcall   ___fsmul
0149 AA82       859            mov     r2,dpl
014B AB83       860            mov     r3,dph
014D ACF0       861            mov     r4,b
014F FD         862            mov     r5,a
0150 E581       863            mov     a,sp
0152 24FC       864            add     a,#0xfc
0154 F581       865            mov     sp,a
0156 E4         866            clr     a
0157 C0E0       867            push    acc
0159 C0E0       868            push    acc
015B 7480       869            mov     a,#0x80
015D C0E0       870            push    acc
015F 7444       871            mov     a,#0x44
0161 C0E0       872            push    acc
0163 8A82       873            mov     dpl,r2
0165 8B83       874            mov     dph,r3
0167 8CF0       875            mov     b,r4
0169 ED         876            mov     a,r5
016A 120100     877            lcall   ___fsdiv
016D AA82       878            mov     r2,dpl
016F AB83       879            mov     r3,dph
0171 ACF0       880            mov     r4,b
0173 FD         881            mov     r5,a
0174 E581       882            mov     a,sp
0176 24FC       883            add     a,#0xfc
0178 F581       884            mov     sp,a
017A 8A82       885            mov     dpl,r2
017C 8B83       886            mov     dph,r3
017E 8CF0       887            mov     b,r4
0180 ED         888            mov     a,r5
0181 22         889            ret
0182            890   ;------------------------------------------------------------
0182            891   ;Allocation info for local variables in function 'Timer2_ISR'
0182            892   ;------------------------------------------------------------
0182            893   ;------------------------------------------------------------
0182            894   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:259: void Timer2_ISR (void) interrupt 5
0182            895   ;        -----------------------------------------
0182            896   ;         function Timer2_ISR
0182            897   ;        -----------------------------------------
0182            898   _Timer2_ISR:
0182 C0E0       899            push    acc
0184 C0D0       900            push    psw
0186 75D000     901            mov     psw,#0x00
0189            902   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:261: TF2H = 0; // Clear Timer2 interrupt flag
0189 C2CF       903            clr     _TF2H
018B            904   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:263: pwm_count++;
018B 0528       905            inc     _pwm_count
018D            906   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:264: if(pwm_count>100) pwm_count=0;
018D E528       907            mov     a,_pwm_count
018F 249B       908            add     a,#0xff - 0x64
0191 5001       909            jnc     L011002?
0193 752800     910            mov     _pwm_count,#0x00
0196            911   L011002?:
0196            912   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:266: BLU0=pwm_count>pwm_BLU0?0:1;
0196 C3         913            clr     c
0197 E5A8       914            mov     a,_pwm_BLU0
0199 9528       915            subb    a,_pwm_count
019B 9228       916            mov  _Timer2_ISR_sloc0_1_0,c
019D B3         917            cpl     c
019E 92A5       918            mov     _P2_5,c
01A0            919   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:267: BLU1=pwm_count>pwm_BLU1?0:1;
01A0 C3         920            clr     c
01A1 E568       921            mov     a,_pwm_BLU1
01A3 9528       922            subb    a,_pwm_count
01A5 9228       923            mov  _Timer2_ISR_sloc0_1_0,c
01A7 B3         924            cpl     c
01A8 92A2       925            mov     _P2_2,c
01AA            926   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:269: RED0=pwm_count>pwm_RED0?0:1;
01AA C3         927            clr     c
01AB E528       928            mov     a,_pwm_RED0
01AD 9528       929            subb    a,_pwm_count
01AF 9228       930            mov  _Timer2_ISR_sloc0_1_0,c
01B1 B3         931            cpl     c
01B2 92A3       932            mov     _P2_3,c
01B4            933   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:270: RED1=pwm_count>pwm_RED1?0:1;
01B4 C3         934            clr     c
01B5 E5E8       935            mov     a,_pwm_RED1
01B7 9528       936            subb    a,_pwm_count
01B9 9228       937            mov  _Timer2_ISR_sloc0_1_0,c
01BB B3         938            cpl     c
01BC 92A4       939            mov     _P2_4,c
01BE D0D0       940            pop     psw
01C0 D0E0       941            pop     acc
01C2 32         942            reti
01C3            943   ;        eliminated unneeded push/pop dpl
01C3            944   ;        eliminated unneeded push/pop dph
01C3            945   ;        eliminated unneeded push/pop b
01C3            946   ;------------------------------------------------------------
01C3            947   ;Allocation info for local variables in function 'LCD_pulse'
01C3            948   ;------------------------------------------------------------
01C3            949   ;------------------------------------------------------------
01C3            950   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:276: void LCD_pulse (void)
01C3            951   ;        -----------------------------------------
01C3            952   ;         function LCD_pulse
01C3            953   ;        -----------------------------------------
01C3            954   _LCD_pulse:
01C3            955   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:278: LCD_E=1;
01C3 D295       956            setb    _P1_5
01C5            957   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:279: Timer3us(40);
01C5 758228     958            mov     dpl,#0x28
01C8 120100     959            lcall   _Timer3us
01CB            960   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:280: LCD_E=0;
01CB C295       961            clr     _P1_5
01CD 22         962            ret
01CE            963   ;------------------------------------------------------------
01CE            964   ;Allocation info for local variables in function 'LCD_byte'
01CE            965   ;------------------------------------------------------------
01CE            966   ;x                         Allocated to registers r2 
01CE            967   ;------------------------------------------------------------
01CE            968   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:283: void LCD_byte (unsigned char x)
01CE            969   ;        -----------------------------------------
01CE            970   ;         function LCD_byte
01CE            971   ;        -----------------------------------------
01CE            972   _LCD_byte:
01CE AA82       973            mov     r2,dpl
01D0            974   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:286: ACC=x; //Send high nible
01D0 8AE0       975            mov     _ACC,r2
01D2            976   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:287: LCD_D7=ACC_7;
01D2 A2E7       977            mov     c,_ACC_7
01D4 9290       978            mov     _P1_0,c
01D6            979   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:288: LCD_D6=ACC_6;
01D6 A2E6       980            mov     c,_ACC_6
01D8 9291       981            mov     _P1_1,c
01DA            982   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:289: LCD_D5=ACC_5;
01DA A2E5       983            mov     c,_ACC_5
01DC 9292       984            mov     _P1_2,c
01DE            985   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:290: LCD_D4=ACC_4;
01DE A2E4       986            mov     c,_ACC_4
01E0 9293       987            mov     _P1_3,c
01E2            988   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:291: LCD_pulse();
01E2 C002       989            push    ar2
01E4 120100     990            lcall   _LCD_pulse
01E7            991   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:292: Timer3us(40);
01E7 758228     992            mov     dpl,#0x28
01EA 120100     993            lcall   _Timer3us
01ED D002       994            pop     ar2
01EF            995   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:293: ACC=x; //Send low nible
01EF 8AE0       996            mov     _ACC,r2
01F1            997   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:294: LCD_D7=ACC_3;
01F1 A2E3       998            mov     c,_ACC_3
01F3 9290       999            mov     _P1_0,c
01F5           1000   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:295: LCD_D6=ACC_2;
01F5 A2E2      1001            mov     c,_ACC_2
01F7 9291      1002            mov     _P1_1,c
01F9           1003   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:296: LCD_D5=ACC_1;
01F9 A2E1      1004            mov     c,_ACC_1
01FB 9292      1005            mov     _P1_2,c
01FD           1006   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:297: LCD_D4=ACC_0;
01FD A2E0      1007            mov     c,_ACC_0
01FF 9293      1008            mov     _P1_3,c
0201           1009   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:298: LCD_pulse();
0201 020100    1010            ljmp    _LCD_pulse
0204           1011   ;------------------------------------------------------------
0204           1012   ;Allocation info for local variables in function 'WriteData'
0204           1013   ;------------------------------------------------------------
0204           1014   ;x                         Allocated to registers r2 
0204           1015   ;------------------------------------------------------------
0204           1016   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:301: void WriteData (unsigned char x)
0204           1017   ;        -----------------------------------------
0204           1018   ;         function WriteData
0204           1019   ;        -----------------------------------------
0204           1020   _WriteData:
0204 AA82      1021            mov     r2,dpl
0206           1022   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:303: LCD_RS=1;
0206 D2A1      1023            setb    _P2_1
0208           1024   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:304: LCD_byte(x);
0208 8A82      1025            mov     dpl,r2
020A 120100    1026            lcall   _LCD_byte
020D           1027   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:305: waitms(2);
020D 900002    1028            mov     dptr,#0x0002
0210 020100    1029            ljmp    _waitms
0213           1030   ;------------------------------------------------------------
0213           1031   ;Allocation info for local variables in function 'WriteCommand'
0213           1032   ;------------------------------------------------------------
0213           1033   ;x                         Allocated to registers r2 
0213           1034   ;------------------------------------------------------------
0213           1035   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:308: void WriteCommand (unsigned char x)
0213           1036   ;        -----------------------------------------
0213           1037   ;         function WriteCommand
0213           1038   ;        -----------------------------------------
0213           1039   _WriteCommand:
0213 AA82      1040            mov     r2,dpl
0215           1041   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:310: LCD_RS=0;
0215 C2A1      1042            clr     _P2_1
0217           1043   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:311: LCD_byte(x);
0217 8A82      1044            mov     dpl,r2
0219 120100    1045            lcall   _LCD_byte
021C           1046   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:312: waitms(5);
021C 900005    1047            mov     dptr,#0x0005
021F 020100    1048            ljmp    _waitms
0222           1049   ;------------------------------------------------------------
0222           1050   ;Allocation info for local variables in function 'LCD_4BIT'
0222           1051   ;------------------------------------------------------------
0222           1052   ;------------------------------------------------------------
0222           1053   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:315: void LCD_4BIT (void)
0222           1054   ;        -----------------------------------------
0222           1055   ;         function LCD_4BIT
0222           1056   ;        -----------------------------------------
0222           1057   _LCD_4BIT:
0222           1058   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:317: LCD_E=0; // Resting state of LCD's enable is zero
0222 C295      1059            clr     _P1_5
0224           1060   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:318: LCD_RW=0; // We are only writing to the LCD in this program
0224 C297      1061            clr     _P1_7
0226           1062   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:319: waitms(20);
0226 900014    1063            mov     dptr,#0x0014
0229 120100    1064            lcall   _waitms
022C           1065   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:321: WriteCommand(0x33);
022C 758233    1066            mov     dpl,#0x33
022F 120100    1067            lcall   _WriteCommand
0232           1068   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:322: WriteCommand(0x33);
0232 758233    1069            mov     dpl,#0x33
0235 120100    1070            lcall   _WriteCommand
0238           1071   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:323: WriteCommand(0x32); // Change to 4-bit mode
0238 758232    1072            mov     dpl,#0x32
023B 120100    1073            lcall   _WriteCommand
023E           1074   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:326: WriteCommand(0x28);
023E 758228    1075            mov     dpl,#0x28
0241 120100    1076            lcall   _WriteCommand
0244           1077   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:327: WriteCommand(0x0c);
0244 75820C    1078            mov     dpl,#0x0C
0247 120100    1079            lcall   _WriteCommand
024A           1080   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:328: WriteCommand(0x01); // Clear screen command (takes some time)
024A 758201    1081            mov     dpl,#0x01
024D 120100    1082            lcall   _WriteCommand
0250           1083   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:329: waitms(20); // Wait for clear screen command to finsih.
0250 900014    1084            mov     dptr,#0x0014
0253 020100    1085            ljmp    _waitms
0256           1086   ;------------------------------------------------------------
0256           1087   ;Allocation info for local variables in function 'LCDprint'
0256           1088   ;------------------------------------------------------------
0256           1089   ;line                      Allocated with name '_LCDprint_PARM_2'
0256           1090   ;string                    Allocated to registers r2 r3 r4 
0256           1091   ;j                         Allocated to registers r5 r6 
0256           1092   ;------------------------------------------------------------
0256           1093   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:332: void LCDprint(char * string, unsigned char line, bit clear)
0256           1094   ;        -----------------------------------------
0256           1095   ;         function LCDprint
0256           1096   ;        -----------------------------------------
0256           1097   _LCDprint:
0256 AA82      1098            mov     r2,dpl
0258 AB83      1099            mov     r3,dph
025A ACF0      1100            mov     r4,b
025C           1101   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:336: WriteCommand(line==2?0xc0:0x80);
025C 7402      1102            mov     a,#0x02
025E B58028    1103            cjne    a,_LCDprint_PARM_2,L017013?
0261 7DC0      1104            mov     r5,#0xC0
0263 8001      1105            sjmp    L017014?
0265           1106   L017013?:
0265 7D80      1107            mov     r5,#0x80
0267           1108   L017014?:
0267 8D82      1109            mov     dpl,r5
0269 C002      1110            push    ar2
026B C003      1111            push    ar3
026D C004      1112            push    ar4
026F 120100    1113            lcall   _WriteCommand
0272           1114   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:337: waitms(5);
0272 900005    1115            mov     dptr,#0x0005
0275 120100    1116            lcall   _waitms
0278 D004      1117            pop     ar4
027A D003      1118            pop     ar3
027C D002      1119            pop     ar2
027E           1120   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:338: for(j=0; string[j]!=0; j++)      WriteData(string[j]);// Write the message
027E 7D00      1121            mov     r5,#0x00
0280 7E00      1122            mov     r6,#0x00
0282           1123   L017003?:
0282 ED        1124            mov     a,r5
0283 2A        1125            add     a,r2
0284 FF        1126            mov     r7,a
0285 EE        1127            mov     a,r6
0286 3B        1128            addc    a,r3
0287 F8        1129            mov     r0,a
0288 8C01      1130            mov     ar1,r4
028A 8F82      1131            mov     dpl,r7
028C 8883      1132            mov     dph,r0
028E 89F0      1133            mov     b,r1
0290 120100    1134            lcall   __gptrget
0293 FF        1135            mov     r7,a
0294 6001      1136            jz      L017006?
0296 8F82      1137            mov     dpl,r7
0298 C002      1138            push    ar2
029A C003      1139            push    ar3
029C C004      1140            push    ar4
029E C005      1141            push    ar5
02A0 C006      1142            push    ar6
02A2 120100    1143            lcall   _WriteData
02A5 D006      1144            pop     ar6
02A7 D005      1145            pop     ar5
02A9 D004      1146            pop     ar4
02AB D003      1147            pop     ar3
02AD D002      1148            pop     ar2
02AF 0D        1149            inc     r5
02B0 BD00A8    1150            cjne    r5,#0x00,L017003?
02B3 0E        1151            inc     r6
02B4 8001      1152            sjmp    L017003?
02B6           1153   L017006?:
02B6           1154   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:339: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
02B6 303068    1155            jnb     _LCDprint_PARM_3,L017011?
02B9 8D02      1156            mov     ar2,r5
02BB 8E03      1157            mov     ar3,r6
02BD           1158   L017007?:
02BD C3        1159            clr     c
02BE EA        1160            mov     a,r2
02BF 9410      1161            subb    a,#0x10
02C1 EB        1162            mov     a,r3
02C2 6480      1163            xrl     a,#0x80
02C4 9480      1164            subb    a,#0x80
02C6 5001      1165            jnc     L017011?
02C8 758220    1166            mov     dpl,#0x20
02CB C002      1167            push    ar2
02CD C003      1168            push    ar3
02CF 120100    1169            lcall   _WriteData
02D2 D003      1170            pop     ar3
02D4 D002      1171            pop     ar2
02D6 0A        1172            inc     r2
02D7 BA00A8    1173            cjne    r2,#0x00,L017007?
02DA 0B        1174            inc     r3
02DB 8001      1175            sjmp    L017007?
02DD           1176   L017011?:
02DD 22        1177            ret
02DE           1178   ;------------------------------------------------------------
02DE           1179   ;Allocation info for local variables in function 'Clean_LCD'
02DE           1180   ;------------------------------------------------------------
02DE           1181   ;------------------------------------------------------------
02DE           1182   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:343: void Clean_LCD(void){
02DE           1183   ;        -----------------------------------------
02DE           1184   ;         function Clean_LCD
02DE           1185   ;        -----------------------------------------
02DE           1186   _Clean_LCD:
02DE           1187   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:344: LCDprint("                ", 1, 1);
02DE 758001    1188            mov     _LCDprint_PARM_2,#0x01
02E1 D230      1189            setb    _LCDprint_PARM_3
02E3 90A5E8    1190            mov     dptr,#__str_0
02E6 75F080    1191            mov     b,#0x80
02E9 120100    1192            lcall   _LCDprint
02EC           1193   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:345: LCDprint("                ", 2, 1);
02EC 758002    1194            mov     _LCDprint_PARM_2,#0x02
02EF D230      1195            setb    _LCDprint_PARM_3
02F1 90A5E8    1196            mov     dptr,#__str_0
02F4 75F080    1197            mov     b,#0x80
02F7 020100    1198            ljmp    _LCDprint
02FA           1199   ;------------------------------------------------------------
02FA           1200   ;Allocation info for local variables in function 'ReadPeriod'
02FA           1201   ;------------------------------------------------------------
02FA           1202   ;------------------------------------------------------------
02FA           1203   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:351: void ReadPeriod (void)
02FA           1204   ;        -----------------------------------------
02FA           1205   ;         function ReadPeriod
02FA           1206   ;        -----------------------------------------
02FA           1207   _ReadPeriod:
02FA           1208   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:355: TL0=0;
02FA 758A00    1209            mov     _TL0,#0x00
02FD           1210   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:356: TH0=0;
02FD 758C00    1211            mov     _TH0,#0x00
0300           1212   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:357: TF0=0;
0300 C28D      1213            clr     _TF0
0302           1214   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:358: overflow_count=0;
0302 758000    1215            mov     _overflow_count,#0x00
0305           1216   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:361: while(FRQIN!=1); // Wait for the signal to be one
0305           1217   L019001?:
0305 309628    1218            jnb     _P1_6,L019001?
0308           1219   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:362: while(FRQIN!=0); // Wait for the signal to be zero
0308           1220   L019004?:
0308 209668    1221            jb      _P1_6,L019004?
030B           1222   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:363: TR0=1; // Start the timer
030B D28C      1223            setb    _TR0
030D           1224   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:364: while(FRQIN!=1) // Wait for the signal to be one
030D           1225   L019009?:
030D 2096E8    1226            jb      _P1_6,L019014?
0310           1227   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:366: if(TF0==1) // Did the 16-bit timer overflow?
0310           1228   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:368: TF0=0;
0310 108D28    1229            jbc     _TF0,L019031?
0313 8001      1230            sjmp    L019009?
0315           1231   L019031?:
0315           1232   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:369: overflow_count++;
0315 0580      1233            inc     _overflow_count
0317           1234   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:372: while(FRQIN!=0) // Wait for the signal to be zero
0317 8001      1235            sjmp    L019009?
0319           1236   L019014?:
0319 309668    1237            jnb     _P1_6,L019016?
031C           1238   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:374: if(TF0==1) // Did the 16-bit timer overflow?
031C           1239   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:376: TF0=0;
031C 108DA8    1240            jbc     _TF0,L019033?
031F 8001      1241            sjmp    L019014?
0321           1242   L019033?:
0321           1243   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:377: overflow_count++;
0321 0580      1244            inc     _overflow_count
0323 8001      1245            sjmp    L019014?
0325           1246   L019016?:
0325           1247   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:381: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period. Then convert it to frequency
0325 C28C      1248            clr     _TR0
0327           1249   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:383: period=1000.0*(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK); // Compute period. Unit in ms
0327 858082    1250            mov     dpl,_overflow_count
032A 120100    1251            lcall   ___uchar2fs
032D AA82      1252            mov     r2,dpl
032F AB83      1253            mov     r3,dph
0331 ACF0      1254            mov     r4,b
0333 FD        1255            mov     r5,a
0334 C002      1256            push    ar2
0336 C003      1257            push    ar3
0338 C004      1258            push    ar4
033A C005      1259            push    ar5
033C 900000    1260            mov     dptr,#0x0000
033F 75F080    1261            mov     b,#0x80
0342 7447      1262            mov     a,#0x47
0344 120100    1263            lcall   ___fsmul
0347 AA82      1264            mov     r2,dpl
0349 AB83      1265            mov     r3,dph
034B ACF0      1266            mov     r4,b
034D FD        1267            mov     r5,a
034E E581      1268            mov     a,sp
0350 24FC      1269            add     a,#0xfc
0352 F581      1270            mov     sp,a
0354 858C82    1271            mov     dpl,_TH0
0357 C002      1272            push    ar2
0359 C003      1273            push    ar3
035B C004      1274            push    ar4
035D C005      1275            push    ar5
035F 120100    1276            lcall   ___uchar2fs
0362 AE82      1277            mov     r6,dpl
0364 AF83      1278            mov     r7,dph
0366 A8F0      1279            mov     r0,b
0368 F9        1280            mov     r1,a
0369 C006      1281            push    ar6
036B C007      1282            push    ar7
036D C000      1283            push    ar0
036F C001      1284            push    ar1
0371 900000    1285            mov     dptr,#0x0000
0374 75F080    1286            mov     b,#0x80
0377 7443      1287            mov     a,#0x43
0379 120100    1288            lcall   ___fsmul
037C AE82      1289            mov     r6,dpl
037E AF83      1290            mov     r7,dph
0380 A8F0      1291            mov     r0,b
0382 F9        1292            mov     r1,a
0383 E581      1293            mov     a,sp
0385 24FC      1294            add     a,#0xfc
0387 F581      1295            mov     sp,a
0389 D005      1296            pop     ar5
038B D004      1297            pop     ar4
038D D003      1298            pop     ar3
038F D002      1299            pop     ar2
0391 C006      1300            push    ar6
0393 C007      1301            push    ar7
0395 C000      1302            push    ar0
0397 C001      1303            push    ar1
0399 8A82      1304            mov     dpl,r2
039B 8B83      1305            mov     dph,r3
039D 8CF0      1306            mov     b,r4
039F ED        1307            mov     a,r5
03A0 120100    1308            lcall   ___fsadd
03A3 AA82      1309            mov     r2,dpl
03A5 AB83      1310            mov     r3,dph
03A7 ACF0      1311            mov     r4,b
03A9 FD        1312            mov     r5,a
03AA E581      1313            mov     a,sp
03AC 24FC      1314            add     a,#0xfc
03AE F581      1315            mov     sp,a
03B0 AE8A      1316            mov     r6,_TL0
03B2 7F00      1317            mov     r7,#0x00
03B4 8E82      1318            mov     dpl,r6
03B6 8F83      1319            mov     dph,r7
03B8 C002      1320            push    ar2
03BA C003      1321            push    ar3
03BC C004      1322            push    ar4
03BE C005      1323            push    ar5
03C0 120100    1324            lcall   ___sint2fs
03C3 AE82      1325            mov     r6,dpl
03C5 AF83      1326            mov     r7,dph
03C7 A8F0      1327            mov     r0,b
03C9 F9        1328            mov     r1,a
03CA D005      1329            pop     ar5
03CC D004      1330            pop     ar4
03CE D003      1331            pop     ar3
03D0 D002      1332            pop     ar2
03D2 C006      1333            push    ar6
03D4 C007      1334            push    ar7
03D6 C000      1335            push    ar0
03D8 C001      1336            push    ar1
03DA 8A82      1337            mov     dpl,r2
03DC 8B83      1338            mov     dph,r3
03DE 8CF0      1339            mov     b,r4
03E0 ED        1340            mov     a,r5
03E1 120100    1341            lcall   ___fsadd
03E4 AA82      1342            mov     r2,dpl
03E6 AB83      1343            mov     r3,dph
03E8 ACF0      1344            mov     r4,b
03EA FD        1345            mov     r5,a
03EB E581      1346            mov     a,sp
03ED 24FC      1347            add     a,#0xfc
03EF F581      1348            mov     sp,a
03F1 C002      1349            push    ar2
03F3 C003      1350            push    ar3
03F5 C004      1351            push    ar4
03F7 C005      1352            push    ar5
03F9 90126F    1353            mov     dptr,#0x126F
03FC 75F083    1354            mov     b,#0x83
03FF 7439      1355            mov     a,#0x39
0401 120100    1356            lcall   ___fsmul
0404 858200    1357            mov     _period,dpl
0407 858301    1358            mov     (_period + 1),dph
040A 85F002    1359            mov     (_period + 2),b
040D F503      1360            mov     (_period + 3),a
040F E581      1361            mov     a,sp
0411 24FC      1362            add     a,#0xfc
0413 F581      1363            mov     sp,a
0415 22        1364            ret
0416           1365   ;------------------------------------------------------------
0416           1366   ;Allocation info for local variables in function 'DetermineMode'
0416           1367   ;------------------------------------------------------------
0416           1368   ;------------------------------------------------------------
0416           1369   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:391: void DetermineMode (void) {
0416           1370   ;        -----------------------------------------
0416           1371   ;         function DetermineMode
0416           1372   ;        -----------------------------------------
0416           1373   _DetermineMode:
0416           1374   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:393: if (period>220.0 && period<360.0){
0416 E4        1375            clr     a
0417 C0E0      1376            push    acc
0419 C0E0      1377            push    acc
041B 745C      1378            mov     a,#0x5C
041D C0E0      1379            push    acc
041F 7443      1380            mov     a,#0x43
0421 C0E0      1381            push    acc
0423 850082    1382            mov     dpl,_period
0426 850183    1383            mov     dph,(_period + 1)
0429 8502F0    1384            mov     b,(_period + 2)
042C E503      1385            mov     a,(_period + 3)
042E 120100    1386            lcall   ___fsgt
0431 AA82      1387            mov     r2,dpl
0433 E581      1388            mov     a,sp
0435 24FC      1389            add     a,#0xfc
0437 F581      1390            mov     sp,a
0439 EA        1391            mov     a,r2
043A 6001      1392            jz      L020002?
043C E4        1393            clr     a
043D C0E0      1394            push    acc
043F C0E0      1395            push    acc
0441 74B4      1396            mov     a,#0xB4
0443 C0E0      1397            push    acc
0445 7443      1398            mov     a,#0x43
0447 C0E0      1399            push    acc
0449 850082    1400            mov     dpl,_period
044C 850183    1401            mov     dph,(_period + 1)
044F 8502F0    1402            mov     b,(_period + 2)
0452 E503      1403            mov     a,(_period + 3)
0454 120100    1404            lcall   ___fslt
0457 AA82      1405            mov     r2,dpl
0459 E581      1406            mov     a,sp
045B 24FC      1407            add     a,#0xfc
045D F581      1408            mov     sp,a
045F EA        1409            mov     a,r2
0460 6001      1410            jz      L020002?
0462           1411   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:394: mode = STOP;
0462 E4        1412            clr     a
0463 F5C0      1413            mov     _mode,a
0465 F5C1      1414            mov     (_mode + 1),a
0467           1415   L020002?:
0467           1416   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:398: if (period>360.0 && period<450.0){
0467 E4        1417            clr     a
0468 C0E0      1418            push    acc
046A C0E0      1419            push    acc
046C 74B4      1420            mov     a,#0xB4
046E C0E0      1421            push    acc
0470 7443      1422            mov     a,#0x43
0472 C0E0      1423            push    acc
0474 850082    1424            mov     dpl,_period
0477 850183    1425            mov     dph,(_period + 1)
047A 8502F0    1426            mov     b,(_period + 2)
047D E503      1427            mov     a,(_period + 3)
047F 120100    1428            lcall   ___fsgt
0482 AA82      1429            mov     r2,dpl
0484 E581      1430            mov     a,sp
0486 24FC      1431            add     a,#0xfc
0488 F581      1432            mov     sp,a
048A EA        1433            mov     a,r2
048B 6001      1434            jz      L020005?
048D E4        1435            clr     a
048E C0E0      1436            push    acc
0490 C0E0      1437            push    acc
0492 74E1      1438            mov     a,#0xE1
0494 C0E0      1439            push    acc
0496 7443      1440            mov     a,#0x43
0498 C0E0      1441            push    acc
049A 850082    1442            mov     dpl,_period
049D 850183    1443            mov     dph,(_period + 1)
04A0 8502F0    1444            mov     b,(_period + 2)
04A3 E503      1445            mov     a,(_period + 3)
04A5 120100    1446            lcall   ___fslt
04A8 AA82      1447            mov     r2,dpl
04AA E581      1448            mov     a,sp
04AC 24FC      1449            add     a,#0xfc
04AE F581      1450            mov     sp,a
04B0 EA        1451            mov     a,r2
04B1 6001      1452            jz      L020005?
04B3           1453   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:399: mode = FORWARD;
04B3 75C003    1454            mov     _mode,#0x03
04B6 E4        1455            clr     a
04B7 F5C1      1456            mov     (_mode + 1),a
04B9           1457   L020005?:
04B9           1458   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:402: if(period>135.0 && period<220.0){
04B9 E4        1459            clr     a
04BA C0E0      1460            push    acc
04BC C0E0      1461            push    acc
04BE 7407      1462            mov     a,#0x07
04C0 C0E0      1463            push    acc
04C2 7443      1464            mov     a,#0x43
04C4 C0E0      1465            push    acc
04C6 850082    1466            mov     dpl,_period
04C9 850183    1467            mov     dph,(_period + 1)
04CC 8502F0    1468            mov     b,(_period + 2)
04CF E503      1469            mov     a,(_period + 3)
04D1 120100    1470            lcall   ___fsgt
04D4 AA82      1471            mov     r2,dpl
04D6 E581      1472            mov     a,sp
04D8 24FC      1473            add     a,#0xfc
04DA F581      1474            mov     sp,a
04DC EA        1475            mov     a,r2
04DD 6001      1476            jz      L020010?
04DF E4        1477            clr     a
04E0 C0E0      1478            push    acc
04E2 C0E0      1479            push    acc
04E4 745C      1480            mov     a,#0x5C
04E6 C0E0      1481            push    acc
04E8 7443      1482            mov     a,#0x43
04EA C0E0      1483            push    acc
04EC 850082    1484            mov     dpl,_period
04EF 850183    1485            mov     dph,(_period + 1)
04F2 8502F0    1486            mov     b,(_period + 2)
04F5 E503      1487            mov     a,(_period + 3)
04F7 120100    1488            lcall   ___fslt
04FA AA82      1489            mov     r2,dpl
04FC E581      1490            mov     a,sp
04FE 24FC      1491            add     a,#0xfc
0500 F581      1492            mov     sp,a
0502 EA        1493            mov     a,r2
0503 6001      1494            jz      L020010?
0505           1495   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:403: mode = ROTATE;
0505 75C005    1496            mov     _mode,#0x05
0508 E4        1497            clr     a
0509 F5C1      1498            mov     (_mode + 1),a
050B           1499   L020010?:
050B 22        1500            ret
050C           1501   ;------------------------------------------------------------
050C           1502   ;Allocation info for local variables in function 'MotorControl'
050C           1503   ;------------------------------------------------------------
050C           1504   ;IndVolts                  Allocated with name '_MotorControl_IndVolts_1_90'
050C           1505   ;------------------------------------------------------------
050C           1506   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:413: void MotorControl (volatile float IndVolts[])
050C           1507   ;        -----------------------------------------
050C           1508   ;         function MotorControl
050C           1509   ;        -----------------------------------------
050C           1510   _MotorControl:
050C 8582F8    1511            mov     _MotorControl_IndVolts_1_90,dpl
050F 8583F9    1512            mov     (_MotorControl_IndVolts_1_90 + 1),dph
0512 85F0FA    1513            mov     (_MotorControl_IndVolts_1_90 + 2),b
0515           1514   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:416: switch (mode){
0515 C3        1515            clr     c
0516 7405      1516            mov     a,#0x05
0518 95C0      1517            subb    a,_mode
051A E4        1518            clr     a
051B 95C1      1519            subb    a,(_mode + 1)
051D 5001      1520            jnc     L021028?
051F 22        1521            ret
0520           1522   L021028?:
0520 E5C0      1523            mov     a,_mode
0522 25C0      1524            add     a,_mode
0524 25C0      1525            add     a,_mode
0526 90AA28    1526            mov     dptr,#L021029?
0529 73        1527            jmp     @a+dptr
052A           1528   L021029?:
052A 020100    1529            ljmp    L021015?
052D 020100    1530            ljmp    L021016?
0530 020100    1531            ljmp    L021017?
0533 020100    1532            ljmp    L021001?
0536 020100    1533            ljmp    L021008?
0539 020100    1534            ljmp    L021018?
053C           1535   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:418: case FORWARD:
053C           1536   L021001?:
053C           1537   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:419: if((IndVolts[0] - Vblue_middle) > Vblue_thresh){
053C AAF8      1538            mov     r2,_MotorControl_IndVolts_1_90
053E ABF9      1539            mov     r3,(_MotorControl_IndVolts_1_90 + 1)
0540 ACFA      1540            mov     r4,(_MotorControl_IndVolts_1_90 + 2)
0542 8A82      1541            mov     dpl,r2
0544 8B83      1542            mov     dph,r3
0546 8CF0      1543            mov     b,r4
0548 120100    1544            lcall   __gptrget
054B FD        1545            mov     r5,a
054C A3        1546            inc     dptr
054D 120100    1547            lcall   __gptrget
0550 FE        1548            mov     r6,a
0551 A3        1549            inc     dptr
0552 120100    1550            lcall   __gptrget
0555 FF        1551            mov     r7,a
0556 A3        1552            inc     dptr
0557 120100    1553            lcall   __gptrget
055A F8        1554            mov     r0,a
055B C002      1555            push    ar2
055D C003      1556            push    ar3
055F C004      1557            push    ar4
0561 7462      1558            mov     a,#0x62
0563 C0E0      1559            push    acc
0565 7410      1560            mov     a,#0x10
0567 C0E0      1561            push    acc
0569 74F8      1562            mov     a,#0xF8
056B C0E0      1563            push    acc
056D 743E      1564            mov     a,#0x3E
056F C0E0      1565            push    acc
0571 8D82      1566            mov     dpl,r5
0573 8E83      1567            mov     dph,r6
0575 8FF0      1568            mov     b,r7
0577 E8        1569            mov     a,r0
0578 120100    1570            lcall   ___fssub
057B AD82      1571            mov     r5,dpl
057D AE83      1572            mov     r6,dph
057F AFF0      1573            mov     r7,b
0581 F8        1574            mov     r0,a
0582 E581      1575            mov     a,sp
0584 24FC      1576            add     a,#0xfc
0586 F581      1577            mov     sp,a
0588 74AC      1578            mov     a,#0xAC
058A C0E0      1579            push    acc
058C 741C      1580            mov     a,#0x1C
058E C0E0      1581            push    acc
0590 74DA      1582            mov     a,#0xDA
0592 C0E0      1583            push    acc
0594 743D      1584            mov     a,#0x3D
0596 C0E0      1585            push    acc
0598 8D82      1586            mov     dpl,r5
059A 8E83      1587            mov     dph,r6
059C 8FF0      1588            mov     b,r7
059E E8        1589            mov     a,r0
059F 120100    1590            lcall   ___fsgt
05A2 AD82      1591            mov     r5,dpl
05A4 E581      1592            mov     a,sp
05A6 24FC      1593            add     a,#0xfc
05A8 F581      1594            mov     sp,a
05AA D004      1595            pop     ar4
05AC D003      1596            pop     ar3
05AE D002      1597            pop     ar2
05B0 ED        1598            mov     a,r5
05B1 6001      1599            jz      L021006?
05B3           1600   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:420: pwm_BLU1= 0;
05B3 756800    1601            mov     _pwm_BLU1,#0x00
05B6           1602   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:421: pwm_BLU0 = 0;
05B6 75A800    1603            mov     _pwm_BLU0,#0x00
05B9           1604   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:422: pwm_RED1 = power;
05B9 85E8E8    1605            mov     _pwm_RED1,_power
05BC           1606   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:423: pwm_RED0 = 0; 
05BC 752800    1607            mov     _pwm_RED0,#0x00
05BF 22        1608            ret
05C0           1609   L021006?:
05C0           1610   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:426: else if( (IndVolts[1] - Vred_middle) > Vred_thresh ){
05C0 7404      1611            mov     a,#0x04
05C2 2A        1612            add     a,r2
05C3 FA        1613            mov     r2,a
05C4 E4        1614            clr     a
05C5 3B        1615            addc    a,r3
05C6 FB        1616            mov     r3,a
05C7 8A82      1617            mov     dpl,r2
05C9 8B83      1618            mov     dph,r3
05CB 8CF0      1619            mov     b,r4
05CD 120100    1620            lcall   __gptrget
05D0 FA        1621            mov     r2,a
05D1 A3        1622            inc     dptr
05D2 120100    1623            lcall   __gptrget
05D5 FB        1624            mov     r3,a
05D6 A3        1625            inc     dptr
05D7 120100    1626            lcall   __gptrget
05DA FC        1627            mov     r4,a
05DB A3        1628            inc     dptr
05DC 120100    1629            lcall   __gptrget
05DF FD        1630            mov     r5,a
05E0 741B      1631            mov     a,#0x1B
05E2 C0E0      1632            push    acc
05E4 742F      1633            mov     a,#0x2F
05E6 C0E0      1634            push    acc
05E8 74CD      1635            mov     a,#0xCD
05EA C0E0      1636            push    acc
05EC 743E      1637            mov     a,#0x3E
05EE C0E0      1638            push    acc
05F0 8A82      1639            mov     dpl,r2
05F2 8B83      1640            mov     dph,r3
05F4 8CF0      1641            mov     b,r4
05F6 ED        1642            mov     a,r5
05F7 120100    1643            lcall   ___fssub
05FA AA82      1644            mov     r2,dpl
05FC AB83      1645            mov     r3,dph
05FE ACF0      1646            mov     r4,b
0600 FD        1647            mov     r5,a
0601 E581      1648            mov     a,sp
0603 24FC      1649            add     a,#0xfc
0605 F581      1650            mov     sp,a
0607 74AC      1651            mov     a,#0xAC
0609 C0E0      1652            push    acc
060B 741C      1653            mov     a,#0x1C
060D C0E0      1654            push    acc
060F 745A      1655            mov     a,#0x5A
0611 C0E0      1656            push    acc
0613 743D      1657            mov     a,#0x3D
0615 C0E0      1658            push    acc
0617 8A82      1659            mov     dpl,r2
0619 8B83      1660            mov     dph,r3
061B 8CF0      1661            mov     b,r4
061D ED        1662            mov     a,r5
061E 120100    1663            lcall   ___fsgt
0621 AA82      1664            mov     r2,dpl
0623 E581      1665            mov     a,sp
0625 24FC      1666            add     a,#0xfc
0627 F581      1667            mov     sp,a
0629 EA        1668            mov     a,r2
062A 6001      1669            jz      L021003?
062C           1670   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:427: pwm_BLU1=power;
062C 85E868    1671            mov     _pwm_BLU1,_power
062F           1672   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:428: pwm_BLU0=0;
062F 75A800    1673            mov     _pwm_BLU0,#0x00
0632           1674   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:429: pwm_RED1=0;
0632 75E800    1675            mov     _pwm_RED1,#0x00
0635           1676   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:430: pwm_RED0=0;
0635 752800    1677            mov     _pwm_RED0,#0x00
0638 22        1678            ret
0639           1679   L021003?:
0639           1680   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:433: pwm_BLU1 = power;
0639 85E868    1681            mov     _pwm_BLU1,_power
063C           1682   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:434: pwm_BLU0 = 0;
063C 75A800    1683            mov     _pwm_BLU0,#0x00
063F           1684   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:435: pwm_RED1 = power;
063F 85E8E8    1685            mov     _pwm_RED1,_power
0642           1686   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:436: pwm_RED0 = 0;
0642 752800    1687            mov     _pwm_RED0,#0x00
0645           1688   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:438: break;
0645 22        1689            ret
0646           1690   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:441: case BACKWARD:
0646           1691   L021008?:
0646           1692   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:442: if((IndVolts[0] - Vblue_middle) > Vblue_thresh){
0646 AAF8      1693            mov     r2,_MotorControl_IndVolts_1_90
0648 ABF9      1694            mov     r3,(_MotorControl_IndVolts_1_90 + 1)
064A ACFA      1695            mov     r4,(_MotorControl_IndVolts_1_90 + 2)
064C 8A82      1696            mov     dpl,r2
064E 8B83      1697            mov     dph,r3
0650 8CF0      1698            mov     b,r4
0652 120100    1699            lcall   __gptrget
0655 FD        1700            mov     r5,a
0656 A3        1701            inc     dptr
0657 120100    1702            lcall   __gptrget
065A FE        1703            mov     r6,a
065B A3        1704            inc     dptr
065C 120100    1705            lcall   __gptrget
065F FF        1706            mov     r7,a
0660 A3        1707            inc     dptr
0661 120100    1708            lcall   __gptrget
0664 F8        1709            mov     r0,a
0665 C002      1710            push    ar2
0667 C003      1711            push    ar3
0669 C004      1712            push    ar4
066B 7462      1713            mov     a,#0x62
066D C0E0      1714            push    acc
066F 7410      1715            mov     a,#0x10
0671 C0E0      1716            push    acc
0673 74F8      1717            mov     a,#0xF8
0675 C0E0      1718            push    acc
0677 743E      1719            mov     a,#0x3E
0679 C0E0      1720            push    acc
067B 8D82      1721            mov     dpl,r5
067D 8E83      1722            mov     dph,r6
067F 8FF0      1723            mov     b,r7
0681 E8        1724            mov     a,r0
0682 120100    1725            lcall   ___fssub
0685 AD82      1726            mov     r5,dpl
0687 AE83      1727            mov     r6,dph
0689 AFF0      1728            mov     r7,b
068B F8        1729            mov     r0,a
068C E581      1730            mov     a,sp
068E 24FC      1731            add     a,#0xfc
0690 F581      1732            mov     sp,a
0692 74AC      1733            mov     a,#0xAC
0694 C0E0      1734            push    acc
0696 741C      1735            mov     a,#0x1C
0698 C0E0      1736            push    acc
069A 74DA      1737            mov     a,#0xDA
069C C0E0      1738            push    acc
069E 743D      1739            mov     a,#0x3D
06A0 C0E0      1740            push    acc
06A2 8D82      1741            mov     dpl,r5
06A4 8E83      1742            mov     dph,r6
06A6 8FF0      1743            mov     b,r7
06A8 E8        1744            mov     a,r0
06A9 120100    1745            lcall   ___fsgt
06AC AD82      1746            mov     r5,dpl
06AE E581      1747            mov     a,sp
06B0 24FC      1748            add     a,#0xfc
06B2 F581      1749            mov     sp,a
06B4 D004      1750            pop     ar4
06B6 D003      1751            pop     ar3
06B8 D002      1752            pop     ar2
06BA ED        1753            mov     a,r5
06BB 6001      1754            jz      L021013?
06BD           1755   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:443: pwm_BLU1= 0;
06BD 756800    1756            mov     _pwm_BLU1,#0x00
06C0           1757   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:444: pwm_BLU0 = 0;
06C0 75A800    1758            mov     _pwm_BLU0,#0x00
06C3           1759   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:445: pwm_RED1 = 0;
06C3 75E800    1760            mov     _pwm_RED1,#0x00
06C6           1761   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:446: pwm_RED0 = power; 
06C6 85E828    1762            mov     _pwm_RED0,_power
06C9 22        1763            ret
06CA           1764   L021013?:
06CA           1765   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:449: else if( (IndVolts[1] - Vred_middle) > Vred_thresh ){
06CA 7404      1766            mov     a,#0x04
06CC 2A        1767            add     a,r2
06CD FA        1768            mov     r2,a
06CE E4        1769            clr     a
06CF 3B        1770            addc    a,r3
06D0 FB        1771            mov     r3,a
06D1 8A82      1772            mov     dpl,r2
06D3 8B83      1773            mov     dph,r3
06D5 8CF0      1774            mov     b,r4
06D7 120100    1775            lcall   __gptrget
06DA FA        1776            mov     r2,a
06DB A3        1777            inc     dptr
06DC 120100    1778            lcall   __gptrget
06DF FB        1779            mov     r3,a
06E0 A3        1780            inc     dptr
06E1 120100    1781            lcall   __gptrget
06E4 FC        1782            mov     r4,a
06E5 A3        1783            inc     dptr
06E6 120100    1784            lcall   __gptrget
06E9 FD        1785            mov     r5,a
06EA 741B      1786            mov     a,#0x1B
06EC C0E0      1787            push    acc
06EE 742F      1788            mov     a,#0x2F
06F0 C0E0      1789            push    acc
06F2 74CD      1790            mov     a,#0xCD
06F4 C0E0      1791            push    acc
06F6 743E      1792            mov     a,#0x3E
06F8 C0E0      1793            push    acc
06FA 8A82      1794            mov     dpl,r2
06FC 8B83      1795            mov     dph,r3
06FE 8CF0      1796            mov     b,r4
0700 ED        1797            mov     a,r5
0701 120100    1798            lcall   ___fssub
0704 AA82      1799            mov     r2,dpl
0706 AB83      1800            mov     r3,dph
0708 ACF0      1801            mov     r4,b
070A FD        1802            mov     r5,a
070B E581      1803            mov     a,sp
070D 24FC      1804            add     a,#0xfc
070F F581      1805            mov     sp,a
0711 74AC      1806            mov     a,#0xAC
0713 C0E0      1807            push    acc
0715 741C      1808            mov     a,#0x1C
0717 C0E0      1809            push    acc
0719 745A      1810            mov     a,#0x5A
071B C0E0      1811            push    acc
071D 743D      1812            mov     a,#0x3D
071F C0E0      1813            push    acc
0721 8A82      1814            mov     dpl,r2
0723 8B83      1815            mov     dph,r3
0725 8CF0      1816            mov     b,r4
0727 ED        1817            mov     a,r5
0728 120100    1818            lcall   ___fsgt
072B AA82      1819            mov     r2,dpl
072D E581      1820            mov     a,sp
072F 24FC      1821            add     a,#0xfc
0731 F581      1822            mov     sp,a
0733 EA        1823            mov     a,r2
0734 6001      1824            jz      L021010?
0736           1825   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:450: pwm_BLU1=0;
0736 756800    1826            mov     _pwm_BLU1,#0x00
0739           1827   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:451: pwm_BLU0=power;
0739 85E8A8    1828            mov     _pwm_BLU0,_power
073C           1829   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:452: pwm_RED1=0;
073C 75E800    1830            mov     _pwm_RED1,#0x00
073F           1831   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:453: pwm_RED0=0;
073F 752800    1832            mov     _pwm_RED0,#0x00
0742 22        1833            ret
0743           1834   L021010?:
0743           1835   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:456: pwm_BLU1 = power;
0743 85E868    1836            mov     _pwm_BLU1,_power
0746           1837   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:457: pwm_BLU0 = 0;
0746 75A800    1838            mov     _pwm_BLU0,#0x00
0749           1839   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:458: pwm_RED1 = power;
0749 85E8E8    1840            mov     _pwm_RED1,_power
074C           1841   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:459: pwm_RED0 = 0;
074C 752800    1842            mov     _pwm_RED0,#0x00
074F           1843   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:461: break;
074F           1844   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:465: case STOP:
074F 22        1845            ret
0750           1846   L021015?:
0750           1847   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:466: pwm_BLU1 = 0;
0750 756800    1848            mov     _pwm_BLU1,#0x00
0753           1849   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:467: pwm_BLU0 = 0;
0753 75A800    1850            mov     _pwm_BLU0,#0x00
0756           1851   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:468: pwm_RED1 = 0;
0756 75E800    1852            mov     _pwm_RED1,#0x00
0759           1853   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:469: pwm_RED0 = 0;
0759 752800    1854            mov     _pwm_RED0,#0x00
075C           1855   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:470: break;
075C           1856   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:474: case NITL:
075C 22        1857            ret
075D           1858   L021016?:
075D           1859   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:475: pwm_BLU1 = 0;
075D           1860   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:476: pwm_BLU0 = 0;
075D           1861   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:477: pwm_RED1 = 3*power;
075D E4        1862            clr     a
075E F568      1863            mov     _pwm_BLU1,a
0760 F5A8      1864            mov     _pwm_BLU0,a
0762 E5E8      1865            mov     a,_power
0764 75F003    1866            mov     b,#0x03
0767 A4        1867            mul     ab
0768 F5E8      1868            mov     _pwm_RED1,a
076A           1869   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:478: pwm_RED0 = 0;
076A 752800    1870            mov     _pwm_RED0,#0x00
076D           1871   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:479: waitms(1000);
076D 9003E8    1872            mov     dptr,#0x03E8
0770 120100    1873            lcall   _waitms
0773           1874   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:480: mode=STOP;
0773 E4        1875            clr     a
0774 F5C0      1876            mov     _mode,a
0776 F5C1      1877            mov     (_mode + 1),a
0778           1878   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:481: break;
0778           1879   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:485: case NITR:
0778 22        1880            ret
0779           1881   L021017?:
0779           1882   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:486: pwm_BLU1 = 3*power;
0779 E5E8      1883            mov     a,_power
077B 75F003    1884            mov     b,#0x03
077E A4        1885            mul     ab
077F F568      1886            mov     _pwm_BLU1,a
0781           1887   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:487: pwm_BLU0 = 0;
0781 75A800    1888            mov     _pwm_BLU0,#0x00
0784           1889   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:488: pwm_RED1 = 0;
0784 75E800    1890            mov     _pwm_RED1,#0x00
0787           1891   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:489: pwm_RED0 = 0;
0787 752800    1892            mov     _pwm_RED0,#0x00
078A           1893   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:490: waitms(1000);
078A 9003E8    1894            mov     dptr,#0x03E8
078D 120100    1895            lcall   _waitms
0790           1896   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:491: mode = STOP;
0790 E4        1897            clr     a
0791 F5C0      1898            mov     _mode,a
0793 F5C1      1899            mov     (_mode + 1),a
0795           1900   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:492: break;
0795           1901   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:496: case ROTATE:
0795 22        1902            ret
0796           1903   L021018?:
0796           1904   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:497: pwm_BLU1 = 3*power;
0796 E5E8      1905            mov     a,_power
0798 75F003    1906            mov     b,#0x03
079B A4        1907            mul     ab
079C F568      1908            mov     _pwm_BLU1,a
079E           1909   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:498: pwm_BLU0 = 0;
079E           1910   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:499: pwm_RED1 = 0;
079E           1911   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:500: pwm_RED0 = 3*power;
079E E4        1912            clr     a
079F F5A8      1913            mov     _pwm_BLU0,a
07A1 F5E8      1914            mov     _pwm_RED1,a
07A3 E5E8      1915            mov     a,_power
07A5 75F003    1916            mov     b,#0x03
07A8 A4        1917            mul     ab
07A9 F528      1918            mov     _pwm_RED0,a
07AB           1919   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:501: waitms(1200);
07AB 9004B0    1920            mov     dptr,#0x04B0
07AE 120100    1921            lcall   _waitms
07B1           1922   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:502: mode = STOP;
07B1 E4        1923            clr     a
07B2 F5C0      1924            mov     _mode,a
07B4 F5C1      1925            mov     (_mode + 1),a
07B6           1926   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:508: }
07B6 22        1927            ret
07B7           1928   ;------------------------------------------------------------
07B7           1929   ;Allocation info for local variables in function 'DebuggingFctn'
07B7           1930   ;------------------------------------------------------------
07B7           1931   ;IndVolts                  Allocated with name '_DebuggingFctn_IndVolts_1_99'
07B7           1932   ;------------------------------------------------------------
07B7           1933   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:519: void DebuggingFctn (volatile float IndVolts[])
07B7           1934   ;        -----------------------------------------
07B7           1935   ;         function DebuggingFctn
07B7           1936   ;        -----------------------------------------
07B7           1937   _DebuggingFctn:
07B7 858248    1938            mov     _DebuggingFctn_IndVolts_1_99,dpl
07BA 858349    1939            mov     (_DebuggingFctn_IndVolts_1_99 + 1),dph
07BD 85F04A    1940            mov     (_DebuggingFctn_IndVolts_1_99 + 2),b
07C0           1941   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:521: sprintf(debugstring, "%4.3fms", period);
07C0 C000      1942            push    _period
07C2 C001      1943            push    (_period + 1)
07C4 C002      1944            push    (_period + 2)
07C6 C003      1945            push    (_period + 3)
07C8 7428      1946            mov     a,#__str_1
07CA C0E0      1947            push    acc
07CC 74AD      1948            mov     a,#(__str_1 >> 8)
07CE C0E0      1949            push    acc
07D0 7480      1950            mov     a,#0x80
07D2 C0E0      1951            push    acc
07D4 74C0      1952            mov     a,#_debugstring
07D6 C0E0      1953            push    acc
07D8 7417      1954            mov     a,#(_debugstring >> 8)
07DA C0E0      1955            push    acc
07DC 7440      1956            mov     a,#0x40
07DE C0E0      1957            push    acc
07E0 120100    1958            lcall   _sprintf
07E3 E581      1959            mov     a,sp
07E5 24F6      1960            add     a,#0xf6
07E7 F581      1961            mov     sp,a
07E9           1962   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:522: LCDprint(debugstring, 1,1);
07E9 758001    1963            mov     _LCDprint_PARM_2,#0x01
07EC D230      1964            setb    _LCDprint_PARM_3
07EE 9017C0    1965            mov     dptr,#_debugstring
07F1 75F040    1966            mov     b,#0x40
07F4 120100    1967            lcall   _LCDprint
07F7           1968   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:523: sprintf(debugstring, "%3.3fV", IndVolts[0]);
07F7 AA48      1969            mov     r2,_DebuggingFctn_IndVolts_1_99
07F9 AB49      1970            mov     r3,(_DebuggingFctn_IndVolts_1_99 + 1)
07FB AC4A      1971            mov     r4,(_DebuggingFctn_IndVolts_1_99 + 2)
07FD 8A82      1972            mov     dpl,r2
07FF 8B83      1973            mov     dph,r3
0801 8CF0      1974            mov     b,r4
0803 120100    1975            lcall   __gptrget
0806 FA        1976            mov     r2,a
0807 A3        1977            inc     dptr
0808 120100    1978            lcall   __gptrget
080B FB        1979            mov     r3,a
080C A3        1980            inc     dptr
080D 120100    1981            lcall   __gptrget
0810 FC        1982            mov     r4,a
0811 A3        1983            inc     dptr
0812 120100    1984            lcall   __gptrget
0815 FD        1985            mov     r5,a
0816 C002      1986            push    ar2
0818 C003      1987            push    ar3
081A C004      1988            push    ar4
081C C005      1989            push    ar5
081E 74A8      1990            mov     a,#__str_2
0820 C0E0      1991            push    acc
0822 74AD      1992            mov     a,#(__str_2 >> 8)
0824 C0E0      1993            push    acc
0826 7480      1994            mov     a,#0x80
0828 C0E0      1995            push    acc
082A 74C0      1996            mov     a,#_debugstring
082C C0E0      1997            push    acc
082E 7417      1998            mov     a,#(_debugstring >> 8)
0830 C0E0      1999            push    acc
0832 7440      2000            mov     a,#0x40
0834 C0E0      2001            push    acc
0836 120100    2002            lcall   _sprintf
0839 E581      2003            mov     a,sp
083B 24F6      2004            add     a,#0xf6
083D F581      2005            mov     sp,a
083F           2006   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:524: LCDprint(debugstring, 2,1);
083F 758002    2007            mov     _LCDprint_PARM_2,#0x02
0842 D230      2008            setb    _LCDprint_PARM_3
0844 9017C0    2009            mov     dptr,#_debugstring
0847 75F040    2010            mov     b,#0x40
084A 020100    2011            ljmp    _LCDprint
084D           2012   ;------------------------------------------------------------
084D           2013   ;Allocation info for local variables in function 'main'
084D           2014   ;------------------------------------------------------------
084D           2015   ;IndVolts                  Allocated with name '_main_IndVolts_1_102'
084D           2016   ;sloc0                     Allocated with name '_main_sloc0_1_0'
084D           2017   ;------------------------------------------------------------
084D           2018   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:532: void main (void)
084D           2019   ;        -----------------------------------------
084D           2020   ;         function main
084D           2021   ;        -----------------------------------------
084D           2022   _main:
084D           2023   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:539: TIMER0_Init(); // Initialize timer 0 to read the frequency of the fm signal
084D 120100    2024            lcall   _TIMER0_Init
0850           2025   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:540: TIMER2_Init(); // Initialize timer 2 for periodic interrupts used for motor control
0850 120100    2026            lcall   _TIMER2_Init
0853           2027   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:541: LCD_4BIT(); // Initialize the LCD
0853 120100    2028            lcall   _LCD_4BIT
0856           2029   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:542: EA=1; // Enable interrupts
0856 D2AF      2030            setb    _EA
0858           2031   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:544: InitPinADC(1, 4); // Configure P1.4 as analog input
0858 755004    2032            mov     _InitPinADC_PARM_2,#0x04
085B 758201    2033            mov     dpl,#0x01
085E 120100    2034            lcall   _InitPinADC
0861           2035   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:545: InitPinADC(2, 0); // Configure P2.0 as analog input
0861 755000    2036            mov     _InitPinADC_PARM_2,#0x00
0864 758202    2037            mov     dpl,#0x02
0867 120100    2038            lcall   _InitPinADC
086A           2039   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:546: InitPinADC(2, 7); // Configure P2.7 as analog input
086A 755007    2040            mov     _InitPinADC_PARM_2,#0x07
086D 758202    2041            mov     dpl,#0x02
0870 120100    2042            lcall   _InitPinADC
0873           2043   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:547: InitADC();
0873 120100    2044            lcall   _InitADC
0876           2045   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:548: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0876 74E8      2046            mov     a,#__str_3
0878 C0E0      2047            push    acc
087A 74AD      2048            mov     a,#(__str_3 >> 8)
087C C0E0      2049            push    acc
087E 7480      2050            mov     a,#0x80
0880 C0E0      2051            push    acc
0882 120100    2052            lcall   _printf
0885 1581      2053            dec     sp
0887 1581      2054            dec     sp
0889 1581      2055            dec     sp
088B           2056   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:556: while(1)
088B           2057   L023009?:
088B           2058   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:560: IndVolts[0] = Volts_at_Pin(LQFP32_MUX_P2_7);
088B 75820F    2059            mov     dpl,#0x0F
088E 120100    2060            lcall   _Volts_at_Pin
0891 AA82      2061            mov     r2,dpl
0893 AB83      2062            mov     r3,dph
0895 ACF0      2063            mov     r4,b
0897 FD        2064            mov     r5,a
0898 8A98      2065            mov     _main_IndVolts_1_102,r2
089A 8B99      2066            mov     (_main_IndVolts_1_102 + 1),r3
089C 8C9A      2067            mov     (_main_IndVolts_1_102 + 2),r4
089E 8D9B      2068            mov     (_main_IndVolts_1_102 + 3),r5
08A0           2069   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:561: IndVolts[1] = Volts_at_Pin(LQFP32_MUX_P1_4);
08A0 758204    2070            mov     dpl,#0x04
08A3 120100    2071            lcall   _Volts_at_Pin
08A6 AA82      2072            mov     r2,dpl
08A8 AB83      2073            mov     r3,dph
08AA ACF0      2074            mov     r4,b
08AC FD        2075            mov     r5,a
08AD 8A9C      2076            mov     (_main_IndVolts_1_102 + 0x0004),r2
08AF 8B9D      2077            mov     ((_main_IndVolts_1_102 + 0x0004) + 1),r3
08B1 8C9E      2078            mov     ((_main_IndVolts_1_102 + 0x0004) + 2),r4
08B3 8D9F      2079            mov     ((_main_IndVolts_1_102 + 0x0004) + 3),r5
08B5           2080   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:562: IndVolts[2] = Volts_at_Pin(LQFP32_MUX_P2_0);
08B5 758208    2081            mov     dpl,#0x08
08B8 120100    2082            lcall   _Volts_at_Pin
08BB AA82      2083            mov     r2,dpl
08BD AB83      2084            mov     r3,dph
08BF ACF0      2085            mov     r4,b
08C1 FD        2086            mov     r5,a
08C2 8AA0      2087            mov     (_main_IndVolts_1_102 + 0x0008),r2
08C4 8BA1      2088            mov     ((_main_IndVolts_1_102 + 0x0008) + 1),r3
08C6 8CA2      2089            mov     ((_main_IndVolts_1_102 + 0x0008) + 2),r4
08C8 8DA3      2090            mov     ((_main_IndVolts_1_102 + 0x0008) + 3),r5
08CA           2091   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:566: TL0=0;
08CA 758A00    2092            mov     _TL0,#0x00
08CD           2093   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:567: TH0=0;
08CD 758C00    2094            mov     _TH0,#0x00
08D0           2095   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:568: TF0=0;
08D0 C28D      2096            clr     _TF0
08D2           2097   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:569: overflow_count=0;
08D2 758000    2098            mov     _overflow_count,#0x00
08D5           2099   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:571: if (IndVolts[0]<0.10){
08D5 74CD      2100            mov     a,#0xCD
08D7 C0E0      2101            push    acc
08D9 74CC      2102            mov     a,#0xCC
08DB C0E0      2103            push    acc
08DD C0E0      2104            push    acc
08DF 743D      2105            mov     a,#0x3D
08E1 C0E0      2106            push    acc
08E3 859882    2107            mov     dpl,_main_IndVolts_1_102
08E6 859983    2108            mov     dph,(_main_IndVolts_1_102 + 1)
08E9 859AF0    2109            mov     b,(_main_IndVolts_1_102 + 2)
08EC E59B      2110            mov     a,(_main_IndVolts_1_102 + 3)
08EE 120100    2111            lcall   ___fslt
08F1 AA82      2112            mov     r2,dpl
08F3 E581      2113            mov     a,sp
08F5 24FC      2114            add     a,#0xfc
08F7 F581      2115            mov     sp,a
08F9 EA        2116            mov     a,r2
08FA 7001      2117            jnz     L023018?
08FC 020100    2118            ljmp    L023007?
08FF           2119   L023018?:
08FF           2120   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:573: TR0=1; // logic zero signal detected! detect time interval btw two falling edges. Start the timer
08FF D28C      2121            setb    _TR0
0901           2122   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:574: while(IndVolts[0]<0.10) // Wait for the signal to be logic one
0901           2123   L023003?:
0901 74CD      2124            mov     a,#0xCD
0903 C0E0      2125            push    acc
0905 74CC      2126            mov     a,#0xCC
0907 C0E0      2127            push    acc
0909 C0E0      2128            push    acc
090B 743D      2129            mov     a,#0x3D
090D C0E0      2130            push    acc
090F 859882    2131            mov     dpl,_main_IndVolts_1_102
0912 859983    2132            mov     dph,(_main_IndVolts_1_102 + 1)
0915 859AF0    2133            mov     b,(_main_IndVolts_1_102 + 2)
0918 E59B      2134            mov     a,(_main_IndVolts_1_102 + 3)
091A 120100    2135            lcall   ___fslt
091D AA82      2136            mov     r2,dpl
091F E581      2137            mov     a,sp
0921 24FC      2138            add     a,#0xfc
0923 F581      2139            mov     sp,a
0925 EA        2140            mov     a,r2
0926 6001      2141            jz      L023005?
0928           2142   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:576: IndVolts[0] = Volts_at_Pin(LQFP32_MUX_P2_7);
0928 75820F    2143            mov     dpl,#0x0F
092B 120100    2144            lcall   _Volts_at_Pin
092E AA82      2145            mov     r2,dpl
0930 AB83      2146            mov     r3,dph
0932 ACF0      2147            mov     r4,b
0934 FD        2148            mov     r5,a
0935 8A98      2149            mov     _main_IndVolts_1_102,r2
0937 8B99      2150            mov     (_main_IndVolts_1_102 + 1),r3
0939 8C9A      2151            mov     (_main_IndVolts_1_102 + 2),r4
093B 8D9B      2152            mov     (_main_IndVolts_1_102 + 3),r5
093D           2153   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:577: if(TF0==1) // Did the 16-bit timer overflow?
093D           2154   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:579: TF0=0;
093D 108DA8    2155            jbc     _TF0,L023020?
0940 8001      2156            sjmp    L023003?
0942           2157   L023020?:
0942           2158   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:580: overflow_count++;
0942 0580      2159            inc     _overflow_count
0944 8001      2160            sjmp    L023003?
0946           2161   L023005?:
0946           2162   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:585: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period. Then convert it to frequency
0946 C28C      2163            clr     _TR0
0948           2164   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:587: period=1000.0*(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK); // Compute period. Unit in ms
0948 858082    2165            mov     dpl,_overflow_count
094B 120100    2166            lcall   ___uchar2fs
094E AA82      2167            mov     r2,dpl
0950 AB83      2168            mov     r3,dph
0952 ACF0      2169            mov     r4,b
0954 FD        2170            mov     r5,a
0955 C002      2171            push    ar2
0957 C003      2172            push    ar3
0959 C004      2173            push    ar4
095B C005      2174            push    ar5
095D 900000    2175            mov     dptr,#0x0000
0960 75F080    2176            mov     b,#0x80
0963 7447      2177            mov     a,#0x47
0965 120100    2178            lcall   ___fsmul
0968 8582D8    2179            mov     _main_sloc0_1_0,dpl
096B 8583D9    2180            mov     (_main_sloc0_1_0 + 1),dph
096E 85F0DA    2181            mov     (_main_sloc0_1_0 + 2),b
0971 F5DB      2182            mov     (_main_sloc0_1_0 + 3),a
0973 E581      2183            mov     a,sp
0975 24FC      2184            add     a,#0xfc
0977 F581      2185            mov     sp,a
0979 858C82    2186            mov     dpl,_TH0
097C 120100    2187            lcall   ___uchar2fs
097F AE82      2188            mov     r6,dpl
0981 AF83      2189            mov     r7,dph
0983 AAF0      2190            mov     r2,b
0985 FB        2191            mov     r3,a
0986 C006      2192            push    ar6
0988 C007      2193            push    ar7
098A C002      2194            push    ar2
098C C003      2195            push    ar3
098E 900000    2196            mov     dptr,#0x0000
0991 75F080    2197            mov     b,#0x80
0994 7443      2198            mov     a,#0x43
0996 120100    2199            lcall   ___fsmul
0999 AA82      2200            mov     r2,dpl
099B AB83      2201            mov     r3,dph
099D ACF0      2202            mov     r4,b
099F FD        2203            mov     r5,a
09A0 E581      2204            mov     a,sp
09A2 24FC      2205            add     a,#0xfc
09A4 F581      2206            mov     sp,a
09A6 C002      2207            push    ar2
09A8 C003      2208            push    ar3
09AA C004      2209            push    ar4
09AC C005      2210            push    ar5
09AE 85D882    2211            mov     dpl,_main_sloc0_1_0
09B1 85D983    2212            mov     dph,(_main_sloc0_1_0 + 1)
09B4 85DAF0    2213            mov     b,(_main_sloc0_1_0 + 2)
09B7 E5DB      2214            mov     a,(_main_sloc0_1_0 + 3)
09B9 120100    2215            lcall   ___fsadd
09BC 8582D8    2216            mov     _main_sloc0_1_0,dpl
09BF 8583D9    2217            mov     (_main_sloc0_1_0 + 1),dph
09C2 85F0DA    2218            mov     (_main_sloc0_1_0 + 2),b
09C5 F5DB      2219            mov     (_main_sloc0_1_0 + 3),a
09C7 E581      2220            mov     a,sp
09C9 24FC      2221            add     a,#0xfc
09CB F581      2222            mov     sp,a
09CD AE8A      2223            mov     r6,_TL0
09CF 7F00      2224            mov     r7,#0x00
09D1 8E82      2225            mov     dpl,r6
09D3 8F83      2226            mov     dph,r7
09D5 120100    2227            lcall   ___sint2fs
09D8 AE82      2228            mov     r6,dpl
09DA AF83      2229            mov     r7,dph
09DC AAF0      2230            mov     r2,b
09DE FB        2231            mov     r3,a
09DF C006      2232            push    ar6
09E1 C007      2233            push    ar7
09E3 C002      2234            push    ar2
09E5 C003      2235            push    ar3
09E7 85D882    2236            mov     dpl,_main_sloc0_1_0
09EA 85D983    2237            mov     dph,(_main_sloc0_1_0 + 1)
09ED 85DAF0    2238            mov     b,(_main_sloc0_1_0 + 2)
09F0 E5DB      2239            mov     a,(_main_sloc0_1_0 + 3)
09F2 120100    2240            lcall   ___fsadd
09F5 AA82      2241            mov     r2,dpl
09F7 AB83      2242            mov     r3,dph
09F9 ACF0      2243            mov     r4,b
09FB FD        2244            mov     r5,a
09FC E581      2245            mov     a,sp
09FE 24FC      2246            add     a,#0xfc
0A00 F581      2247            mov     sp,a
0A02 C002      2248            push    ar2
0A04 C003      2249            push    ar3
0A06 C004      2250            push    ar4
0A08 C005      2251            push    ar5
0A0A 90126F    2252            mov     dptr,#0x126F
0A0D 75F083    2253            mov     b,#0x83
0A10 7439      2254            mov     a,#0x39
0A12 120100    2255            lcall   ___fsmul
0A15 858200    2256            mov     _period,dpl
0A18 858301    2257            mov     (_period + 1),dph
0A1B 85F002    2258            mov     (_period + 2),b
0A1E F503      2259            mov     (_period + 3),a
0A20 E581      2260            mov     a,sp
0A22 24FC      2261            add     a,#0xfc
0A24 F581      2262            mov     sp,a
0A26           2263   L023007?:
0A26           2264   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:593: DetermineMode();
0A26 120100    2265            lcall   _DetermineMode
0A29           2266   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:597: MotorControl(IndVolts);
0A29 909C98    2267            mov     dptr,#_main_IndVolts_1_102
0A2C 75F040    2268            mov     b,#0x40
0A2F 120100    2269            lcall   _MotorControl
0A32           2270   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:601: DebuggingFctn(IndVolts); 
0A32 909C98    2271            mov     dptr,#_main_IndVolts_1_102
0A35 75F040    2272            mov     b,#0x40
0A38 120100    2273            lcall   _DebuggingFctn
0A3B           2274   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:606: waitms(1);
0A3B 900001    2275            mov     dptr,#0x0001
0A3E 120100    2276            lcall   _waitms
0A41           2277   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:607: millisecond = millisecond + 1;
0A41 0540      2278            inc     _millisecond
0A43 E4        2279            clr     a
0A44 B540E8    2280            cjne    a,_millisecond,L023021?
0A47 0541      2281            inc     (_millisecond + 1)
0A49           2282   L023021?:
0A49 020100    2283            ljmp    L023009?
0A4C           2284            rseg R_CSEG
0A4C           2285   
0000           2286            rseg R_XINIT
0000           2287   
0000           2288            rseg R_CONST
0000           2289   __str_0:
0000 20202020  2290            db '                '
     20202020
     20202020
     20202020
0010 00        2291            db 0x00
0011           2292   __str_1:
0011 25342E33  2293            db '%4.3fms'
     666D73
0018 00        2294            db 0x00
0019           2295   __str_2:
0019 25332E33  2296            db '%3.3fV'
     6656
001F 00        2297            db 0x00
0020           2298   __str_3:
0020 1B        2299            db 0x1B
0021 5B324A    2300            db '[2J'
0024 00        2301            db 0x00
0025           2302   
002E           2303            CSEG
002E           2304   
002E           2305   end
