0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Mon Apr 03 00:57:24 2017
0000              5   ;--------------------------------------------------------
                  5   $name Receiver
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _DebuggingFctn
0000             30            public _MotorControl
0000             31            public _DetermineMode
0000             32            public _ReadFrequency
0000             33            public _Timer2_ISR
0000             34            public _Volts_at_Pin
0000             35            public _ADC_at_Pin
0000             36            public _InitPinADC
0000             37            public _InitADC
0000             38            public _TIMER2_Init
0000             39            public _TIMER0_Init
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public __c51_external_startup
0000             43            public _millisecond
0000             44            public _StopSigCount
0000             45            public _ForwardSigCount
0000             46            public _WriteCount
0000             47            public _FreqBuffer
0000             48            public _mode
0000             49            public _frequency
0000             50            public _overflow_count
0000             51            public _dirout
0000             52            public _pwm_RED1
0000             53            public _pwm_RED0
0000             54            public _pwm_BLU1
0000             55            public _pwm_BLU0
0000             56            public _power
0000             57            public _pwm_count
0000             58   ;--------------------------------------------------------
0000             59   ; Special Function Registers
0000             60   ;--------------------------------------------------------
0000             61   _P0             DATA 0x80
0000             62   _SP             DATA 0x81
0000             63   _DPL            DATA 0x82
0000             64   _DPH            DATA 0x83
0000             65   _EMI0TC         DATA 0x84
0000             66   _EMI0CF         DATA 0x85
0000             67   _OSCLCN         DATA 0x86
0000             68   _PCON           DATA 0x87
0000             69   _TCON           DATA 0x88
0000             70   _TMOD           DATA 0x89
0000             71   _TL0            DATA 0x8a
0000             72   _TL1            DATA 0x8b
0000             73   _TH0            DATA 0x8c
0000             74   _TH1            DATA 0x8d
0000             75   _CKCON          DATA 0x8e
0000             76   _PSCTL          DATA 0x8f
0000             77   _P1             DATA 0x90
0000             78   _TMR3CN         DATA 0x91
0000             79   _TMR4CN         DATA 0x91
0000             80   _TMR3RLL        DATA 0x92
0000             81   _TMR4RLL        DATA 0x92
0000             82   _TMR3RLH        DATA 0x93
0000             83   _TMR4RLH        DATA 0x93
0000             84   _TMR3L          DATA 0x94
0000             85   _TMR4L          DATA 0x94
0000             86   _TMR3H          DATA 0x95
0000             87   _TMR4H          DATA 0x95
0000             88   _USB0ADR        DATA 0x96
0000             89   _USB0DAT        DATA 0x97
0000             90   _SCON           DATA 0x98
0000             91   _SCON0          DATA 0x98
0000             92   _SBUF           DATA 0x99
0000             93   _SBUF0          DATA 0x99
0000             94   _CPT1CN         DATA 0x9a
0000             95   _CPT0CN         DATA 0x9b
0000             96   _CPT1MD         DATA 0x9c
0000             97   _CPT0MD         DATA 0x9d
0000             98   _CPT1MX         DATA 0x9e
0000             99   _CPT0MX         DATA 0x9f
0000            100   _P2             DATA 0xa0
0000            101   _SPI0CFG        DATA 0xa1
0000            102   _SPI0CKR        DATA 0xa2
0000            103   _SPI0DAT        DATA 0xa3
0000            104   _P0MDOUT        DATA 0xa4
0000            105   _P1MDOUT        DATA 0xa5
0000            106   _P2MDOUT        DATA 0xa6
0000            107   _P3MDOUT        DATA 0xa7
0000            108   _IE             DATA 0xa8
0000            109   _CLKSEL         DATA 0xa9
0000            110   _EMI0CN         DATA 0xaa
0000            111   __XPAGE         DATA 0xaa
0000            112   _SBCON1         DATA 0xac
0000            113   _P4MDOUT        DATA 0xae
0000            114   _PFE0CN         DATA 0xaf
0000            115   _P3             DATA 0xb0
0000            116   _OSCXCN         DATA 0xb1
0000            117   _OSCICN         DATA 0xb2
0000            118   _OSCICL         DATA 0xb3
0000            119   _SBRLL1         DATA 0xb4
0000            120   _SBRLH1         DATA 0xb5
0000            121   _FLSCL          DATA 0xb6
0000            122   _FLKEY          DATA 0xb7
0000            123   _IP             DATA 0xb8
0000            124   _CLKMUL         DATA 0xb9
0000            125   _SMBTC          DATA 0xb9
0000            126   _AMX0N          DATA 0xba
0000            127   _AMX0P          DATA 0xbb
0000            128   _ADC0CF         DATA 0xbc
0000            129   _ADC0L          DATA 0xbd
0000            130   _ADC0H          DATA 0xbe
0000            131   _SFRPAGE        DATA 0xbf
0000            132   _SMB0CN         DATA 0xc0
0000            133   _SMB1CN         DATA 0xc0
0000            134   _SMB0CF         DATA 0xc1
0000            135   _SMB1CF         DATA 0xc1
0000            136   _SMB0DAT        DATA 0xc2
0000            137   _SMB1DAT        DATA 0xc2
0000            138   _ADC0GTL        DATA 0xc3
0000            139   _ADC0GTH        DATA 0xc4
0000            140   _ADC0LTL        DATA 0xc5
0000            141   _ADC0LTH        DATA 0xc6
0000            142   _P4             DATA 0xc7
0000            143   _TMR2CN         DATA 0xc8
0000            144   _TMR5CN         DATA 0xc8
0000            145   _REG01CN        DATA 0xc9
0000            146   _TMR2RLL        DATA 0xca
0000            147   _TMR5RLL        DATA 0xca
0000            148   _TMR2RLH        DATA 0xcb
0000            149   _TMR5RLH        DATA 0xcb
0000            150   _TMR2L          DATA 0xcc
0000            151   _TMR5L          DATA 0xcc
0000            152   _TMR2H          DATA 0xcd
0000            153   _TMR5H          DATA 0xcd
0000            154   _SMB0ADM        DATA 0xce
0000            155   _SMB1ADM        DATA 0xce
0000            156   _SMB0ADR        DATA 0xcf
0000            157   _SMB1ADR        DATA 0xcf
0000            158   _PSW            DATA 0xd0
0000            159   _REF0CN         DATA 0xd1
0000            160   _SCON1          DATA 0xd2
0000            161   _SBUF1          DATA 0xd3
0000            162   _P0SKIP         DATA 0xd4
0000            163   _P1SKIP         DATA 0xd5
0000            164   _P2SKIP         DATA 0xd6
0000            165   _USB0XCN        DATA 0xd7
0000            166   _PCA0CN         DATA 0xd8
0000            167   _PCA0MD         DATA 0xd9
0000            168   _PCA0CPM0       DATA 0xda
0000            169   _PCA0CPM1       DATA 0xdb
0000            170   _PCA0CPM2       DATA 0xdc
0000            171   _PCA0CPM3       DATA 0xdd
0000            172   _PCA0CPM4       DATA 0xde
0000            173   _P3SKIP         DATA 0xdf
0000            174   _ACC            DATA 0xe0
0000            175   _XBR0           DATA 0xe1
0000            176   _XBR1           DATA 0xe2
0000            177   _XBR2           DATA 0xe3
0000            178   _IT01CF         DATA 0xe4
0000            179   _CKCON1         DATA 0xe4
0000            180   _SMOD1          DATA 0xe5
0000            181   _EIE1           DATA 0xe6
0000            182   _EIE2           DATA 0xe7
0000            183   _ADC0CN         DATA 0xe8
0000            184   _PCA0CPL1       DATA 0xe9
0000            185   _PCA0CPH1       DATA 0xea
0000            186   _PCA0CPL2       DATA 0xeb
0000            187   _PCA0CPH2       DATA 0xec
0000            188   _PCA0CPL3       DATA 0xed
0000            189   _PCA0CPH3       DATA 0xee
0000            190   _RSTSRC         DATA 0xef
0000            191   _B              DATA 0xf0
0000            192   _P0MDIN         DATA 0xf1
0000            193   _P1MDIN         DATA 0xf2
0000            194   _P2MDIN         DATA 0xf3
0000            195   _P3MDIN         DATA 0xf4
0000            196   _P4MDIN         DATA 0xf5
0000            197   _EIP1           DATA 0xf6
0000            198   _EIP2           DATA 0xf7
0000            199   _SPI0CN         DATA 0xf8
0000            200   _PCA0L          DATA 0xf9
0000            201   _PCA0H          DATA 0xfa
0000            202   _PCA0CPL0       DATA 0xfb
0000            203   _PCA0CPH0       DATA 0xfc
0000            204   _PCA0CPL4       DATA 0xfd
0000            205   _PCA0CPH4       DATA 0xfe
0000            206   _VDM0CN         DATA 0xff
0000            207   _DPTR           DATA 0x8382
0000            208   _TMR2RL         DATA 0xcbca
0000            209   _TMR3RL         DATA 0x9392
0000            210   _TMR4RL         DATA 0x9392
0000            211   _TMR5RL         DATA 0xcbca
0000            212   _TMR2           DATA 0xcdcc
0000            213   _TMR3           DATA 0x9594
0000            214   _TMR4           DATA 0x9594
0000            215   _TMR5           DATA 0xcdcc
0000            216   _SBRL1          DATA 0xb5b4
0000            217   _ADC0           DATA 0xbebd
0000            218   _ADC0GT         DATA 0xc4c3
0000            219   _ADC0LT         DATA 0xc6c5
0000            220   _PCA0           DATA 0xfaf9
0000            221   _PCA0CP1        DATA 0xeae9
0000            222   _PCA0CP2        DATA 0xeceb
0000            223   _PCA0CP3        DATA 0xeeed
0000            224   _PCA0CP0        DATA 0xfcfb
0000            225   _PCA0CP4        DATA 0xfefd
0000            226   ;--------------------------------------------------------
0000            227   ; special function bits
0000            228   ;--------------------------------------------------------
0000            229   _P0_0           BIT 0x80
0000            230   _P0_1           BIT 0x81
0000            231   _P0_2           BIT 0x82
0000            232   _P0_3           BIT 0x83
0000            233   _P0_4           BIT 0x84
0000            234   _P0_5           BIT 0x85
0000            235   _P0_6           BIT 0x86
0000            236   _P0_7           BIT 0x87
0000            237   _TF1            BIT 0x8f
0000            238   _TR1            BIT 0x8e
0000            239   _TF0            BIT 0x8d
0000            240   _TR0            BIT 0x8c
0000            241   _IE1            BIT 0x8b
0000            242   _IT1            BIT 0x8a
0000            243   _IE0            BIT 0x89
0000            244   _IT0            BIT 0x88
0000            245   _P1_0           BIT 0x90
0000            246   _P1_1           BIT 0x91
0000            247   _P1_2           BIT 0x92
0000            248   _P1_3           BIT 0x93
0000            249   _P1_4           BIT 0x94
0000            250   _P1_5           BIT 0x95
0000            251   _P1_6           BIT 0x96
0000            252   _P1_7           BIT 0x97
0000            253   _S0MODE         BIT 0x9f
0000            254   _SCON0_6        BIT 0x9e
0000            255   _MCE0           BIT 0x9d
0000            256   _REN0           BIT 0x9c
0000            257   _TB80           BIT 0x9b
0000            258   _RB80           BIT 0x9a
0000            259   _TI0            BIT 0x99
0000            260   _RI0            BIT 0x98
0000            261   _SCON_6         BIT 0x9e
0000            262   _MCE            BIT 0x9d
0000            263   _REN            BIT 0x9c
0000            264   _TB8            BIT 0x9b
0000            265   _RB8            BIT 0x9a
0000            266   _TI             BIT 0x99
0000            267   _RI             BIT 0x98
0000            268   _P2_0           BIT 0xa0
0000            269   _P2_1           BIT 0xa1
0000            270   _P2_2           BIT 0xa2
0000            271   _P2_3           BIT 0xa3
0000            272   _P2_4           BIT 0xa4
0000            273   _P2_5           BIT 0xa5
0000            274   _P2_6           BIT 0xa6
0000            275   _P2_7           BIT 0xa7
0000            276   _EA             BIT 0xaf
0000            277   _ESPI0          BIT 0xae
0000            278   _ET2            BIT 0xad
0000            279   _ES0            BIT 0xac
0000            280   _ET1            BIT 0xab
0000            281   _EX1            BIT 0xaa
0000            282   _ET0            BIT 0xa9
0000            283   _EX0            BIT 0xa8
0000            284   _P3_0           BIT 0xb0
0000            285   _P3_1           BIT 0xb1
0000            286   _P3_2           BIT 0xb2
0000            287   _P3_3           BIT 0xb3
0000            288   _P3_4           BIT 0xb4
0000            289   _P3_5           BIT 0xb5
0000            290   _P3_6           BIT 0xb6
0000            291   _P3_7           BIT 0xb7
0000            292   _IP_7           BIT 0xbf
0000            293   _PSPI0          BIT 0xbe
0000            294   _PT2            BIT 0xbd
0000            295   _PS0            BIT 0xbc
0000            296   _PT1            BIT 0xbb
0000            297   _PX1            BIT 0xba
0000            298   _PT0            BIT 0xb9
0000            299   _PX0            BIT 0xb8
0000            300   _MASTER0        BIT 0xc7
0000            301   _TXMODE0        BIT 0xc6
0000            302   _STA0           BIT 0xc5
0000            303   _STO0           BIT 0xc4
0000            304   _ACKRQ0         BIT 0xc3
0000            305   _ARBLOST0       BIT 0xc2
0000            306   _ACK0           BIT 0xc1
0000            307   _SI0            BIT 0xc0
0000            308   _MASTER1        BIT 0xc7
0000            309   _TXMODE1        BIT 0xc6
0000            310   _STA1           BIT 0xc5
0000            311   _STO1           BIT 0xc4
0000            312   _ACKRQ1         BIT 0xc3
0000            313   _ARBLOST1       BIT 0xc2
0000            314   _ACK1           BIT 0xc1
0000            315   _SI1            BIT 0xc0
0000            316   _TF2            BIT 0xcf
0000            317   _TF2H           BIT 0xcf
0000            318   _TF2L           BIT 0xce
0000            319   _TF2LEN         BIT 0xcd
0000            320   _TF2CEN         BIT 0xcc
0000            321   _T2SPLIT        BIT 0xcb
0000            322   _TR2            BIT 0xca
0000            323   _T2CSS          BIT 0xc9
0000            324   _T2XCLK         BIT 0xc8
0000            325   _TF5H           BIT 0xcf
0000            326   _TF5L           BIT 0xce
0000            327   _TF5LEN         BIT 0xcd
0000            328   _TMR5CN_4       BIT 0xcc
0000            329   _T5SPLIT        BIT 0xcb
0000            330   _TR5            BIT 0xca
0000            331   _TMR5CN_1       BIT 0xc9
0000            332   _T5XCLK         BIT 0xc8
0000            333   _CY             BIT 0xd7
0000            334   _AC             BIT 0xd6
0000            335   _F0             BIT 0xd5
0000            336   _RS1            BIT 0xd4
0000            337   _RS0            BIT 0xd3
0000            338   _OV             BIT 0xd2
0000            339   _F1             BIT 0xd1
0000            340   _PARITY         BIT 0xd0
0000            341   _CF             BIT 0xdf
0000            342   _CR             BIT 0xde
0000            343   _PCA0CN_5       BIT 0xde
0000            344   _CCF4           BIT 0xdc
0000            345   _CCF3           BIT 0xdb
0000            346   _CCF2           BIT 0xda
0000            347   _CCF1           BIT 0xd9
0000            348   _CCF0           BIT 0xd8
0000            349   _ACC_7          BIT 0xe7
0000            350   _ACC_6          BIT 0xe6
0000            351   _ACC_5          BIT 0xe5
0000            352   _ACC_4          BIT 0xe4
0000            353   _ACC_3          BIT 0xe3
0000            354   _ACC_2          BIT 0xe2
0000            355   _ACC_1          BIT 0xe1
0000            356   _ACC_0          BIT 0xe0
0000            357   _AD0EN          BIT 0xef
0000            358   _AD0TM          BIT 0xee
0000            359   _AD0INT         BIT 0xed
0000            360   _AD0BUSY        BIT 0xec
0000            361   _AD0WINT        BIT 0xeb
0000            362   _AD0CM2         BIT 0xea
0000            363   _AD0CM1         BIT 0xe9
0000            364   _AD0CM0         BIT 0xe8
0000            365   _B_7            BIT 0xf7
0000            366   _B_6            BIT 0xf6
0000            367   _B_5            BIT 0xf5
0000            368   _B_4            BIT 0xf4
0000            369   _B_3            BIT 0xf3
0000            370   _B_2            BIT 0xf2
0000            371   _B_1            BIT 0xf1
0000            372   _B_0            BIT 0xf0
0000            373   _SPIF           BIT 0xff
0000            374   _WCOL           BIT 0xfe
0000            375   _MODF           BIT 0xfd
0000            376   _RXOVRN         BIT 0xfc
0000            377   _NSSMD1         BIT 0xfb
0000            378   _NSSMD0         BIT 0xfa
0000            379   _TXBMT          BIT 0xf9
0000            380   _SPIEN          BIT 0xf8
0000            381   ;--------------------------------------------------------
0000            382   ; overlayable register banks
0000            383   ;--------------------------------------------------------
0000            384            rbank0 segment data overlay
0000            385   ;--------------------------------------------------------
0000            386   ; internal ram data
0000            387   ;--------------------------------------------------------
0000            388            rseg R_DSEG
0000            389   _pwm_count:
0000            390            ds 1
0001            391   _power:
0001            392            ds 1
0002            393   _pwm_BLU0:
0002            394            ds 1
0003            395   _pwm_BLU1:
0003            396            ds 1
0004            397   _pwm_RED0:
0004            398            ds 1
0005            399   _pwm_RED1:
0005            400            ds 1
0006            401   _dirout:
0006            402            ds 1
0007            403   _overflow_count:
0007            404            ds 1
0008            405   _frequency:
0008            406            ds 4
000C            407   _mode:
000C            408            ds 2
000E            409   _FreqBuffer:
000E            410            ds 16
001E            411   _WriteCount:
001E            412            ds 1
001F            413   _ForwardSigCount:
001F            414            ds 1
0020            415   _StopSigCount:
0020            416            ds 1
0021            417   _millisecond:
0021            418            ds 2
0023            419   _MotorControl_IndVolts_1_79:
0023            420            ds 3
0026            421   _MotorControl_sloc0_1_0:
0026            422            ds 3
0029            423   _MotorControl_sloc1_1_0:
0029            424            ds 4
002D            425   _MotorControl_sloc2_1_0:
002D            426            ds 4
0031            427   _MotorControl_sloc3_1_0:
0031            428            ds 4
0035            429   _DebuggingFctn_IndVolts_1_96:
0035            430            ds 3
0038            431   _main_IndVolts_1_99:
0038            432            ds 12
0044            433   ;--------------------------------------------------------
0044            434   ; overlayable items in internal ram 
0044            435   ;--------------------------------------------------------
0000            436            rseg    R_OSEG
0000            437            rseg    R_OSEG
0000            438   _InitPinADC_PARM_2:
0000            439            ds 1
0001            440            rseg    R_OSEG
0001            441   ;--------------------------------------------------------
0001            442   ; indirectly addressable internal ram data
0001            443   ;--------------------------------------------------------
0000            444            rseg R_ISEG
0000            445   ;--------------------------------------------------------
0000            446   ; absolute internal ram data
0000            447   ;--------------------------------------------------------
0000            448            DSEG
0000            449   ;--------------------------------------------------------
0000            450   ; bit data
0000            451   ;--------------------------------------------------------
0000            452            rseg R_BSEG
0000            453   _Timer2_ISR_sloc0_1_0:
0000            454            DBIT    1
0001            455   ;--------------------------------------------------------
0001            456   ; paged external ram data
0001            457   ;--------------------------------------------------------
0000            458            rseg R_PSEG
0000            459   ;--------------------------------------------------------
0000            460   ; external ram data
0000            461   ;--------------------------------------------------------
0000            462            rseg R_XSEG
0000            463   ;--------------------------------------------------------
0000            464   ; absolute external ram data
0000            465   ;--------------------------------------------------------
0000            466            XSEG
0000            467   ;--------------------------------------------------------
0000            468   ; external initialized ram data
0000            469   ;--------------------------------------------------------
0000            470            rseg R_IXSEG
0000            471            rseg R_HOME
0000            472            rseg R_GSINIT
0000            473            rseg R_CSEG
0000            474   ;--------------------------------------------------------
0000            475   ; Reset entry point and interrupt vectors
0000            476   ;--------------------------------------------------------
0000            477            CSEG at 0x0000
0000 020100     478            ljmp    _crt0
002B            479            CSEG at 0x002b
002B 020100     480            ljmp    _Timer2_ISR
002E            481   ;--------------------------------------------------------
002E            482   ; global & static initialisations
002E            483   ;--------------------------------------------------------
0000            484            rseg R_HOME
0000            485            rseg R_GSINIT
0000            486            rseg R_GSINIT
0000            487   ;--------------------------------------------------------
0000            488   ; data variables initialization
0000            489   ;--------------------------------------------------------
0000            490            rseg R_DINIT
0000            491   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:46: volatile unsigned char pwm_count=0;
0000 75B800     492            mov     _pwm_count,#0x00
0003            493   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:47: volatile unsigned char power=30;
0003 75781E     494            mov     _power,#0x1E
0006            495   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:48: volatile unsigned char pwm_BLU0=0;
0006 757000     496            mov     _pwm_BLU0,#0x00
0009            497   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:49: volatile unsigned char pwm_BLU1=0;
0009 753000     498            mov     _pwm_BLU1,#0x00
000C            499   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:50: volatile unsigned char pwm_RED0=0;
000C 75F000     500            mov     _pwm_RED0,#0x00
000F            501   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:51: volatile unsigned char pwm_RED1=0;
000F 75B000     502            mov     _pwm_RED1,#0x00
0012            503   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:52: volatile unsigned char dirout=0;
0012 757000     504            mov     _dirout,#0x00
0015            505   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:53: volatile unsigned char overflow_count=0;
0015 753000     506            mov     _overflow_count,#0x00
0018            507   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:54: volatile float frequency=0;
0018 75F000     508            mov     _frequency,#0x00
001B 75F100     509            mov     (_frequency + 1),#0x00
001E 75F200     510            mov     (_frequency + 2),#0x00
0021 75F300     511            mov     (_frequency + 3),#0x00
0024            512   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:55: unsigned int mode=STOP;
0024 E4         513            clr     a
0025 F5B0       514            mov     _mode,a
0027 F5B1       515            mov     (_mode + 1),a
0029            516   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:56: volatile float FreqBuffer[4]={0,0,0,0};
0029 757000     517            mov     _FreqBuffer,#0x00
002C 757100     518            mov     (_FreqBuffer + 1),#0x00
002F 757200     519            mov     (_FreqBuffer + 2),#0x00
0032 757300     520            mov     (_FreqBuffer + 3),#0x00
0035 757400     521            mov     (_FreqBuffer + 0x0004),#0x00
0038 757500     522            mov     ((_FreqBuffer + 0x0004) + 1),#0x00
003B 757600     523            mov     ((_FreqBuffer + 0x0004) + 2),#0x00
003E 757700     524            mov     ((_FreqBuffer + 0x0004) + 3),#0x00
0041 757800     525            mov     (_FreqBuffer + 0x0008),#0x00
0044 757900     526            mov     ((_FreqBuffer + 0x0008) + 1),#0x00
0047 757A00     527            mov     ((_FreqBuffer + 0x0008) + 2),#0x00
004A 757B00     528            mov     ((_FreqBuffer + 0x0008) + 3),#0x00
004D 757C00     529            mov     (_FreqBuffer + 0x000c),#0x00
0050 757D00     530            mov     ((_FreqBuffer + 0x000c) + 1),#0x00
0053 757E00     531            mov     ((_FreqBuffer + 0x000c) + 2),#0x00
0056 757F00     532            mov     ((_FreqBuffer + 0x000c) + 3),#0x00
0059            533   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:57: unsigned char WriteCount = 0;
0059 753000     534            mov     _WriteCount,#0x00
005C            535   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:58: unsigned char ForwardSigCount=0;
005C 75F000     536            mov     _ForwardSigCount,#0x00
005F            537   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:59: unsigned char StopSigCount=0;
005F 75A000     538            mov     _StopSigCount,#0x00
0062            539   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:60: unsigned int millisecond=0;
0062 E4         540            clr     a
0063 F560       541            mov     _millisecond,a
0065 F561       542            mov     (_millisecond + 1),a
0067            543            ; The linker places a 'ret' at the end of segment R_DINIT.
0067            544   ;--------------------------------------------------------
0067            545   ; code
0067            546   ;--------------------------------------------------------
0000            547            rseg R_CSEG
0000            548   ;------------------------------------------------------------
0000            549   ;Allocation info for local variables in function '_c51_external_startup'
0000            550   ;------------------------------------------------------------
0000            551   ;------------------------------------------------------------
0000            552   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:66: char _c51_external_startup (void)
0000            553   ;        -----------------------------------------
0000            554   ;         function _c51_external_startup
0000            555   ;        -----------------------------------------
0000            556   __c51_external_startup:
0000            557            using   0
0000            558   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:68: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     559            anl     _PCA0MD,#0xBF
0003            560   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:69: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     561            mov     _VDM0CN,#0x80
0006            562   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:70: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     563            mov     _RSTSRC,#0x06
0009            564   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:78: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     565            orl     _CLKSEL,#0x03
000C            566   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:82: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     567            orl     _OSCICN,#0x03
000F            568   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:85: SCON0 = 0x10;
000F 759810     569            mov     _SCON0,#0x10
0012            570   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:87: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     571            mov     _TH1,#0x30
0015            572   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:88: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     573            anl     _CKCON,#0xF4
0018            574   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:89: CKCON |=  0x08;
0018 438E08     575            orl     _CKCON,#0x08
001B            576   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:102: TL1 = TH1;      // Init Timer1
001B 858D8B     577            mov     _TL1,_TH1
001E            578   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:103: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     579            anl     _TMOD,#0x0F
0021            580   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:104: TMOD |=  0x20;
0021 438920     581            orl     _TMOD,#0x20
0024            582   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:105: TR1 = 1; // START Timer1
0024 D28E       583            setb    _TR1
0026            584   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:106: TI = 1;  // Indicate TX0 ready
0026 D299       585            setb    _TI
0028            586   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:109: P2MDOUT|=0b_0000_0011;
0028 43A603     587            orl     _P2MDOUT,#0x03
002B            588   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:110: P0MDOUT |= 0x01;  // set P0.0 and P0.4 as push-pull outputs
002B 43A401     589            orl     _P0MDOUT,#0x01
002E            590   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:111: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)
002E 75E101     591            mov     _XBR0,#0x01
0031            592   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:112: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     593            mov     _XBR1,#0x40
0034            594   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:114: return 0;
0034 758200     595            mov     dpl,#0x00
0037 22         596            ret
0038            597   ;------------------------------------------------------------
0038            598   ;Allocation info for local variables in function 'Timer3us'
0038            599   ;------------------------------------------------------------
0038            600   ;us                        Allocated to registers r2 
0038            601   ;i                         Allocated to registers r3 
0038            602   ;------------------------------------------------------------
0038            603   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:121: void Timer3us(unsigned char us)
0038            604   ;        -----------------------------------------
0038            605   ;         function Timer3us
0038            606   ;        -----------------------------------------
0038            607   _Timer3us:
0038 AA82       608            mov     r2,dpl
003A            609   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:126: CKCON|=0b_0100_0000;
003A 438E40     610            orl     _CKCON,#0x40
003D            611   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:128: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
003D 7592D0     612            mov     _TMR3RL,#0xD0
0040 7593FF     613            mov     (_TMR3RL >> 8),#0xFF
0043            614   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:129: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0043 859294     615            mov     _TMR3,_TMR3RL
0046 859395     616            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0049            617   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:131: TMR3CN = 0x04;                 // Sart Timer3 and clear overflow flag
0049 759104     618            mov     _TMR3CN,#0x04
004C            619   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:132: for (i = 0; i < us; i++)       // Count <us> overflows
004C 7B00       620            mov     r3,#0x00
004E            621   L003004?:
004E C3         622            clr     c
004F EB         623            mov     a,r3
0050 9A         624            subb    a,r2
0051 5001       625            jnc     L003007?
0053            626   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:134: while (!(TMR3CN & 0x80));  // Wait for overflow
0053            627   L003001?:
0053 E591       628            mov     a,_TMR3CN
0055 30E700     629            jnb     acc.7,L003001?
0058            630   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:135: TMR3CN &= ~(0x80);         // Clear overflow indicator
0058 53917F     631            anl     _TMR3CN,#0x7F
005B            632   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:132: for (i = 0; i < us; i++)       // Count <us> overflows
005B 0B         633            inc     r3
005C 8001       634            sjmp    L003004?
005E            635   L003007?:
005E            636   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:137: TMR3CN = 0 ;                   // Stop Timer3 and clear overflow flag
005E 759100     637            mov     _TMR3CN,#0x00
0061 22         638            ret
0062            639   ;------------------------------------------------------------
0062            640   ;Allocation info for local variables in function 'waitms'
0062            641   ;------------------------------------------------------------
0062            642   ;ms                        Allocated to registers r2 r3 
0062            643   ;j                         Allocated to registers r2 r3 
0062            644   ;------------------------------------------------------------
0062            645   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:144: void waitms (unsigned int ms)
0062            646   ;        -----------------------------------------
0062            647   ;         function waitms
0062            648   ;        -----------------------------------------
0062            649   _waitms:
0062 AA82       650            mov     r2,dpl
0064 AB83       651            mov     r3,dph
0066            652   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:147: for(j=ms; j!=0; j--)
0066            653   L004001?:
0066 BA0000     654            cjne    r2,#0x00,L004010?
0069 BB0000     655            cjne    r3,#0x00,L004010?
006C 22         656            ret
006D            657   L004010?:
006D            658   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:149: Timer3us(249);
006D 7582F9     659            mov     dpl,#0xF9
0070 C002       660            push    ar2
0072 C003       661            push    ar3
0074 120100     662            lcall   _Timer3us
0077            663   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:150: Timer3us(249);
0077 7582F9     664            mov     dpl,#0xF9
007A 120100     665            lcall   _Timer3us
007D            666   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:151: Timer3us(249);
007D 7582F9     667            mov     dpl,#0xF9
0080 120100     668            lcall   _Timer3us
0083            669   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:152: Timer3us(250);
0083 7582FA     670            mov     dpl,#0xFA
0086 120100     671            lcall   _Timer3us
0089 D003       672            pop     ar3
008B D002       673            pop     ar2
008D            674   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:147: for(j=ms; j!=0; j--)
008D 1A         675            dec     r2
008E BAFF40     676            cjne    r2,#0xff,L004011?
0091 1B         677            dec     r3
0092            678   L004011?:
0092 8001       679            sjmp    L004001?
0094            680   ;------------------------------------------------------------
0094            681   ;Allocation info for local variables in function 'TIMER0_Init'
0094            682   ;------------------------------------------------------------
0094            683   ;------------------------------------------------------------
0094            684   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:158: void TIMER0_Init(void)
0094            685   ;        -----------------------------------------
0094            686   ;         function TIMER0_Init
0094            687   ;        -----------------------------------------
0094            688   _TIMER0_Init:
0094            689   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:160: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
0094 5389F0     690            anl     _TMOD,#0xF0
0097            691   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:161: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
0097 438901     692            orl     _TMOD,#0x01
009A            693   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:162: TR0=0; // Stop Timer/Counter 0
009A C28C       694            clr     _TR0
009C 22         695            ret
009D            696   ;------------------------------------------------------------
009D            697   ;Allocation info for local variables in function 'TIMER2_Init'
009D            698   ;------------------------------------------------------------
009D            699   ;------------------------------------------------------------
009D            700   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:168: void TIMER2_Init(void)
009D            701   ;        -----------------------------------------
009D            702   ;         function TIMER2_Init
009D            703   ;        -----------------------------------------
009D            704   _TIMER2_Init:
009D            705   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:170: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
009D 75C800     706            mov     _TMR2CN,#0x00
00A0            707   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:171: CKCON|=0b_0001_0000;
00A0 438E10     708            orl     _CKCON,#0x10
00A3            709   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:172: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
00A3 75CA78     710            mov     _TMR2RL,#0x78
00A6 75CBEC     711            mov     (_TMR2RL >> 8),#0xEC
00A9            712   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:173: TMR2=0xffff;   // Set to reload immediately
00A9 75CCFF     713            mov     _TMR2,#0xFF
00AC 75CDFF     714            mov     (_TMR2 >> 8),#0xFF
00AF            715   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:174: ET2=1;         // Enable Timer2 interrupts
00AF D2AD       716            setb    _ET2
00B1            717   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:175: TR2=1;         // Start Timer2
00B1 D2CA       718            setb    _TR2
00B3 22         719            ret
00B4            720   ;------------------------------------------------------------
00B4            721   ;Allocation info for local variables in function 'InitADC'
00B4            722   ;------------------------------------------------------------
00B4            723   ;------------------------------------------------------------
00B4            724   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:181: void InitADC (void)
00B4            725   ;        -----------------------------------------
00B4            726   ;         function InitADC
00B4            727   ;        -----------------------------------------
00B4            728   _InitADC:
00B4            729   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:184: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
00B4 75BCF8     730            mov     _ADC0CF,#0xF8
00B7            731   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:185: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
00B7 75E880     732            mov     _ADC0CN,#0x80
00BA            733   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:186: REF0CN = 0b_0000_1000; //Select VDD as the voltage reference for the converter
00BA 75D108     734            mov     _REF0CN,#0x08
00BD 22         735            ret
00BE            736   ;------------------------------------------------------------
00BE            737   ;Allocation info for local variables in function 'InitPinADC'
00BE            738   ;------------------------------------------------------------
00BE            739   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00BE            740   ;portno                    Allocated to registers r2 
00BE            741   ;mask                      Allocated to registers r3 
00BE            742   ;------------------------------------------------------------
00BE            743   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:193: void InitPinADC (unsigned char portno, unsigned char pinno)
00BE            744   ;        -----------------------------------------
00BE            745   ;         function InitPinADC
00BE            746   ;        -----------------------------------------
00BE            747   _InitPinADC:
00BE AA82       748            mov     r2,dpl
00C0            749   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:197: mask=1<<pinno;
00C0 8550F0     750            mov     b,_InitPinADC_PARM_2
00C3 05F0       751            inc     b
00C5 7401       752            mov     a,#0x01
00C7 8001       753            sjmp    L008012?
00C9            754   L008010?:
00C9 25E0       755            add     a,acc
00CB            756   L008012?:
00CB D5F000     757            djnz    b,L008010?
00CE FB         758            mov     r3,a
00CF            759   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:199: switch (portno)
00CF EA         760            mov     a,r2
00D0 24FC       761            add     a,#0xff - 0x03
00D2 4001       762            jc      L008007?
00D4 EA         763            mov     a,r2
00D5 2A         764            add     a,r2
00D6 2A         765            add     a,r2
00D7 909F80     766            mov     dptr,#L008014?
00DA 73         767            jmp     @a+dptr
00DB            768   L008014?:
00DB 020100     769            ljmp    L008001?
00DE 020100     770            ljmp    L008002?
00E1 020100     771            ljmp    L008003?
00E4 020100     772            ljmp    L008004?
00E7            773   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:201: case 0:
00E7            774   L008001?:
00E7            775   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:202: P0MDIN &= (~mask); // Set pin as analog input
00E7 EB         776            mov     a,r3
00E8 F4         777            cpl     a
00E9 52F1       778            anl     _P0MDIN,a
00EB            779   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:203: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00EB EB         780            mov     a,r3
00EC 42D4       781            orl     _P0SKIP,a
00EE            782   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:204: break;
00EE            783   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:205: case 1:
00EE 22         784            ret
00EF            785   L008002?:
00EF            786   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:206: P1MDIN &= (~mask); // Set pin as analog input
00EF EB         787            mov     a,r3
00F0 F4         788            cpl     a
00F1 52F2       789            anl     _P1MDIN,a
00F3            790   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:207: P1SKIP |= mask; // Skip Crossbar decoding for this pin
00F3 EB         791            mov     a,r3
00F4 42D5       792            orl     _P1SKIP,a
00F6            793   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:208: break;
00F6            794   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:209: case 2:
00F6 22         795            ret
00F7            796   L008003?:
00F7            797   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:210: P2MDIN &= (~mask); // Set pin as analog input
00F7 EB         798            mov     a,r3
00F8 F4         799            cpl     a
00F9 52F3       800            anl     _P2MDIN,a
00FB            801   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:211: P2SKIP |= mask; // Skip Crossbar decoding for this pin
00FB EB         802            mov     a,r3
00FC 42D6       803            orl     _P2SKIP,a
00FE            804   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:212: break;
00FE            805   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:213: case 3:
00FE 22         806            ret
00FF            807   L008004?:
00FF            808   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:214: P3MDIN &= (~mask); // Set pin as analog input
00FF EB         809            mov     a,r3
0100 F4         810            cpl     a
0101 FA         811            mov     r2,a
0102 52F4       812            anl     _P3MDIN,a
0104            813   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:215: P3SKIP |= mask; // Skip Crossbar decoding for this pin
0104 EB         814            mov     a,r3
0105 42DF       815            orl     _P3SKIP,a
0107            816   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:219: }
0107            817   L008007?:
0107 22         818            ret
0108            819   ;------------------------------------------------------------
0108            820   ;Allocation info for local variables in function 'ADC_at_Pin'
0108            821   ;------------------------------------------------------------
0108            822   ;pin                       Allocated to registers 
0108            823   ;------------------------------------------------------------
0108            824   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:226: unsigned int ADC_at_Pin(unsigned char pin)
0108            825   ;        -----------------------------------------
0108            826   ;         function ADC_at_Pin
0108            827   ;        -----------------------------------------
0108            828   _ADC_at_Pin:
0108 8582BB     829            mov     _AMX0P,dpl
010B            830   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:229: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
010B 75BA1F     831            mov     _AMX0N,#0x1F
010E            832   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:231: AD0BUSY=1;
010E D2EC       833            setb    _AD0BUSY
0110            834   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:232: while (AD0BUSY); // Wait for dummy conversion to finish
0110            835   L009001?:
0110 20ECC0     836            jb      _AD0BUSY,L009001?
0113            837   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:234: AD0BUSY = 1;
0113 D2EC       838            setb    _AD0BUSY
0115            839   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:235: while (AD0BUSY); // Wait for conversion to complete
0115            840   L009004?:
0115 20EC00     841            jb      _AD0BUSY,L009004?
0118            842   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:236: return (ADC0L+(ADC0H*0x100));
0118 AABD       843            mov     r2,_ADC0L
011A 7B00       844            mov     r3,#0x00
011C ADBE       845            mov     r5,_ADC0H
011E 7C00       846            mov     r4,#0x00
0120 EC         847            mov     a,r4
0121 2A         848            add     a,r2
0122 F582       849            mov     dpl,a
0124 ED         850            mov     a,r5
0125 3B         851            addc    a,r3
0126 F583       852            mov     dph,a
0128 22         853            ret
0129            854   ;------------------------------------------------------------
0129            855   ;Allocation info for local variables in function 'Volts_at_Pin'
0129            856   ;------------------------------------------------------------
0129            857   ;pin                       Allocated to registers r2 
0129            858   ;------------------------------------------------------------
0129            859   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:243: float Volts_at_Pin(unsigned char pin)
0129            860   ;        -----------------------------------------
0129            861   ;         function Volts_at_Pin
0129            862   ;        -----------------------------------------
0129            863   _Volts_at_Pin:
0129            864   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:245: return ((ADC_at_Pin(pin)*VDD_onboard)/1024.0);
0129 120100     865            lcall   _ADC_at_Pin
012C 120100     866            lcall   ___uint2fs
012F AA82       867            mov     r2,dpl
0131 AB83       868            mov     r3,dph
0133 ACF0       869            mov     r4,b
0135 FD         870            mov     r5,a
0136 C002       871            push    ar2
0138 C003       872            push    ar3
013A C004       873            push    ar4
013C C005       874            push    ar5
013E 90DD2F     875            mov     dptr,#0xDD2F
0141 75F054     876            mov     b,#0x54
0144 7440       877            mov     a,#0x40
0146 120100     878            lcall   ___fsmul
0149 AA82       879            mov     r2,dpl
014B AB83       880            mov     r3,dph
014D ACF0       881            mov     r4,b
014F FD         882            mov     r5,a
0150 E581       883            mov     a,sp
0152 24FC       884            add     a,#0xfc
0154 F581       885            mov     sp,a
0156 E4         886            clr     a
0157 C0E0       887            push    acc
0159 C0E0       888            push    acc
015B 7480       889            mov     a,#0x80
015D C0E0       890            push    acc
015F 7444       891            mov     a,#0x44
0161 C0E0       892            push    acc
0163 8A82       893            mov     dpl,r2
0165 8B83       894            mov     dph,r3
0167 8CF0       895            mov     b,r4
0169 ED         896            mov     a,r5
016A 120100     897            lcall   ___fsdiv
016D AA82       898            mov     r2,dpl
016F AB83       899            mov     r3,dph
0171 ACF0       900            mov     r4,b
0173 FD         901            mov     r5,a
0174 E581       902            mov     a,sp
0176 24FC       903            add     a,#0xfc
0178 F581       904            mov     sp,a
017A 8A82       905            mov     dpl,r2
017C 8B83       906            mov     dph,r3
017E 8CF0       907            mov     b,r4
0180 ED         908            mov     a,r5
0181 22         909            ret
0182            910   ;------------------------------------------------------------
0182            911   ;Allocation info for local variables in function 'Timer2_ISR'
0182            912   ;------------------------------------------------------------
0182            913   ;------------------------------------------------------------
0182            914   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:252: void Timer2_ISR (void) interrupt 5
0182            915   ;        -----------------------------------------
0182            916   ;         function Timer2_ISR
0182            917   ;        -----------------------------------------
0182            918   _Timer2_ISR:
0182 C0E0       919            push    acc
0184 C0D0       920            push    psw
0186 75D000     921            mov     psw,#0x00
0189            922   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:254: TF2H = 0; // Clear Timer2 interrupt flag
0189 C2CF       923            clr     _TF2H
018B            924   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:256: pwm_count++;
018B 05B8       925            inc     _pwm_count
018D            926   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:257: if(pwm_count>100) pwm_count=0;
018D E5B8       927            mov     a,_pwm_count
018F 249B       928            add     a,#0xff - 0x64
0191 5001       929            jnc     L011002?
0193 75B800     930            mov     _pwm_count,#0x00
0196            931   L011002?:
0196            932   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:259: BLU0=pwm_count>pwm_BLU0?0:1;
0196 C3         933            clr     c
0197 E570       934            mov     a,_pwm_BLU0
0199 95B8       935            subb    a,_pwm_count
019B 92C0       936            mov  _Timer2_ISR_sloc0_1_0,c
019D B3         937            cpl     c
019E 92A5       938            mov     _P2_5,c
01A0            939   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:260: BLU1=pwm_count>pwm_BLU1?0:1;
01A0 C3         940            clr     c
01A1 E530       941            mov     a,_pwm_BLU1
01A3 95B8       942            subb    a,_pwm_count
01A5 92C0       943            mov  _Timer2_ISR_sloc0_1_0,c
01A7 B3         944            cpl     c
01A8 92A2       945            mov     _P2_2,c
01AA            946   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:262: RED0=pwm_count>pwm_RED0?0:1;
01AA C3         947            clr     c
01AB E5F0       948            mov     a,_pwm_RED0
01AD 95B8       949            subb    a,_pwm_count
01AF 92C0       950            mov  _Timer2_ISR_sloc0_1_0,c
01B1 B3         951            cpl     c
01B2 92A3       952            mov     _P2_3,c
01B4            953   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:263: RED1=pwm_count>pwm_RED1?0:1;
01B4 C3         954            clr     c
01B5 E5B0       955            mov     a,_pwm_RED1
01B7 95B8       956            subb    a,_pwm_count
01B9 92C0       957            mov  _Timer2_ISR_sloc0_1_0,c
01BB B3         958            cpl     c
01BC 92A4       959            mov     _P2_4,c
01BE D0D0       960            pop     psw
01C0 D0E0       961            pop     acc
01C2 32         962            reti
01C3            963   ;        eliminated unneeded push/pop dpl
01C3            964   ;        eliminated unneeded push/pop dph
01C3            965   ;        eliminated unneeded push/pop b
01C3            966   ;------------------------------------------------------------
01C3            967   ;Allocation info for local variables in function 'ReadFrequency'
01C3            968   ;------------------------------------------------------------
01C3            969   ;------------------------------------------------------------
01C3            970   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:270: void ReadFrequency (void)
01C3            971   ;        -----------------------------------------
01C3            972   ;         function ReadFrequency
01C3            973   ;        -----------------------------------------
01C3            974   _ReadFrequency:
01C3            975   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:274: TL0=0;
01C3 758A00     976            mov     _TL0,#0x00
01C6            977   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:275: TH0=0;
01C6 758C00     978            mov     _TH0,#0x00
01C9            979   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:276: TF0=0;
01C9 C28D       980            clr     _TF0
01CB            981   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:277: overflow_count=0;
01CB 753000     982            mov     _overflow_count,#0x00
01CE            983   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:279: while(FRQIN!=0); // Wait for the signal to be zero
01CE            984   L012001?:
01CE 2096C0     985            jb      _P1_6,L012001?
01D1            986   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:280: while(FRQIN!=1); // Wait for the signal to be one
01D1            987   L012004?:
01D1 309600     988            jnb     _P1_6,L012004?
01D4            989   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:281: TR0=1; // Start the timer
01D4 D28C       990            setb    _TR0
01D6            991   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:282: while(FRQIN!=0) // Wait for the signal to be zero
01D6            992   L012009?:
01D6 309680     993            jnb     _P1_6,L012014?
01D9            994   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:284: if(TF0==1) // Did the 16-bit timer overflow?
01D9            995   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:286: TF0=0;
01D9 108DC0     996            jbc     _TF0,L012031?
01DC 8001       997            sjmp    L012009?
01DE            998   L012031?:
01DE            999   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:287: overflow_count++;
01DE 0530      1000            inc     _overflow_count
01E0           1001   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:290: while(FRQIN!=1) // Wait for the signal to be one
01E0 8001      1002            sjmp    L012009?
01E2           1003   L012014?:
01E2 209600    1004            jb      _P1_6,L012016?
01E5           1005   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:292: if(TF0==1) // Did the 16-bit timer overflow?
01E5           1006   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:294: TF0=0;
01E5 108D40    1007            jbc     _TF0,L012033?
01E8 8001      1008            sjmp    L012014?
01EA           1009   L012033?:
01EA           1010   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:295: overflow_count++;
01EA 0530      1011            inc     _overflow_count
01EC 8001      1012            sjmp    L012014?
01EE           1013   L012016?:
01EE           1014   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:299: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period. Then convert it to frequency
01EE C28C      1015            clr     _TR0
01F0           1016   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:301: frequency=1.0/((overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK)); // Compute frequency
01F0 853082    1017            mov     dpl,_overflow_count
01F3 120100    1018            lcall   ___uchar2fs
01F6 AA82      1019            mov     r2,dpl
01F8 AB83      1020            mov     r3,dph
01FA ACF0      1021            mov     r4,b
01FC FD        1022            mov     r5,a
01FD C002      1023            push    ar2
01FF C003      1024            push    ar3
0201 C004      1025            push    ar4
0203 C005      1026            push    ar5
0205 900000    1027            mov     dptr,#0x0000
0208 75F080    1028            mov     b,#0x80
020B 7447      1029            mov     a,#0x47
020D 120100    1030            lcall   ___fsmul
0210 AA82      1031            mov     r2,dpl
0212 AB83      1032            mov     r3,dph
0214 ACF0      1033            mov     r4,b
0216 FD        1034            mov     r5,a
0217 E581      1035            mov     a,sp
0219 24FC      1036            add     a,#0xfc
021B F581      1037            mov     sp,a
021D 858C82    1038            mov     dpl,_TH0
0220 C002      1039            push    ar2
0222 C003      1040            push    ar3
0224 C004      1041            push    ar4
0226 C005      1042            push    ar5
0228 120100    1043            lcall   ___uchar2fs
022B AE82      1044            mov     r6,dpl
022D AF83      1045            mov     r7,dph
022F A8F0      1046            mov     r0,b
0231 F9        1047            mov     r1,a
0232 C006      1048            push    ar6
0234 C007      1049            push    ar7
0236 C000      1050            push    ar0
0238 C001      1051            push    ar1
023A 900000    1052            mov     dptr,#0x0000
023D 75F080    1053            mov     b,#0x80
0240 7443      1054            mov     a,#0x43
0242 120100    1055            lcall   ___fsmul
0245 AE82      1056            mov     r6,dpl
0247 AF83      1057            mov     r7,dph
0249 A8F0      1058            mov     r0,b
024B F9        1059            mov     r1,a
024C E581      1060            mov     a,sp
024E 24FC      1061            add     a,#0xfc
0250 F581      1062            mov     sp,a
0252 D005      1063            pop     ar5
0254 D004      1064            pop     ar4
0256 D003      1065            pop     ar3
0258 D002      1066            pop     ar2
025A C006      1067            push    ar6
025C C007      1068            push    ar7
025E C000      1069            push    ar0
0260 C001      1070            push    ar1
0262 8A82      1071            mov     dpl,r2
0264 8B83      1072            mov     dph,r3
0266 8CF0      1073            mov     b,r4
0268 ED        1074            mov     a,r5
0269 120100    1075            lcall   ___fsadd
026C AA82      1076            mov     r2,dpl
026E AB83      1077            mov     r3,dph
0270 ACF0      1078            mov     r4,b
0272 FD        1079            mov     r5,a
0273 E581      1080            mov     a,sp
0275 24FC      1081            add     a,#0xfc
0277 F581      1082            mov     sp,a
0279 AE8A      1083            mov     r6,_TL0
027B 7F00      1084            mov     r7,#0x00
027D 8E82      1085            mov     dpl,r6
027F 8F83      1086            mov     dph,r7
0281 C002      1087            push    ar2
0283 C003      1088            push    ar3
0285 C004      1089            push    ar4
0287 C005      1090            push    ar5
0289 120100    1091            lcall   ___sint2fs
028C AE82      1092            mov     r6,dpl
028E AF83      1093            mov     r7,dph
0290 A8F0      1094            mov     r0,b
0292 F9        1095            mov     r1,a
0293 D005      1096            pop     ar5
0295 D004      1097            pop     ar4
0297 D003      1098            pop     ar3
0299 D002      1099            pop     ar2
029B C006      1100            push    ar6
029D C007      1101            push    ar7
029F C000      1102            push    ar0
02A1 C001      1103            push    ar1
02A3 8A82      1104            mov     dpl,r2
02A5 8B83      1105            mov     dph,r3
02A7 8CF0      1106            mov     b,r4
02A9 ED        1107            mov     a,r5
02AA 120100    1108            lcall   ___fsadd
02AD AA82      1109            mov     r2,dpl
02AF AB83      1110            mov     r3,dph
02B1 ACF0      1111            mov     r4,b
02B3 FD        1112            mov     r5,a
02B4 E581      1113            mov     a,sp
02B6 24FC      1114            add     a,#0xfc
02B8 F581      1115            mov     sp,a
02BA C002      1116            push    ar2
02BC C003      1117            push    ar3
02BE C004      1118            push    ar4
02C0 C005      1119            push    ar5
02C2 9037BD    1120            mov     dptr,#0x37BD
02C5 75F086    1121            mov     b,#0x86
02C8 7434      1122            mov     a,#0x34
02CA 120100    1123            lcall   ___fsmul
02CD AA82      1124            mov     r2,dpl
02CF AB83      1125            mov     r3,dph
02D1 ACF0      1126            mov     r4,b
02D3 FD        1127            mov     r5,a
02D4 E581      1128            mov     a,sp
02D6 24FC      1129            add     a,#0xfc
02D8 F581      1130            mov     sp,a
02DA C002      1131            push    ar2
02DC C003      1132            push    ar3
02DE C004      1133            push    ar4
02E0 C005      1134            push    ar5
02E2 900000    1135            mov     dptr,#0x0000
02E5 75F080    1136            mov     b,#0x80
02E8 743F      1137            mov     a,#0x3F
02EA 120100    1138            lcall   ___fsdiv
02ED 8582F0    1139            mov     _frequency,dpl
02F0 8583F1    1140            mov     (_frequency + 1),dph
02F3 85F0F2    1141            mov     (_frequency + 2),b
02F6 F5F3      1142            mov     (_frequency + 3),a
02F8 E581      1143            mov     a,sp
02FA 24FC      1144            add     a,#0xfc
02FC F581      1145            mov     sp,a
02FE 22        1146            ret
02FF           1147   ;------------------------------------------------------------
02FF           1148   ;Allocation info for local variables in function 'DetermineMode'
02FF           1149   ;------------------------------------------------------------
02FF           1150   ;ReadCount                 Allocated to registers r2 
02FF           1151   ;------------------------------------------------------------
02FF           1152   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:307: void DetermineMode (void) {
02FF           1153   ;        -----------------------------------------
02FF           1154   ;         function DetermineMode
02FF           1155   ;        -----------------------------------------
02FF           1156   _DetermineMode:
02FF           1157   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:309: ReadFrequency();
02FF 120100    1158            lcall   _ReadFrequency
0302           1159   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:313: if (millisecond%800==0){
0302 750020    1160            mov     __moduint_PARM_2,#0x20
0305 750103    1161            mov     (__moduint_PARM_2 + 1),#0x03
0308 856082    1162            mov     dpl,_millisecond
030B 856183    1163            mov     dph,(_millisecond + 1)
030E 120100    1164            lcall   __moduint
0311 E582      1165            mov     a,dpl
0313 8583F0    1166            mov     b,dph
0316 45F0      1167            orl     a,b
0318 6001      1168            jz      L013032?
031A 22        1169            ret
031B           1170   L013032?:
031B           1171   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:315: FreqBuffer[WriteCount]=frequency;
031B E530      1172            mov     a,_WriteCount
031D 2530      1173            add     a,_WriteCount
031F 25E0      1174            add     a,acc
0321 FA        1175            mov     r2,a
0322 2470      1176            add     a,#_FreqBuffer
0324 F8        1177            mov     r0,a
0325 A6F0      1178            mov     @r0,_frequency
0327 08        1179            inc     r0
0328 A6F1      1180            mov     @r0,(_frequency + 1)
032A 08        1181            inc     r0
032B A6F2      1182            mov     @r0,(_frequency + 2)
032D 08        1183            inc     r0
032E A6F3      1184            mov     @r0,(_frequency + 3)
0330           1185   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:316: WriteCount++;
0330 0530      1186            inc     _WriteCount
0332           1187   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:317: if (WriteCount==4)
0332 7404      1188            mov     a,#0x04
0334 B53010    1189            cjne    a,_WriteCount,L013028?
0337           1190   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:318: WriteCount=0;
0337 753000    1191            mov     _WriteCount,#0x00
033A           1192   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:322: for (ReadCount=0; ReadCount<4; ReadCount++){
033A           1193   L013028?:
033A 7A00      1194            mov     r2,#0x00
033C           1195   L013015?:
033C BA0490    1196            cjne    r2,#0x04,L013035?
033F           1197   L013035?:
033F 4001      1198            jc      L013036?
0341 020100    1199            ljmp    L013018?
0344           1200   L013036?:
0344           1201   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:323: if (FreqBuffer[ReadCount]>0.99*FRQFORWARD && FreqBuffer[ReadCount]<1.01*FRQFORWARD){
0344 EA        1202            mov     a,r2
0345 2A        1203            add     a,r2
0346 25E0      1204            add     a,acc
0348 FB        1205            mov     r3,a
0349 2470      1206            add     a,#_FreqBuffer
034B F8        1207            mov     r0,a
034C 8604      1208            mov     ar4,@r0
034E 08        1209            inc     r0
034F 8605      1210            mov     ar5,@r0
0351 08        1211            inc     r0
0352 8606      1212            mov     ar6,@r0
0354 08        1213            inc     r0
0355 8607      1214            mov     ar7,@r0
0357 18        1215            dec     r0
0358 18        1216            dec     r0
0359 18        1217            dec     r0
035A C002      1218            push    ar2
035C C003      1219            push    ar3
035E E4        1220            clr     a
035F C0E0      1221            push    acc
0361 7453      1222            mov     a,#0x53
0363 C0E0      1223            push    acc
0365 7482      1224            mov     a,#0x82
0367 C0E0      1225            push    acc
0369 7446      1226            mov     a,#0x46
036B C0E0      1227            push    acc
036D 8C82      1228            mov     dpl,r4
036F 8D83      1229            mov     dph,r5
0371 8EF0      1230            mov     b,r6
0373 EF        1231            mov     a,r7
0374 120100    1232            lcall   ___fsgt
0377 AC82      1233            mov     r4,dpl
0379 E581      1234            mov     a,sp
037B 24FC      1235            add     a,#0xfc
037D F581      1236            mov     sp,a
037F D003      1237            pop     ar3
0381 D002      1238            pop     ar2
0383 EC        1239            mov     a,r4
0384 6001      1240            jz      L013004?
0386 EB        1241            mov     a,r3
0387 2470      1242            add     a,#_FreqBuffer
0389 F8        1243            mov     r0,a
038A 8603      1244            mov     ar3,@r0
038C 08        1245            inc     r0
038D 8604      1246            mov     ar4,@r0
038F 08        1247            inc     r0
0390 8605      1248            mov     ar5,@r0
0392 08        1249            inc     r0
0393 8606      1250            mov     ar6,@r0
0395 18        1251            dec     r0
0396 18        1252            dec     r0
0397 18        1253            dec     r0
0398 C002      1254            push    ar2
039A E4        1255            clr     a
039B C0E0      1256            push    acc
039D 74F5      1257            mov     a,#0xF5
039F C0E0      1258            push    acc
03A1 7484      1259            mov     a,#0x84
03A3 C0E0      1260            push    acc
03A5 7446      1261            mov     a,#0x46
03A7 C0E0      1262            push    acc
03A9 8B82      1263            mov     dpl,r3
03AB 8C83      1264            mov     dph,r4
03AD 8DF0      1265            mov     b,r5
03AF EE        1266            mov     a,r6
03B0 120100    1267            lcall   ___fslt
03B3 AB82      1268            mov     r3,dpl
03B5 E581      1269            mov     a,sp
03B7 24FC      1270            add     a,#0xfc
03B9 F581      1271            mov     sp,a
03BB D002      1272            pop     ar2
03BD EB        1273            mov     a,r3
03BE 6001      1274            jz      L013004?
03C0           1275   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:324: ForwardSigCount++;
03C0 05F0      1276            inc     _ForwardSigCount
03C2           1277   L013004?:
03C2           1278   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:326: if (FreqBuffer[ReadCount]>0.99*FRQSTOP && FreqBuffer[ReadCount]<1.01*FRQSTOP){
03C2 EA        1279            mov     a,r2
03C3 2A        1280            add     a,r2
03C4 25E0      1281            add     a,acc
03C6 FB        1282            mov     r3,a
03C7 2470      1283            add     a,#_FreqBuffer
03C9 F8        1284            mov     r0,a
03CA 8604      1285            mov     ar4,@r0
03CC 08        1286            inc     r0
03CD 8605      1287            mov     ar5,@r0
03CF 08        1288            inc     r0
03D0 8606      1289            mov     ar6,@r0
03D2 08        1290            inc     r0
03D3 8607      1291            mov     ar7,@r0
03D5 18        1292            dec     r0
03D6 18        1293            dec     r0
03D7 18        1294            dec     r0
03D8 C002      1295            push    ar2
03DA C003      1296            push    ar3
03DC 7485      1297            mov     a,#0x85
03DE C0E0      1298            push    acc
03E0 749A      1299            mov     a,#0x9A
03E2 C0E0      1300            push    acc
03E4 7468      1301            mov     a,#0x68
03E6 C0E0      1302            push    acc
03E8 7446      1303            mov     a,#0x46
03EA C0E0      1304            push    acc
03EC 8C82      1305            mov     dpl,r4
03EE 8D83      1306            mov     dph,r5
03F0 8EF0      1307            mov     b,r6
03F2 EF        1308            mov     a,r7
03F3 120100    1309            lcall   ___fsgt
03F6 AC82      1310            mov     r4,dpl
03F8 E581      1311            mov     a,sp
03FA 24FC      1312            add     a,#0xfc
03FC F581      1313            mov     sp,a
03FE D003      1314            pop     ar3
0400 D002      1315            pop     ar2
0402 EC        1316            mov     a,r4
0403 6001      1317            jz      L013017?
0405 EB        1318            mov     a,r3
0406 2470      1319            add     a,#_FreqBuffer
0408 F8        1320            mov     r0,a
0409 8603      1321            mov     ar3,@r0
040B 08        1322            inc     r0
040C 8604      1323            mov     ar4,@r0
040E 08        1324            inc     r0
040F 8605      1325            mov     ar5,@r0
0411 08        1326            inc     r0
0412 8606      1327            mov     ar6,@r0
0414 18        1328            dec     r0
0415 18        1329            dec     r0
0416 18        1330            dec     r0
0417 C002      1331            push    ar2
0419 747B      1332            mov     a,#0x7B
041B C0E0      1333            push    acc
041D 744D      1334            mov     a,#0x4D
041F C0E0      1335            push    acc
0421 746D      1336            mov     a,#0x6D
0423 C0E0      1337            push    acc
0425 7446      1338            mov     a,#0x46
0427 C0E0      1339            push    acc
0429 8B82      1340            mov     dpl,r3
042B 8C83      1341            mov     dph,r4
042D 8DF0      1342            mov     b,r5
042F EE        1343            mov     a,r6
0430 120100    1344            lcall   ___fslt
0433 AB82      1345            mov     r3,dpl
0435 E581      1346            mov     a,sp
0437 24FC      1347            add     a,#0xfc
0439 F581      1348            mov     sp,a
043B D002      1349            pop     ar2
043D EB        1350            mov     a,r3
043E 6001      1351            jz      L013017?
0440           1352   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:327: StopSigCount++;  
0440 05A0      1353            inc     _StopSigCount
0442           1354   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:328: printf("Stop sig detected\n");   
0442 C002      1355            push    ar2
0444 7450      1356            mov     a,#__str_0
0446 C0E0      1357            push    acc
0448 74A8      1358            mov     a,#(__str_0 >> 8)
044A C0E0      1359            push    acc
044C 7480      1360            mov     a,#0x80
044E C0E0      1361            push    acc
0450 120100    1362            lcall   _printf
0453 1581      1363            dec     sp
0455 1581      1364            dec     sp
0457 1581      1365            dec     sp
0459 D002      1366            pop     ar2
045B           1367   L013017?:
045B           1368   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:322: for (ReadCount=0; ReadCount<4; ReadCount++){
045B 0A        1369            inc     r2
045C 020100    1370            ljmp    L013015?
045F           1371   L013018?:
045F           1372   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:333: if (ForwardSigCount >= 2){
045F 74FE      1373            mov     a,#0x100 - 0x02
0461 25F0      1374            add     a,_ForwardSigCount
0463 5001      1375            jnc     L013010?
0465           1376   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:334: mode = FORWARD;
0465 75B003    1377            mov     _mode,#0x03
0468 E4        1378            clr     a
0469 F5B1      1379            mov     (_mode + 1),a
046B           1380   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:341: power=30;
046B 75781E    1381            mov     _power,#0x1E
046E           1382   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:342: ForwardSigCount = 0;
046E 75F000    1383            mov     _ForwardSigCount,#0x00
0471           1384   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:343: return;
0471 22        1385            ret
0472           1386   L013010?:
0472           1387   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:347: if (StopSigCount == 4){
0472 7404      1388            mov     a,#0x04
0474 B5A010    1389            cjne    a,_StopSigCount,L013019?
0477           1390   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:348: mode = STOP;
0477           1391   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:349: StopSigCount = 0;
0477 E4        1392            clr     a
0478 F5B0      1393            mov     _mode,a
047A F5B1      1394            mov     (_mode + 1),a
047C F5A0      1395            mov     _StopSigCount,a
047E           1396   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:350: return;
047E           1397   L013019?:
047E 22        1398            ret
047F           1399   ;------------------------------------------------------------
047F           1400   ;Allocation info for local variables in function 'MotorControl'
047F           1401   ;------------------------------------------------------------
047F           1402   ;IndVolts                  Allocated with name '_MotorControl_IndVolts_1_79'
047F           1403   ;sloc0                     Allocated with name '_MotorControl_sloc0_1_0'
047F           1404   ;sloc1                     Allocated with name '_MotorControl_sloc1_1_0'
047F           1405   ;sloc2                     Allocated with name '_MotorControl_sloc2_1_0'
047F           1406   ;sloc3                     Allocated with name '_MotorControl_sloc3_1_0'
047F           1407   ;------------------------------------------------------------
047F           1408   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:362: void MotorControl (volatile float IndVolts[])
047F           1409   ;        -----------------------------------------
047F           1410   ;         function MotorControl
047F           1411   ;        -----------------------------------------
047F           1412   _MotorControl:
047F 858290    1413            mov     _MotorControl_IndVolts_1_79,dpl
0482 858391    1414            mov     (_MotorControl_IndVolts_1_79 + 1),dph
0485 85F092    1415            mov     (_MotorControl_IndVolts_1_79 + 2),b
0488           1416   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:365: switch (mode){
0488 E4        1417            clr     a
0489 B5B050    1418            cjne    a,_mode,L014047?
048C E4        1419            clr     a
048D B5B150    1420            cjne    a,(_mode + 1),L014047?
0490 020100    1421            ljmp    L014031?
0493           1422   L014047?:
0493 7403      1423            mov     a,#0x03
0495 B5B0D0    1424            cjne    a,_mode,L014048?
0498 E4        1425            clr     a
0499 B5B1D0    1426            cjne    a,(_mode + 1),L014048?
049C 8001      1427            sjmp    L014001?
049E           1428   L014048?:
049E 7404      1429            mov     a,#0x04
04A0 B5B050    1430            cjne    a,_mode,L014049?
04A3 E4        1431            clr     a
04A4 B5B150    1432            cjne    a,(_mode + 1),L014049?
04A7 020100    1433            ljmp    L014016?
04AA           1434   L014049?:
04AA 22        1435            ret
04AB           1436   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:367: case FORWARD:
04AB           1437   L014001?:
04AB           1438   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:368: if(IndVolts[0] > Vblue_thresh + 0.1 || IndVolts[0]/IndVolts[1] > 1){
04AB 8590E0    1439            mov     _MotorControl_sloc0_1_0,_MotorControl_IndVolts_1_79
04AE 8591E1    1440            mov     (_MotorControl_sloc0_1_0 + 1),(_MotorControl_IndVolts_1_79 + 1)
04B1 8592E2    1441            mov     (_MotorControl_sloc0_1_0 + 2),(_MotorControl_IndVolts_1_79 + 2)
04B4 85E082    1442            mov     dpl,_MotorControl_sloc0_1_0
04B7 85E183    1443            mov     dph,(_MotorControl_sloc0_1_0 + 1)
04BA 85E2F0    1444            mov     b,(_MotorControl_sloc0_1_0 + 2)
04BD 120100    1445            lcall   __gptrget
04C0 FD        1446            mov     r5,a
04C1 A3        1447            inc     dptr
04C2 120100    1448            lcall   __gptrget
04C5 FE        1449            mov     r6,a
04C6 A3        1450            inc     dptr
04C7 120100    1451            lcall   __gptrget
04CA FF        1452            mov     r7,a
04CB A3        1453            inc     dptr
04CC 120100    1454            lcall   __gptrget
04CF F8        1455            mov     r0,a
04D0 C005      1456            push    ar5
04D2 C006      1457            push    ar6
04D4 C007      1458            push    ar7
04D6 C000      1459            push    ar0
04D8 E4        1460            clr     a
04D9 C0E0      1461            push    acc
04DB C0E0      1462            push    acc
04DD 7480      1463            mov     a,#0x80
04DF C0E0      1464            push    acc
04E1 743F      1465            mov     a,#0x3F
04E3 C0E0      1466            push    acc
04E5 8D82      1467            mov     dpl,r5
04E7 8E83      1468            mov     dph,r6
04E9 8FF0      1469            mov     b,r7
04EB E8        1470            mov     a,r0
04EC 120100    1471            lcall   ___fsgt
04EF A982      1472            mov     r1,dpl
04F1 E581      1473            mov     a,sp
04F3 24FC      1474            add     a,#0xfc
04F5 F581      1475            mov     sp,a
04F7 D000      1476            pop     ar0
04F9 D007      1477            pop     ar7
04FB D006      1478            pop     ar6
04FD D005      1479            pop     ar5
04FF E9        1480            mov     a,r1
0500 6001      1481            jz      L014050?
0502 020100    1482            ljmp    L014012?
0505           1483   L014050?:
0505 7404      1484            mov     a,#0x04
0507 25E0      1485            add     a,_MotorControl_sloc0_1_0
0509 F9        1486            mov     r1,a
050A E4        1487            clr     a
050B 35E1      1488            addc    a,(_MotorControl_sloc0_1_0 + 1)
050D FA        1489            mov     r2,a
050E ABE2      1490            mov     r3,(_MotorControl_sloc0_1_0 + 2)
0510 8982      1491            mov     dpl,r1
0512 8A83      1492            mov     dph,r2
0514 8BF0      1493            mov     b,r3
0516 120100    1494            lcall   __gptrget
0519 F580      1495            mov     _MotorControl_sloc2_1_0,a
051B A3        1496            inc     dptr
051C 120100    1497            lcall   __gptrget
051F F581      1498            mov     (_MotorControl_sloc2_1_0 + 1),a
0521 A3        1499            inc     dptr
0522 120100    1500            lcall   __gptrget
0525 F582      1501            mov     (_MotorControl_sloc2_1_0 + 2),a
0527 A3        1502            inc     dptr
0528 120100    1503            lcall   __gptrget
052B F583      1504            mov     (_MotorControl_sloc2_1_0 + 3),a
052D C005      1505            push    ar5
052F C006      1506            push    ar6
0531 C007      1507            push    ar7
0533 C000      1508            push    ar0
0535 C080      1509            push    _MotorControl_sloc2_1_0
0537 C081      1510            push    (_MotorControl_sloc2_1_0 + 1)
0539 C082      1511            push    (_MotorControl_sloc2_1_0 + 2)
053B C083      1512            push    (_MotorControl_sloc2_1_0 + 3)
053D 8D82      1513            mov     dpl,r5
053F 8E83      1514            mov     dph,r6
0541 8FF0      1515            mov     b,r7
0543 E8        1516            mov     a,r0
0544 120100    1517            lcall   ___fsdiv
0547 858230    1518            mov     _MotorControl_sloc1_1_0,dpl
054A 858331    1519            mov     (_MotorControl_sloc1_1_0 + 1),dph
054D 85F032    1520            mov     (_MotorControl_sloc1_1_0 + 2),b
0550 F533      1521            mov     (_MotorControl_sloc1_1_0 + 3),a
0552 E581      1522            mov     a,sp
0554 24FC      1523            add     a,#0xfc
0556 F581      1524            mov     sp,a
0558 E4        1525            clr     a
0559 C0E0      1526            push    acc
055B C0E0      1527            push    acc
055D 7480      1528            mov     a,#0x80
055F C0E0      1529            push    acc
0561 743F      1530            mov     a,#0x3F
0563 C0E0      1531            push    acc
0565 853082    1532            mov     dpl,_MotorControl_sloc1_1_0
0568 853183    1533            mov     dph,(_MotorControl_sloc1_1_0 + 1)
056B 8532F0    1534            mov     b,(_MotorControl_sloc1_1_0 + 2)
056E E533      1535            mov     a,(_MotorControl_sloc1_1_0 + 3)
0570 120100    1536            lcall   ___fsgt
0573 AA82      1537            mov     r2,dpl
0575 E581      1538            mov     a,sp
0577 24FC      1539            add     a,#0xfc
0579 F581      1540            mov     sp,a
057B D000      1541            pop     ar0
057D D007      1542            pop     ar7
057F D006      1543            pop     ar6
0581 D005      1544            pop     ar5
0583 EA        1545            mov     a,r2
0584 7001      1546            jnz     L014051?
0586 020100    1547            ljmp    L014013?
0589           1548   L014051?:
0589           1549   L014012?:
0589           1550   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:369: if (IndVolts[0]/IndVolts[1]>1.3){
0589 7404      1551            mov     a,#0x04
058B 25E0      1552            add     a,_MotorControl_sloc0_1_0
058D FA        1553            mov     r2,a
058E E4        1554            clr     a
058F 35E1      1555            addc    a,(_MotorControl_sloc0_1_0 + 1)
0591 FB        1556            mov     r3,a
0592 ACE2      1557            mov     r4,(_MotorControl_sloc0_1_0 + 2)
0594 8A82      1558            mov     dpl,r2
0596 8B83      1559            mov     dph,r3
0598 8CF0      1560            mov     b,r4
059A 120100    1561            lcall   __gptrget
059D FA        1562            mov     r2,a
059E A3        1563            inc     dptr
059F 120100    1564            lcall   __gptrget
05A2 FB        1565            mov     r3,a
05A3 A3        1566            inc     dptr
05A4 120100    1567            lcall   __gptrget
05A7 FC        1568            mov     r4,a
05A8 A3        1569            inc     dptr
05A9 120100    1570            lcall   __gptrget
05AC F9        1571            mov     r1,a
05AD C002      1572            push    ar2
05AF C003      1573            push    ar3
05B1 C004      1574            push    ar4
05B3 C001      1575            push    ar1
05B5 8D82      1576            mov     dpl,r5
05B7 8E83      1577            mov     dph,r6
05B9 8FF0      1578            mov     b,r7
05BB E8        1579            mov     a,r0
05BC 120100    1580            lcall   ___fsdiv
05BF AA82      1581            mov     r2,dpl
05C1 AB83      1582            mov     r3,dph
05C3 ACF0      1583            mov     r4,b
05C5 FD        1584            mov     r5,a
05C6 E581      1585            mov     a,sp
05C8 24FC      1586            add     a,#0xfc
05CA F581      1587            mov     sp,a
05CC 7466      1588            mov     a,#0x66
05CE C0E0      1589            push    acc
05D0 C0E0      1590            push    acc
05D2 74A6      1591            mov     a,#0xA6
05D4 C0E0      1592            push    acc
05D6 743F      1593            mov     a,#0x3F
05D8 C0E0      1594            push    acc
05DA 8A82      1595            mov     dpl,r2
05DC 8B83      1596            mov     dph,r3
05DE 8CF0      1597            mov     b,r4
05E0 ED        1598            mov     a,r5
05E1 120100    1599            lcall   ___fsgt
05E4 AA82      1600            mov     r2,dpl
05E6 E581      1601            mov     a,sp
05E8 24FC      1602            add     a,#0xfc
05EA F581      1603            mov     sp,a
05EC EA        1604            mov     a,r2
05ED 6001      1605            jz      L014003?
05EF           1606   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:370: pwm_RED1=0;
05EF           1607   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:371: pwm_RED0=0;
05EF           1608   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:372: pwm_BLU1=2*power;
05EF E4        1609            clr     a
05F0 F5B0      1610            mov     _pwm_RED1,a
05F2 F5F0      1611            mov     _pwm_RED0,a
05F4 E578      1612            mov     a,_power
05F6 25E0      1613            add     a,acc
05F8 F530      1614            mov     _pwm_BLU1,a
05FA           1615   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:373: pwm_BLU0=0;
05FA 757000    1616            mov     _pwm_BLU0,#0x00
05FD 22        1617            ret
05FE           1618   L014003?:
05FE           1619   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:377: pwm_BLU1= 0;
05FE 753000    1620            mov     _pwm_BLU1,#0x00
0601           1621   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:378: pwm_BLU0 = 0;
0601 757000    1622            mov     _pwm_BLU0,#0x00
0604           1623   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:379: pwm_RED1 = power;
0604 8578B0    1624            mov     _pwm_RED1,_power
0607           1625   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:380: pwm_RED0 = 0; 
0607 75F000    1626            mov     _pwm_RED0,#0x00
060A 22        1627            ret
060B           1628   L014013?:
060B           1629   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:384: else if(IndVolts[1] > Vred_thresh + 0.1 || IndVolts[0]/IndVolts[1] < 1){
060B 74CD      1630            mov     a,#0xCD
060D C0E0      1631            push    acc
060F 74CC      1632            mov     a,#0xCC
0611 C0E0      1633            push    acc
0613 748C      1634            mov     a,#0x8C
0615 C0E0      1635            push    acc
0617 743F      1636            mov     a,#0x3F
0619 C0E0      1637            push    acc
061B 858082    1638            mov     dpl,_MotorControl_sloc2_1_0
061E 858183    1639            mov     dph,(_MotorControl_sloc2_1_0 + 1)
0621 8582F0    1640            mov     b,(_MotorControl_sloc2_1_0 + 2)
0624 E583      1641            mov     a,(_MotorControl_sloc2_1_0 + 3)
0626 120100    1642            lcall   ___fsgt
0629 AA82      1643            mov     r2,dpl
062B E581      1644            mov     a,sp
062D 24FC      1645            add     a,#0xfc
062F F581      1646            mov     sp,a
0631 EA        1647            mov     a,r2
0632 7001      1648            jnz     L014008?
0634 C0E0      1649            push    acc
0636 C0E0      1650            push    acc
0638 7480      1651            mov     a,#0x80
063A C0E0      1652            push    acc
063C 743F      1653            mov     a,#0x3F
063E C0E0      1654            push    acc
0640 853082    1655            mov     dpl,_MotorControl_sloc1_1_0
0643 853183    1656            mov     dph,(_MotorControl_sloc1_1_0 + 1)
0646 8532F0    1657            mov     b,(_MotorControl_sloc1_1_0 + 2)
0649 E533      1658            mov     a,(_MotorControl_sloc1_1_0 + 3)
064B 120100    1659            lcall   ___fslt
064E AA82      1660            mov     r2,dpl
0650 E581      1661            mov     a,sp
0652 24FC      1662            add     a,#0xfc
0654 F581      1663            mov     sp,a
0656 EA        1664            mov     a,r2
0657 6001      1665            jz      L014009?
0659           1666   L014008?:
0659           1667   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:385: if (IndVolts[0]/IndVolts[1]<0.5){
0659 E4        1668            clr     a
065A C0E0      1669            push    acc
065C C0E0      1670            push    acc
065E C0E0      1671            push    acc
0660 743F      1672            mov     a,#0x3F
0662 C0E0      1673            push    acc
0664 853082    1674            mov     dpl,_MotorControl_sloc1_1_0
0667 853183    1675            mov     dph,(_MotorControl_sloc1_1_0 + 1)
066A 8532F0    1676            mov     b,(_MotorControl_sloc1_1_0 + 2)
066D E533      1677            mov     a,(_MotorControl_sloc1_1_0 + 3)
066F 120100    1678            lcall   ___fslt
0672 AA82      1679            mov     r2,dpl
0674 E581      1680            mov     a,sp
0676 24FC      1681            add     a,#0xfc
0678 F581      1682            mov     sp,a
067A EA        1683            mov     a,r2
067B 6001      1684            jz      L014006?
067D           1685   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:386: pwm_RED1=2*power;
067D E578      1686            mov     a,_power
067F 25E0      1687            add     a,acc
0681 F5B0      1688            mov     _pwm_RED1,a
0683           1689   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:387: pwm_RED0=0;
0683 75F000    1690            mov     _pwm_RED0,#0x00
0686           1691   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:388: pwm_BLU1=0;
0686 753000    1692            mov     _pwm_BLU1,#0x00
0689           1693   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:389: pwm_BLU0=0;
0689 757000    1694            mov     _pwm_BLU0,#0x00
068C 22        1695            ret
068D           1696   L014006?:
068D           1697   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:393: pwm_BLU1=power;
068D 857830    1698            mov     _pwm_BLU1,_power
0690           1699   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:394: pwm_BLU0=0;
0690 757000    1700            mov     _pwm_BLU0,#0x00
0693           1701   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:395: pwm_RED1=0;
0693 75B000    1702            mov     _pwm_RED1,#0x00
0696           1703   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:396: pwm_RED0=0;
0696 75F000    1704            mov     _pwm_RED0,#0x00
0699 22        1705            ret
069A           1706   L014009?:
069A           1707   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:400: pwm_BLU1 = power;
069A 857830    1708            mov     _pwm_BLU1,_power
069D           1709   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:401: pwm_BLU0 = 0;
069D 757000    1710            mov     _pwm_BLU0,#0x00
06A0           1711   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:402: pwm_RED1 = power;
06A0 8578B0    1712            mov     _pwm_RED1,_power
06A3           1713   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:403: pwm_RED0 = 0;
06A3 75F000    1714            mov     _pwm_RED0,#0x00
06A6           1715   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:405: break;
06A6 22        1716            ret
06A7           1717   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:408: case BACKWARD:
06A7           1718   L014016?:
06A7           1719   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:409: if(IndVolts[0] > Vblue_thresh + 0.1 || IndVolts[0]/IndVolts[1] > 1){
06A7 859080    1720            mov     _MotorControl_sloc2_1_0,_MotorControl_IndVolts_1_79
06AA 859181    1721            mov     (_MotorControl_sloc2_1_0 + 1),(_MotorControl_IndVolts_1_79 + 1)
06AD 859282    1722            mov     (_MotorControl_sloc2_1_0 + 2),(_MotorControl_IndVolts_1_79 + 2)
06B0 858082    1723            mov     dpl,_MotorControl_sloc2_1_0
06B3 858183    1724            mov     dph,(_MotorControl_sloc2_1_0 + 1)
06B6 8582F0    1725            mov     b,(_MotorControl_sloc2_1_0 + 2)
06B9 120100    1726            lcall   __gptrget
06BC FD        1727            mov     r5,a
06BD A3        1728            inc     dptr
06BE 120100    1729            lcall   __gptrget
06C1 FE        1730            mov     r6,a
06C2 A3        1731            inc     dptr
06C3 120100    1732            lcall   __gptrget
06C6 FF        1733            mov     r7,a
06C7 A3        1734            inc     dptr
06C8 120100    1735            lcall   __gptrget
06CB F8        1736            mov     r0,a
06CC C005      1737            push    ar5
06CE C006      1738            push    ar6
06D0 C007      1739            push    ar7
06D2 C000      1740            push    ar0
06D4 E4        1741            clr     a
06D5 C0E0      1742            push    acc
06D7 C0E0      1743            push    acc
06D9 7480      1744            mov     a,#0x80
06DB C0E0      1745            push    acc
06DD 743F      1746            mov     a,#0x3F
06DF C0E0      1747            push    acc
06E1 8D82      1748            mov     dpl,r5
06E3 8E83      1749            mov     dph,r6
06E5 8FF0      1750            mov     b,r7
06E7 E8        1751            mov     a,r0
06E8 120100    1752            lcall   ___fsgt
06EB A982      1753            mov     r1,dpl
06ED E581      1754            mov     a,sp
06EF 24FC      1755            add     a,#0xfc
06F1 F581      1756            mov     sp,a
06F3 D000      1757            pop     ar0
06F5 D007      1758            pop     ar7
06F7 D006      1759            pop     ar6
06F9 D005      1760            pop     ar5
06FB E9        1761            mov     a,r1
06FC 6001      1762            jz      L014056?
06FE 020100    1763            ljmp    L014027?
0701           1764   L014056?:
0701 7404      1765            mov     a,#0x04
0703 2580      1766            add     a,_MotorControl_sloc2_1_0
0705 F9        1767            mov     r1,a
0706 E4        1768            clr     a
0707 3581      1769            addc    a,(_MotorControl_sloc2_1_0 + 1)
0709 FA        1770            mov     r2,a
070A AB82      1771            mov     r3,(_MotorControl_sloc2_1_0 + 2)
070C 8982      1772            mov     dpl,r1
070E 8A83      1773            mov     dph,r2
0710 8BF0      1774            mov     b,r3
0712 120100    1775            lcall   __gptrget
0715 F5D0      1776            mov     _MotorControl_sloc3_1_0,a
0717 A3        1777            inc     dptr
0718 120100    1778            lcall   __gptrget
071B F5D1      1779            mov     (_MotorControl_sloc3_1_0 + 1),a
071D A3        1780            inc     dptr
071E 120100    1781            lcall   __gptrget
0721 F5D2      1782            mov     (_MotorControl_sloc3_1_0 + 2),a
0723 A3        1783            inc     dptr
0724 120100    1784            lcall   __gptrget
0727 F5D3      1785            mov     (_MotorControl_sloc3_1_0 + 3),a
0729 C005      1786            push    ar5
072B C006      1787            push    ar6
072D C007      1788            push    ar7
072F C000      1789            push    ar0
0731 C0D0      1790            push    _MotorControl_sloc3_1_0
0733 C0D1      1791            push    (_MotorControl_sloc3_1_0 + 1)
0735 C0D2      1792            push    (_MotorControl_sloc3_1_0 + 2)
0737 C0D3      1793            push    (_MotorControl_sloc3_1_0 + 3)
0739 8D82      1794            mov     dpl,r5
073B 8E83      1795            mov     dph,r6
073D 8FF0      1796            mov     b,r7
073F E8        1797            mov     a,r0
0740 120100    1798            lcall   ___fsdiv
0743 858230    1799            mov     _MotorControl_sloc1_1_0,dpl
0746 858331    1800            mov     (_MotorControl_sloc1_1_0 + 1),dph
0749 85F032    1801            mov     (_MotorControl_sloc1_1_0 + 2),b
074C F533      1802            mov     (_MotorControl_sloc1_1_0 + 3),a
074E E581      1803            mov     a,sp
0750 24FC      1804            add     a,#0xfc
0752 F581      1805            mov     sp,a
0754 E4        1806            clr     a
0755 C0E0      1807            push    acc
0757 C0E0      1808            push    acc
0759 7480      1809            mov     a,#0x80
075B C0E0      1810            push    acc
075D 743F      1811            mov     a,#0x3F
075F C0E0      1812            push    acc
0761 853082    1813            mov     dpl,_MotorControl_sloc1_1_0
0764 853183    1814            mov     dph,(_MotorControl_sloc1_1_0 + 1)
0767 8532F0    1815            mov     b,(_MotorControl_sloc1_1_0 + 2)
076A E533      1816            mov     a,(_MotorControl_sloc1_1_0 + 3)
076C 120100    1817            lcall   ___fsgt
076F AA82      1818            mov     r2,dpl
0771 E581      1819            mov     a,sp
0773 24FC      1820            add     a,#0xfc
0775 F581      1821            mov     sp,a
0777 D000      1822            pop     ar0
0779 D007      1823            pop     ar7
077B D006      1824            pop     ar6
077D D005      1825            pop     ar5
077F EA        1826            mov     a,r2
0780 7001      1827            jnz     L014057?
0782 020100    1828            ljmp    L014028?
0785           1829   L014057?:
0785           1830   L014027?:
0785           1831   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:410: if (IndVolts[0]/IndVolts[1]>1.1){
0785 7404      1832            mov     a,#0x04
0787 2580      1833            add     a,_MotorControl_sloc2_1_0
0789 FA        1834            mov     r2,a
078A E4        1835            clr     a
078B 3581      1836            addc    a,(_MotorControl_sloc2_1_0 + 1)
078D FB        1837            mov     r3,a
078E AC82      1838            mov     r4,(_MotorControl_sloc2_1_0 + 2)
0790 8A82      1839            mov     dpl,r2
0792 8B83      1840            mov     dph,r3
0794 8CF0      1841            mov     b,r4
0796 120100    1842            lcall   __gptrget
0799 FA        1843            mov     r2,a
079A A3        1844            inc     dptr
079B 120100    1845            lcall   __gptrget
079E FB        1846            mov     r3,a
079F A3        1847            inc     dptr
07A0 120100    1848            lcall   __gptrget
07A3 FC        1849            mov     r4,a
07A4 A3        1850            inc     dptr
07A5 120100    1851            lcall   __gptrget
07A8 F9        1852            mov     r1,a
07A9 C002      1853            push    ar2
07AB C003      1854            push    ar3
07AD C004      1855            push    ar4
07AF C001      1856            push    ar1
07B1 8D82      1857            mov     dpl,r5
07B3 8E83      1858            mov     dph,r6
07B5 8FF0      1859            mov     b,r7
07B7 E8        1860            mov     a,r0
07B8 120100    1861            lcall   ___fsdiv
07BB AA82      1862            mov     r2,dpl
07BD AB83      1863            mov     r3,dph
07BF ACF0      1864            mov     r4,b
07C1 FD        1865            mov     r5,a
07C2 E581      1866            mov     a,sp
07C4 24FC      1867            add     a,#0xfc
07C6 F581      1868            mov     sp,a
07C8 74CD      1869            mov     a,#0xCD
07CA C0E0      1870            push    acc
07CC 74CC      1871            mov     a,#0xCC
07CE C0E0      1872            push    acc
07D0 748C      1873            mov     a,#0x8C
07D2 C0E0      1874            push    acc
07D4 743F      1875            mov     a,#0x3F
07D6 C0E0      1876            push    acc
07D8 8A82      1877            mov     dpl,r2
07DA 8B83      1878            mov     dph,r3
07DC 8CF0      1879            mov     b,r4
07DE ED        1880            mov     a,r5
07DF 120100    1881            lcall   ___fsgt
07E2 AA82      1882            mov     r2,dpl
07E4 E581      1883            mov     a,sp
07E6 24FC      1884            add     a,#0xfc
07E8 F581      1885            mov     sp,a
07EA EA        1886            mov     a,r2
07EB 6001      1887            jz      L014018?
07ED           1888   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:411: pwm_RED0=2*power;
07ED E578      1889            mov     a,_power
07EF 25E0      1890            add     a,acc
07F1 F5F0      1891            mov     _pwm_RED0,a
07F3           1892   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:412: pwm_RED1=0;
07F3 75B000    1893            mov     _pwm_RED1,#0x00
07F6           1894   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:413: pwm_BLU0=0;
07F6 757000    1895            mov     _pwm_BLU0,#0x00
07F9           1896   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:414: pwm_BLU1=0;
07F9 753000    1897            mov     _pwm_BLU1,#0x00
07FC 22        1898            ret
07FD           1899   L014018?:
07FD           1900   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:418: pwm_BLU0= power;
07FD 857870    1901            mov     _pwm_BLU0,_power
0800           1902   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:419: pwm_BLU1 = 0;
0800 753000    1903            mov     _pwm_BLU1,#0x00
0803           1904   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:420: pwm_RED0 = 0;
0803 75F000    1905            mov     _pwm_RED0,#0x00
0806           1906   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:421: pwm_RED1 = 0; 
0806 75B000    1907            mov     _pwm_RED1,#0x00
0809 22        1908            ret
080A           1909   L014028?:
080A           1910   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:425: else if(IndVolts[1] > Vred_thresh + 0.1 || IndVolts[0]/IndVolts[1] < 1){
080A 74CD      1911            mov     a,#0xCD
080C C0E0      1912            push    acc
080E 74CC      1913            mov     a,#0xCC
0810 C0E0      1914            push    acc
0812 748C      1915            mov     a,#0x8C
0814 C0E0      1916            push    acc
0816 743F      1917            mov     a,#0x3F
0818 C0E0      1918            push    acc
081A 85D082    1919            mov     dpl,_MotorControl_sloc3_1_0
081D 85D183    1920            mov     dph,(_MotorControl_sloc3_1_0 + 1)
0820 85D2F0    1921            mov     b,(_MotorControl_sloc3_1_0 + 2)
0823 E5D3      1922            mov     a,(_MotorControl_sloc3_1_0 + 3)
0825 120100    1923            lcall   ___fsgt
0828 AA82      1924            mov     r2,dpl
082A E581      1925            mov     a,sp
082C 24FC      1926            add     a,#0xfc
082E F581      1927            mov     sp,a
0830 EA        1928            mov     a,r2
0831 7001      1929            jnz     L014023?
0833 C0E0      1930            push    acc
0835 C0E0      1931            push    acc
0837 7480      1932            mov     a,#0x80
0839 C0E0      1933            push    acc
083B 743F      1934            mov     a,#0x3F
083D C0E0      1935            push    acc
083F 853082    1936            mov     dpl,_MotorControl_sloc1_1_0
0842 853183    1937            mov     dph,(_MotorControl_sloc1_1_0 + 1)
0845 8532F0    1938            mov     b,(_MotorControl_sloc1_1_0 + 2)
0848 E533      1939            mov     a,(_MotorControl_sloc1_1_0 + 3)
084A 120100    1940            lcall   ___fslt
084D AA82      1941            mov     r2,dpl
084F E581      1942            mov     a,sp
0851 24FC      1943            add     a,#0xfc
0853 F581      1944            mov     sp,a
0855 EA        1945            mov     a,r2
0856 6001      1946            jz      L014024?
0858           1947   L014023?:
0858           1948   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:426: if (IndVolts[0]/IndVolts[1]<0.8){
0858 74CD      1949            mov     a,#0xCD
085A C0E0      1950            push    acc
085C 74CC      1951            mov     a,#0xCC
085E C0E0      1952            push    acc
0860 744C      1953            mov     a,#0x4C
0862 C0E0      1954            push    acc
0864 743F      1955            mov     a,#0x3F
0866 C0E0      1956            push    acc
0868 853082    1957            mov     dpl,_MotorControl_sloc1_1_0
086B 853183    1958            mov     dph,(_MotorControl_sloc1_1_0 + 1)
086E 8532F0    1959            mov     b,(_MotorControl_sloc1_1_0 + 2)
0871 E533      1960            mov     a,(_MotorControl_sloc1_1_0 + 3)
0873 120100    1961            lcall   ___fslt
0876 AA82      1962            mov     r2,dpl
0878 E581      1963            mov     a,sp
087A 24FC      1964            add     a,#0xfc
087C F581      1965            mov     sp,a
087E EA        1966            mov     a,r2
087F 6001      1967            jz      L014021?
0881           1968   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:427: pwm_RED0=0;
0881           1969   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:428: pwm_RED1=0;
0881           1970   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:429: pwm_BLU0=2*power;
0881 E4        1971            clr     a
0882 F5F0      1972            mov     _pwm_RED0,a
0884 F5B0      1973            mov     _pwm_RED1,a
0886 E578      1974            mov     a,_power
0888 25E0      1975            add     a,acc
088A F570      1976            mov     _pwm_BLU0,a
088C           1977   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:430: pwm_BLU1=0;
088C 753000    1978            mov     _pwm_BLU1,#0x00
088F 22        1979            ret
0890           1980   L014021?:
0890           1981   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:434: pwm_BLU0=0;
0890 757000    1982            mov     _pwm_BLU0,#0x00
0893           1983   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:435: pwm_BLU1=0;
0893 753000    1984            mov     _pwm_BLU1,#0x00
0896           1985   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:436: pwm_RED0=power;
0896 8578F0    1986            mov     _pwm_RED0,_power
0899           1987   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:437: pwm_RED1=0;
0899 75B000    1988            mov     _pwm_RED1,#0x00
089C 22        1989            ret
089D           1990   L014024?:
089D           1991   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:441: pwm_BLU0 = power;
089D 857870    1992            mov     _pwm_BLU0,_power
08A0           1993   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:442: pwm_BLU1 = 0;
08A0 753000    1994            mov     _pwm_BLU1,#0x00
08A3           1995   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:443: pwm_RED0 = power;
08A3 8578F0    1996            mov     _pwm_RED0,_power
08A6           1997   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:444: pwm_RED1 = 0;
08A6 75B000    1998            mov     _pwm_RED1,#0x00
08A9           1999   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:446: break;
08A9           2000   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:450: case STOP:
08A9 22        2001            ret
08AA           2002   L014031?:
08AA           2003   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:451: pwm_BLU1 = 0;
08AA 753000    2004            mov     _pwm_BLU1,#0x00
08AD           2005   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:452: pwm_BLU0 = 0;
08AD 757000    2006            mov     _pwm_BLU0,#0x00
08B0           2007   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:453: pwm_RED1 = 0;
08B0 75B000    2008            mov     _pwm_RED1,#0x00
08B3           2009   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:454: pwm_RED0 = 0;
08B3 75F000    2010            mov     _pwm_RED0,#0x00
08B6           2011   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:461: }
08B6 22        2012            ret
08B7           2013   ;------------------------------------------------------------
08B7           2014   ;Allocation info for local variables in function 'DebuggingFctn'
08B7           2015   ;------------------------------------------------------------
08B7           2016   ;IndVolts                  Allocated with name '_DebuggingFctn_IndVolts_1_96'
08B7           2017   ;------------------------------------------------------------
08B7           2018   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:472: void DebuggingFctn (volatile float IndVolts[])
08B7           2019   ;        -----------------------------------------
08B7           2020   ;         function DebuggingFctn
08B7           2021   ;        -----------------------------------------
08B7           2022   _DebuggingFctn:
08B7 858220    2023            mov     _DebuggingFctn_IndVolts_1_96,dpl
08BA 858321    2024            mov     (_DebuggingFctn_IndVolts_1_96 + 1),dph
08BD 85F022    2025            mov     (_DebuggingFctn_IndVolts_1_96 + 2),b
08C0           2026   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:474: printf("Freq = %5.3f HZ, Mode = %d, Ratio = %5.3f\r", frequency, mode, IndVolts[0], IndVolts[0]/IndVolts[1]);
08C0 AA20      2027            mov     r2,_DebuggingFctn_IndVolts_1_96
08C2 AB21      2028            mov     r3,(_DebuggingFctn_IndVolts_1_96 + 1)
08C4 AC22      2029            mov     r4,(_DebuggingFctn_IndVolts_1_96 + 2)
08C6 8A82      2030            mov     dpl,r2
08C8 8B83      2031            mov     dph,r3
08CA 8CF0      2032            mov     b,r4
08CC 120100    2033            lcall   __gptrget
08CF FD        2034            mov     r5,a
08D0 A3        2035            inc     dptr
08D1 120100    2036            lcall   __gptrget
08D4 FE        2037            mov     r6,a
08D5 A3        2038            inc     dptr
08D6 120100    2039            lcall   __gptrget
08D9 FF        2040            mov     r7,a
08DA A3        2041            inc     dptr
08DB 120100    2042            lcall   __gptrget
08DE F8        2043            mov     r0,a
08DF 7404      2044            mov     a,#0x04
08E1 2A        2045            add     a,r2
08E2 FA        2046            mov     r2,a
08E3 E4        2047            clr     a
08E4 3B        2048            addc    a,r3
08E5 FB        2049            mov     r3,a
08E6 8A82      2050            mov     dpl,r2
08E8 8B83      2051            mov     dph,r3
08EA 8CF0      2052            mov     b,r4
08EC 120100    2053            lcall   __gptrget
08EF FA        2054            mov     r2,a
08F0 A3        2055            inc     dptr
08F1 120100    2056            lcall   __gptrget
08F4 FB        2057            mov     r3,a
08F5 A3        2058            inc     dptr
08F6 120100    2059            lcall   __gptrget
08F9 FC        2060            mov     r4,a
08FA A3        2061            inc     dptr
08FB 120100    2062            lcall   __gptrget
08FE F9        2063            mov     r1,a
08FF C005      2064            push    ar5
0901 C006      2065            push    ar6
0903 C007      2066            push    ar7
0905 C000      2067            push    ar0
0907 C002      2068            push    ar2
0909 C003      2069            push    ar3
090B C004      2070            push    ar4
090D C001      2071            push    ar1
090F 8D82      2072            mov     dpl,r5
0911 8E83      2073            mov     dph,r6
0913 8FF0      2074            mov     b,r7
0915 E8        2075            mov     a,r0
0916 120100    2076            lcall   ___fsdiv
0919 AA82      2077            mov     r2,dpl
091B AB83      2078            mov     r3,dph
091D ACF0      2079            mov     r4,b
091F F9        2080            mov     r1,a
0920 E581      2081            mov     a,sp
0922 24FC      2082            add     a,#0xfc
0924 F581      2083            mov     sp,a
0926 D000      2084            pop     ar0
0928 D007      2085            pop     ar7
092A D006      2086            pop     ar6
092C D005      2087            pop     ar5
092E C002      2088            push    ar2
0930 C003      2089            push    ar3
0932 C004      2090            push    ar4
0934 C001      2091            push    ar1
0936 C005      2092            push    ar5
0938 C006      2093            push    ar6
093A C007      2094            push    ar7
093C C000      2095            push    ar0
093E C0B0      2096            push    _mode
0940 C0B1      2097            push    (_mode + 1)
0942 C0F0      2098            push    _frequency
0944 C0F1      2099            push    (_frequency + 1)
0946 C0F2      2100            push    (_frequency + 2)
0948 C0F3      2101            push    (_frequency + 3)
094A 7410      2102            mov     a,#__str_1
094C C0E0      2103            push    acc
094E 74AF      2104            mov     a,#(__str_1 >> 8)
0950 C0E0      2105            push    acc
0952 7480      2106            mov     a,#0x80
0954 C0E0      2107            push    acc
0956 120100    2108            lcall   _printf
0959 E581      2109            mov     a,sp
095B 24EF      2110            add     a,#0xef
095D F581      2111            mov     sp,a
095F 22        2112            ret
0960           2113   ;------------------------------------------------------------
0960           2114   ;Allocation info for local variables in function 'main'
0960           2115   ;------------------------------------------------------------
0960           2116   ;IndVolts                  Allocated with name '_main_IndVolts_1_99'
0960           2117   ;------------------------------------------------------------
0960           2118   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:484: void main (void)
0960           2119   ;        -----------------------------------------
0960           2120   ;         function main
0960           2121   ;        -----------------------------------------
0960           2122   _main:
0960           2123   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:491: TIMER0_Init(); // Initialize timer 0 to read the frequency of the fm signal
0960 120100    2124            lcall   _TIMER0_Init
0963           2125   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:492: TIMER2_Init(); // Initialize timer 2 for periodic interrupts used for motor control
0963 120100    2126            lcall   _TIMER2_Init
0966           2127   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:493: EA=1; // Enable interrupts
0966 D2AF      2128            setb    _EA
0968           2129   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:495: InitPinADC(1, 7); // Configure P1.7 as analog input
0968 755007    2130            mov     _InitPinADC_PARM_2,#0x07
096B 758201    2131            mov     dpl,#0x01
096E 120100    2132            lcall   _InitPinADC
0971           2133   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:496: InitPinADC(2, 0); // Configure P2.0 as analog input
0971 755000    2134            mov     _InitPinADC_PARM_2,#0x00
0974 758202    2135            mov     dpl,#0x02
0977 120100    2136            lcall   _InitPinADC
097A           2137   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:497: InitPinADC(2, 7); // Configure P2.7 as analog input
097A 755007    2138            mov     _InitPinADC_PARM_2,#0x07
097D 758202    2139            mov     dpl,#0x02
0980 120100    2140            lcall   _InitPinADC
0983           2141   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:498: InitADC();
0983 120100    2142            lcall   _InitADC
0986           2143   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:499: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0986 7450      2144            mov     a,#__str_2
0988 C0E0      2145            push    acc
098A 74AF      2146            mov     a,#(__str_2 >> 8)
098C C0E0      2147            push    acc
098E 7480      2148            mov     a,#0x80
0990 C0E0      2149            push    acc
0992 120100    2150            lcall   _printf
0995 1581      2151            dec     sp
0997 1581      2152            dec     sp
0999 1581      2153            dec     sp
099B           2154   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:507: while(1)
099B           2155   L016002?:
099B           2156   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:510: DetermineMode();
099B 120100    2157            lcall   _DetermineMode
099E           2158   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:513: IndVolts[0] = Volts_at_Pin(LQFP32_MUX_P2_7);
099E 75820F    2159            mov     dpl,#0x0F
09A1 120100    2160            lcall   _Volts_at_Pin
09A4 AA82      2161            mov     r2,dpl
09A6 AB83      2162            mov     r3,dph
09A8 ACF0      2163            mov     r4,b
09AA FD        2164            mov     r5,a
09AB 8A70      2165            mov     _main_IndVolts_1_99,r2
09AD 8B71      2166            mov     (_main_IndVolts_1_99 + 1),r3
09AF 8C72      2167            mov     (_main_IndVolts_1_99 + 2),r4
09B1 8D73      2168            mov     (_main_IndVolts_1_99 + 3),r5
09B3           2169   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:514: IndVolts[1] = Volts_at_Pin(LQFP32_MUX_P1_7);
09B3 758207    2170            mov     dpl,#0x07
09B6 120100    2171            lcall   _Volts_at_Pin
09B9 AA82      2172            mov     r2,dpl
09BB AB83      2173            mov     r3,dph
09BD ACF0      2174            mov     r4,b
09BF FD        2175            mov     r5,a
09C0 8A74      2176            mov     (_main_IndVolts_1_99 + 0x0004),r2
09C2 8B75      2177            mov     ((_main_IndVolts_1_99 + 0x0004) + 1),r3
09C4 8C76      2178            mov     ((_main_IndVolts_1_99 + 0x0004) + 2),r4
09C6 8D77      2179            mov     ((_main_IndVolts_1_99 + 0x0004) + 3),r5
09C8           2180   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:515: IndVolts[2] = Volts_at_Pin(LQFP32_MUX_P2_0);
09C8 758208    2181            mov     dpl,#0x08
09CB 120100    2182            lcall   _Volts_at_Pin
09CE AA82      2183            mov     r2,dpl
09D0 AB83      2184            mov     r3,dph
09D2 ACF0      2185            mov     r4,b
09D4 FD        2186            mov     r5,a
09D5 8A78      2187            mov     (_main_IndVolts_1_99 + 0x0008),r2
09D7 8B79      2188            mov     ((_main_IndVolts_1_99 + 0x0008) + 1),r3
09D9 8C7A      2189            mov     ((_main_IndVolts_1_99 + 0x0008) + 2),r4
09DB 8D7B      2190            mov     ((_main_IndVolts_1_99 + 0x0008) + 3),r5
09DD           2191   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:519: MotorControl(IndVolts);
09DD 909B70    2192            mov     dptr,#_main_IndVolts_1_99
09E0 75F040    2193            mov     b,#0x40
09E3 120100    2194            lcall   _MotorControl
09E6           2195   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:522: DebuggingFctn(IndVolts);
09E6 909B70    2196            mov     dptr,#_main_IndVolts_1_99
09E9 75F040    2197            mov     b,#0x40
09EC 120100    2198            lcall   _DebuggingFctn
09EF           2199   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:525: waitms(20);
09EF 900014    2200            mov     dptr,#0x0014
09F2 120100    2201            lcall   _waitms
09F5           2202   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:526: millisecond = millisecond + 20;
09F5 7414      2203            mov     a,#0x14
09F7 2560      2204            add     a,_millisecond
09F9 F560      2205            mov     _millisecond,a
09FB E4        2206            clr     a
09FC 3561      2207            addc    a,(_millisecond + 1)
09FE F561      2208            mov     (_millisecond + 1),a
0A00 8001      2209            sjmp    L016002?
0A02           2210            rseg R_CSEG
0A02           2211   
0000           2212            rseg R_XINIT
0000           2213   
0000           2214            rseg R_CONST
0000           2215   __str_0:
0000 53746F70  2216            db 'Stop sig detected'
     20736967
     20646574
     65637465
     64
0011 0A        2217            db 0x0A
0012 00        2218            db 0x00
0013           2219   __str_1:
0013 46726571  2220            db 'Freq = %5.3f HZ, Mode = %d, Ratio = %5.3f'
     203D2025
     352E3366
     20485A2C
     204D6F64
     65203D20
     25642C20
     52617469
     6F203D20
     25352E33
     66
003C 0D        2221            db 0x0D
003D 00        2222            db 0x00
003E           2223   __str_2:
003E 1B        2224            db 0x1B
003F 5B324A    2225            db '[2J'
0042 00        2226            db 0x00
0043           2227   
002E           2228            CSEG
002E           2229   
002E           2230   end
