0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Mon Apr 03 22:30:03 2017
0000              5   ;--------------------------------------------------------
                  5   $name Receiver
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _DebuggingFctn
0000             30            public _MotorControl
0000             31            public _DetermineMode
0000             32            public _ReadFrequency
0000             33            public _Clean_LCD
0000             34            public _LCDprint
0000             35            public _LCD_4BIT
0000             36            public _WriteCommand
0000             37            public _WriteData
0000             38            public _LCD_byte
0000             39            public _LCD_pulse
0000             40            public _Timer2_ISR
0000             41            public _Volts_at_Pin
0000             42            public _ADC_at_Pin
0000             43            public _InitPinADC
0000             44            public _InitADC
0000             45            public _TIMER2_Init
0000             46            public _TIMER0_Init
0000             47            public _waitms
0000             48            public _Timer3us
0000             49            public __c51_external_startup
0000             50            public _LCDprint_PARM_3
0000             51            public _LCDprint_PARM_2
0000             52            public _freqstring
0000             53            public _millisecond
0000             54            public _WriteCount
0000             55            public _FreqBuffer
0000             56            public _mode
0000             57            public _frequency
0000             58            public _overflow_count
0000             59            public _dirout
0000             60            public _pwm_RED1
0000             61            public _pwm_RED0
0000             62            public _pwm_BLU1
0000             63            public _pwm_BLU0
0000             64            public _power
0000             65            public _pwm_count
0000             66   ;--------------------------------------------------------
0000             67   ; Special Function Registers
0000             68   ;--------------------------------------------------------
0000             69   _P0             DATA 0x80
0000             70   _SP             DATA 0x81
0000             71   _DPL            DATA 0x82
0000             72   _DPH            DATA 0x83
0000             73   _EMI0TC         DATA 0x84
0000             74   _EMI0CF         DATA 0x85
0000             75   _OSCLCN         DATA 0x86
0000             76   _PCON           DATA 0x87
0000             77   _TCON           DATA 0x88
0000             78   _TMOD           DATA 0x89
0000             79   _TL0            DATA 0x8a
0000             80   _TL1            DATA 0x8b
0000             81   _TH0            DATA 0x8c
0000             82   _TH1            DATA 0x8d
0000             83   _CKCON          DATA 0x8e
0000             84   _PSCTL          DATA 0x8f
0000             85   _P1             DATA 0x90
0000             86   _TMR3CN         DATA 0x91
0000             87   _TMR4CN         DATA 0x91
0000             88   _TMR3RLL        DATA 0x92
0000             89   _TMR4RLL        DATA 0x92
0000             90   _TMR3RLH        DATA 0x93
0000             91   _TMR4RLH        DATA 0x93
0000             92   _TMR3L          DATA 0x94
0000             93   _TMR4L          DATA 0x94
0000             94   _TMR3H          DATA 0x95
0000             95   _TMR4H          DATA 0x95
0000             96   _USB0ADR        DATA 0x96
0000             97   _USB0DAT        DATA 0x97
0000             98   _SCON           DATA 0x98
0000             99   _SCON0          DATA 0x98
0000            100   _SBUF           DATA 0x99
0000            101   _SBUF0          DATA 0x99
0000            102   _CPT1CN         DATA 0x9a
0000            103   _CPT0CN         DATA 0x9b
0000            104   _CPT1MD         DATA 0x9c
0000            105   _CPT0MD         DATA 0x9d
0000            106   _CPT1MX         DATA 0x9e
0000            107   _CPT0MX         DATA 0x9f
0000            108   _P2             DATA 0xa0
0000            109   _SPI0CFG        DATA 0xa1
0000            110   _SPI0CKR        DATA 0xa2
0000            111   _SPI0DAT        DATA 0xa3
0000            112   _P0MDOUT        DATA 0xa4
0000            113   _P1MDOUT        DATA 0xa5
0000            114   _P2MDOUT        DATA 0xa6
0000            115   _P3MDOUT        DATA 0xa7
0000            116   _IE             DATA 0xa8
0000            117   _CLKSEL         DATA 0xa9
0000            118   _EMI0CN         DATA 0xaa
0000            119   __XPAGE         DATA 0xaa
0000            120   _SBCON1         DATA 0xac
0000            121   _P4MDOUT        DATA 0xae
0000            122   _PFE0CN         DATA 0xaf
0000            123   _P3             DATA 0xb0
0000            124   _OSCXCN         DATA 0xb1
0000            125   _OSCICN         DATA 0xb2
0000            126   _OSCICL         DATA 0xb3
0000            127   _SBRLL1         DATA 0xb4
0000            128   _SBRLH1         DATA 0xb5
0000            129   _FLSCL          DATA 0xb6
0000            130   _FLKEY          DATA 0xb7
0000            131   _IP             DATA 0xb8
0000            132   _CLKMUL         DATA 0xb9
0000            133   _SMBTC          DATA 0xb9
0000            134   _AMX0N          DATA 0xba
0000            135   _AMX0P          DATA 0xbb
0000            136   _ADC0CF         DATA 0xbc
0000            137   _ADC0L          DATA 0xbd
0000            138   _ADC0H          DATA 0xbe
0000            139   _SFRPAGE        DATA 0xbf
0000            140   _SMB0CN         DATA 0xc0
0000            141   _SMB1CN         DATA 0xc0
0000            142   _SMB0CF         DATA 0xc1
0000            143   _SMB1CF         DATA 0xc1
0000            144   _SMB0DAT        DATA 0xc2
0000            145   _SMB1DAT        DATA 0xc2
0000            146   _ADC0GTL        DATA 0xc3
0000            147   _ADC0GTH        DATA 0xc4
0000            148   _ADC0LTL        DATA 0xc5
0000            149   _ADC0LTH        DATA 0xc6
0000            150   _P4             DATA 0xc7
0000            151   _TMR2CN         DATA 0xc8
0000            152   _TMR5CN         DATA 0xc8
0000            153   _REG01CN        DATA 0xc9
0000            154   _TMR2RLL        DATA 0xca
0000            155   _TMR5RLL        DATA 0xca
0000            156   _TMR2RLH        DATA 0xcb
0000            157   _TMR5RLH        DATA 0xcb
0000            158   _TMR2L          DATA 0xcc
0000            159   _TMR5L          DATA 0xcc
0000            160   _TMR2H          DATA 0xcd
0000            161   _TMR5H          DATA 0xcd
0000            162   _SMB0ADM        DATA 0xce
0000            163   _SMB1ADM        DATA 0xce
0000            164   _SMB0ADR        DATA 0xcf
0000            165   _SMB1ADR        DATA 0xcf
0000            166   _PSW            DATA 0xd0
0000            167   _REF0CN         DATA 0xd1
0000            168   _SCON1          DATA 0xd2
0000            169   _SBUF1          DATA 0xd3
0000            170   _P0SKIP         DATA 0xd4
0000            171   _P1SKIP         DATA 0xd5
0000            172   _P2SKIP         DATA 0xd6
0000            173   _USB0XCN        DATA 0xd7
0000            174   _PCA0CN         DATA 0xd8
0000            175   _PCA0MD         DATA 0xd9
0000            176   _PCA0CPM0       DATA 0xda
0000            177   _PCA0CPM1       DATA 0xdb
0000            178   _PCA0CPM2       DATA 0xdc
0000            179   _PCA0CPM3       DATA 0xdd
0000            180   _PCA0CPM4       DATA 0xde
0000            181   _P3SKIP         DATA 0xdf
0000            182   _ACC            DATA 0xe0
0000            183   _XBR0           DATA 0xe1
0000            184   _XBR1           DATA 0xe2
0000            185   _XBR2           DATA 0xe3
0000            186   _IT01CF         DATA 0xe4
0000            187   _CKCON1         DATA 0xe4
0000            188   _SMOD1          DATA 0xe5
0000            189   _EIE1           DATA 0xe6
0000            190   _EIE2           DATA 0xe7
0000            191   _ADC0CN         DATA 0xe8
0000            192   _PCA0CPL1       DATA 0xe9
0000            193   _PCA0CPH1       DATA 0xea
0000            194   _PCA0CPL2       DATA 0xeb
0000            195   _PCA0CPH2       DATA 0xec
0000            196   _PCA0CPL3       DATA 0xed
0000            197   _PCA0CPH3       DATA 0xee
0000            198   _RSTSRC         DATA 0xef
0000            199   _B              DATA 0xf0
0000            200   _P0MDIN         DATA 0xf1
0000            201   _P1MDIN         DATA 0xf2
0000            202   _P2MDIN         DATA 0xf3
0000            203   _P3MDIN         DATA 0xf4
0000            204   _P4MDIN         DATA 0xf5
0000            205   _EIP1           DATA 0xf6
0000            206   _EIP2           DATA 0xf7
0000            207   _SPI0CN         DATA 0xf8
0000            208   _PCA0L          DATA 0xf9
0000            209   _PCA0H          DATA 0xfa
0000            210   _PCA0CPL0       DATA 0xfb
0000            211   _PCA0CPH0       DATA 0xfc
0000            212   _PCA0CPL4       DATA 0xfd
0000            213   _PCA0CPH4       DATA 0xfe
0000            214   _VDM0CN         DATA 0xff
0000            215   _DPTR           DATA 0x8382
0000            216   _TMR2RL         DATA 0xcbca
0000            217   _TMR3RL         DATA 0x9392
0000            218   _TMR4RL         DATA 0x9392
0000            219   _TMR5RL         DATA 0xcbca
0000            220   _TMR2           DATA 0xcdcc
0000            221   _TMR3           DATA 0x9594
0000            222   _TMR4           DATA 0x9594
0000            223   _TMR5           DATA 0xcdcc
0000            224   _SBRL1          DATA 0xb5b4
0000            225   _ADC0           DATA 0xbebd
0000            226   _ADC0GT         DATA 0xc4c3
0000            227   _ADC0LT         DATA 0xc6c5
0000            228   _PCA0           DATA 0xfaf9
0000            229   _PCA0CP1        DATA 0xeae9
0000            230   _PCA0CP2        DATA 0xeceb
0000            231   _PCA0CP3        DATA 0xeeed
0000            232   _PCA0CP0        DATA 0xfcfb
0000            233   _PCA0CP4        DATA 0xfefd
0000            234   ;--------------------------------------------------------
0000            235   ; special function bits
0000            236   ;--------------------------------------------------------
0000            237   _P0_0           BIT 0x80
0000            238   _P0_1           BIT 0x81
0000            239   _P0_2           BIT 0x82
0000            240   _P0_3           BIT 0x83
0000            241   _P0_4           BIT 0x84
0000            242   _P0_5           BIT 0x85
0000            243   _P0_6           BIT 0x86
0000            244   _P0_7           BIT 0x87
0000            245   _TF1            BIT 0x8f
0000            246   _TR1            BIT 0x8e
0000            247   _TF0            BIT 0x8d
0000            248   _TR0            BIT 0x8c
0000            249   _IE1            BIT 0x8b
0000            250   _IT1            BIT 0x8a
0000            251   _IE0            BIT 0x89
0000            252   _IT0            BIT 0x88
0000            253   _P1_0           BIT 0x90
0000            254   _P1_1           BIT 0x91
0000            255   _P1_2           BIT 0x92
0000            256   _P1_3           BIT 0x93
0000            257   _P1_4           BIT 0x94
0000            258   _P1_5           BIT 0x95
0000            259   _P1_6           BIT 0x96
0000            260   _P1_7           BIT 0x97
0000            261   _S0MODE         BIT 0x9f
0000            262   _SCON0_6        BIT 0x9e
0000            263   _MCE0           BIT 0x9d
0000            264   _REN0           BIT 0x9c
0000            265   _TB80           BIT 0x9b
0000            266   _RB80           BIT 0x9a
0000            267   _TI0            BIT 0x99
0000            268   _RI0            BIT 0x98
0000            269   _SCON_6         BIT 0x9e
0000            270   _MCE            BIT 0x9d
0000            271   _REN            BIT 0x9c
0000            272   _TB8            BIT 0x9b
0000            273   _RB8            BIT 0x9a
0000            274   _TI             BIT 0x99
0000            275   _RI             BIT 0x98
0000            276   _P2_0           BIT 0xa0
0000            277   _P2_1           BIT 0xa1
0000            278   _P2_2           BIT 0xa2
0000            279   _P2_3           BIT 0xa3
0000            280   _P2_4           BIT 0xa4
0000            281   _P2_5           BIT 0xa5
0000            282   _P2_6           BIT 0xa6
0000            283   _P2_7           BIT 0xa7
0000            284   _EA             BIT 0xaf
0000            285   _ESPI0          BIT 0xae
0000            286   _ET2            BIT 0xad
0000            287   _ES0            BIT 0xac
0000            288   _ET1            BIT 0xab
0000            289   _EX1            BIT 0xaa
0000            290   _ET0            BIT 0xa9
0000            291   _EX0            BIT 0xa8
0000            292   _P3_0           BIT 0xb0
0000            293   _P3_1           BIT 0xb1
0000            294   _P3_2           BIT 0xb2
0000            295   _P3_3           BIT 0xb3
0000            296   _P3_4           BIT 0xb4
0000            297   _P3_5           BIT 0xb5
0000            298   _P3_6           BIT 0xb6
0000            299   _P3_7           BIT 0xb7
0000            300   _IP_7           BIT 0xbf
0000            301   _PSPI0          BIT 0xbe
0000            302   _PT2            BIT 0xbd
0000            303   _PS0            BIT 0xbc
0000            304   _PT1            BIT 0xbb
0000            305   _PX1            BIT 0xba
0000            306   _PT0            BIT 0xb9
0000            307   _PX0            BIT 0xb8
0000            308   _MASTER0        BIT 0xc7
0000            309   _TXMODE0        BIT 0xc6
0000            310   _STA0           BIT 0xc5
0000            311   _STO0           BIT 0xc4
0000            312   _ACKRQ0         BIT 0xc3
0000            313   _ARBLOST0       BIT 0xc2
0000            314   _ACK0           BIT 0xc1
0000            315   _SI0            BIT 0xc0
0000            316   _MASTER1        BIT 0xc7
0000            317   _TXMODE1        BIT 0xc6
0000            318   _STA1           BIT 0xc5
0000            319   _STO1           BIT 0xc4
0000            320   _ACKRQ1         BIT 0xc3
0000            321   _ARBLOST1       BIT 0xc2
0000            322   _ACK1           BIT 0xc1
0000            323   _SI1            BIT 0xc0
0000            324   _TF2            BIT 0xcf
0000            325   _TF2H           BIT 0xcf
0000            326   _TF2L           BIT 0xce
0000            327   _TF2LEN         BIT 0xcd
0000            328   _TF2CEN         BIT 0xcc
0000            329   _T2SPLIT        BIT 0xcb
0000            330   _TR2            BIT 0xca
0000            331   _T2CSS          BIT 0xc9
0000            332   _T2XCLK         BIT 0xc8
0000            333   _TF5H           BIT 0xcf
0000            334   _TF5L           BIT 0xce
0000            335   _TF5LEN         BIT 0xcd
0000            336   _TMR5CN_4       BIT 0xcc
0000            337   _T5SPLIT        BIT 0xcb
0000            338   _TR5            BIT 0xca
0000            339   _TMR5CN_1       BIT 0xc9
0000            340   _T5XCLK         BIT 0xc8
0000            341   _CY             BIT 0xd7
0000            342   _AC             BIT 0xd6
0000            343   _F0             BIT 0xd5
0000            344   _RS1            BIT 0xd4
0000            345   _RS0            BIT 0xd3
0000            346   _OV             BIT 0xd2
0000            347   _F1             BIT 0xd1
0000            348   _PARITY         BIT 0xd0
0000            349   _CF             BIT 0xdf
0000            350   _CR             BIT 0xde
0000            351   _PCA0CN_5       BIT 0xde
0000            352   _CCF4           BIT 0xdc
0000            353   _CCF3           BIT 0xdb
0000            354   _CCF2           BIT 0xda
0000            355   _CCF1           BIT 0xd9
0000            356   _CCF0           BIT 0xd8
0000            357   _ACC_7          BIT 0xe7
0000            358   _ACC_6          BIT 0xe6
0000            359   _ACC_5          BIT 0xe5
0000            360   _ACC_4          BIT 0xe4
0000            361   _ACC_3          BIT 0xe3
0000            362   _ACC_2          BIT 0xe2
0000            363   _ACC_1          BIT 0xe1
0000            364   _ACC_0          BIT 0xe0
0000            365   _AD0EN          BIT 0xef
0000            366   _AD0TM          BIT 0xee
0000            367   _AD0INT         BIT 0xed
0000            368   _AD0BUSY        BIT 0xec
0000            369   _AD0WINT        BIT 0xeb
0000            370   _AD0CM2         BIT 0xea
0000            371   _AD0CM1         BIT 0xe9
0000            372   _AD0CM0         BIT 0xe8
0000            373   _B_7            BIT 0xf7
0000            374   _B_6            BIT 0xf6
0000            375   _B_5            BIT 0xf5
0000            376   _B_4            BIT 0xf4
0000            377   _B_3            BIT 0xf3
0000            378   _B_2            BIT 0xf2
0000            379   _B_1            BIT 0xf1
0000            380   _B_0            BIT 0xf0
0000            381   _SPIF           BIT 0xff
0000            382   _WCOL           BIT 0xfe
0000            383   _MODF           BIT 0xfd
0000            384   _RXOVRN         BIT 0xfc
0000            385   _NSSMD1         BIT 0xfb
0000            386   _NSSMD0         BIT 0xfa
0000            387   _TXBMT          BIT 0xf9
0000            388   _SPIEN          BIT 0xf8
0000            389   ;--------------------------------------------------------
0000            390   ; overlayable register banks
0000            391   ;--------------------------------------------------------
0000            392            rbank0 segment data overlay
0000            393   ;--------------------------------------------------------
0000            394   ; internal ram data
0000            395   ;--------------------------------------------------------
0000            396            rseg R_DSEG
0000            397   _pwm_count:
0000            398            ds 1
0001            399   _power:
0001            400            ds 1
0002            401   _pwm_BLU0:
0002            402            ds 1
0003            403   _pwm_BLU1:
0003            404            ds 1
0004            405   _pwm_RED0:
0004            406            ds 1
0005            407   _pwm_RED1:
0005            408            ds 1
0006            409   _dirout:
0006            410            ds 1
0007            411   _overflow_count:
0007            412            ds 1
0008            413   _frequency:
0008            414            ds 4
000C            415   _mode:
000C            416            ds 2
000E            417   _FreqBuffer:
000E            418            ds 16
001E            419   _WriteCount:
001E            420            ds 1
001F            421   _millisecond:
001F            422            ds 2
0021            423   _freqstring:
0021            424            ds 10
002B            425   _LCDprint_PARM_2:
002B            426            ds 1
002C            427   _DetermineMode_ForwardSigCount_1_86:
002C            428            ds 1
002D            429   _DetermineMode_StopSigCount_1_86:
002D            430            ds 1
002E            431   _MotorControl_IndVolts_1_93:
002E            432            ds 3
0031            433   _MotorControl_sloc0_1_0:
0031            434            ds 3
0034            435   _MotorControl_sloc1_1_0:
0034            436            ds 4
0038            437   _MotorControl_sloc2_1_0:
0038            438            ds 4
003C            439   _main_IndVolts_1_109:
003C            440            ds 12
0048            441   ;--------------------------------------------------------
0048            442   ; overlayable items in internal ram 
0048            443   ;--------------------------------------------------------
0000            444            rseg    R_OSEG
0000            445            rseg    R_OSEG
0000            446   _InitPinADC_PARM_2:
0000            447            ds 1
0001            448            rseg    R_OSEG
0001            449   ;--------------------------------------------------------
0001            450   ; indirectly addressable internal ram data
0001            451   ;--------------------------------------------------------
0000            452            rseg R_ISEG
0000            453   ;--------------------------------------------------------
0000            454   ; absolute internal ram data
0000            455   ;--------------------------------------------------------
0000            456            DSEG
0000            457   ;--------------------------------------------------------
0000            458   ; bit data
0000            459   ;--------------------------------------------------------
0000            460            rseg R_BSEG
0000            461   _Timer2_ISR_sloc0_1_0:
0000            462            DBIT    1
0001            463   _LCDprint_PARM_3:
0001            464            DBIT    1
0002            465   ;--------------------------------------------------------
0002            466   ; paged external ram data
0002            467   ;--------------------------------------------------------
0000            468            rseg R_PSEG
0000            469   ;--------------------------------------------------------
0000            470   ; external ram data
0000            471   ;--------------------------------------------------------
0000            472            rseg R_XSEG
0000            473   ;--------------------------------------------------------
0000            474   ; absolute external ram data
0000            475   ;--------------------------------------------------------
0000            476            XSEG
0000            477   ;--------------------------------------------------------
0000            478   ; external initialized ram data
0000            479   ;--------------------------------------------------------
0000            480            rseg R_IXSEG
0000            481            rseg R_HOME
0000            482            rseg R_GSINIT
0000            483            rseg R_CSEG
0000            484   ;--------------------------------------------------------
0000            485   ; Reset entry point and interrupt vectors
0000            486   ;--------------------------------------------------------
0000            487            CSEG at 0x0000
0000 020100     488            ljmp    _crt0
002B            489            CSEG at 0x002b
002B 020100     490            ljmp    _Timer2_ISR
002E            491   ;--------------------------------------------------------
002E            492   ; global & static initialisations
002E            493   ;--------------------------------------------------------
0000            494            rseg R_HOME
0000            495            rseg R_GSINIT
0000            496            rseg R_GSINIT
0000            497   ;--------------------------------------------------------
0000            498   ; data variables initialization
0000            499   ;--------------------------------------------------------
0000            500            rseg R_DINIT
0000            501   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:57: volatile unsigned char pwm_count=0;
0000 756800     502            mov     _pwm_count,#0x00
0003            503   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:58: volatile unsigned char power=30;
0003 75281E     504            mov     _power,#0x1E
0006            505   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:59: volatile unsigned char pwm_BLU0=0;
0006 75E800     506            mov     _pwm_BLU0,#0x00
0009            507   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:60: volatile unsigned char pwm_BLU1=0;
0009 75A800     508            mov     _pwm_BLU1,#0x00
000C            509   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:61: volatile unsigned char pwm_RED0=0;
000C 756800     510            mov     _pwm_RED0,#0x00
000F            511   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:62: volatile unsigned char pwm_RED1=0;
000F 752800     512            mov     _pwm_RED1,#0x00
0012            513   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:63: volatile unsigned char dirout=0;
0012 75E800     514            mov     _dirout,#0x00
0015            515   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:64: volatile unsigned char overflow_count=0;
0015 75A800     516            mov     _overflow_count,#0x00
0018            517   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:65: volatile float frequency=0;
0018 758000     518            mov     _frequency,#0x00
001B 758100     519            mov     (_frequency + 1),#0x00
001E 758200     520            mov     (_frequency + 2),#0x00
0021 758300     521            mov     (_frequency + 3),#0x00
0024            522   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:66: unsigned int mode=FORWARD;
0024 75C003     523            mov     _mode,#0x03
0027 E4         524            clr     a
0028 F5C1       525            mov     (_mode + 1),a
002A            526   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:67: volatile float FreqBuffer[4]={0,0,0,0};
002A 758000     527            mov     _FreqBuffer,#0x00
002D 758100     528            mov     (_FreqBuffer + 1),#0x00
0030 758200     529            mov     (_FreqBuffer + 2),#0x00
0033 758300     530            mov     (_FreqBuffer + 3),#0x00
0036 758400     531            mov     (_FreqBuffer + 0x0004),#0x00
0039 758500     532            mov     ((_FreqBuffer + 0x0004) + 1),#0x00
003C 758600     533            mov     ((_FreqBuffer + 0x0004) + 2),#0x00
003F 758700     534            mov     ((_FreqBuffer + 0x0004) + 3),#0x00
0042 758800     535            mov     (_FreqBuffer + 0x0008),#0x00
0045 758900     536            mov     ((_FreqBuffer + 0x0008) + 1),#0x00
0048 758A00     537            mov     ((_FreqBuffer + 0x0008) + 2),#0x00
004B 758B00     538            mov     ((_FreqBuffer + 0x0008) + 3),#0x00
004E 758C00     539            mov     (_FreqBuffer + 0x000c),#0x00
0051 758D00     540            mov     ((_FreqBuffer + 0x000c) + 1),#0x00
0054 758E00     541            mov     ((_FreqBuffer + 0x000c) + 2),#0x00
0057 758F00     542            mov     ((_FreqBuffer + 0x000c) + 3),#0x00
005A            543   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:68: unsigned char WriteCount = 0;
005A 754000     544            mov     _WriteCount,#0x00
005D            545   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:69: unsigned int millisecond=0;
005D E4         546            clr     a
005E F500       547            mov     _millisecond,a
0060 F501       548            mov     (_millisecond + 1),a
0062            549            ; The linker places a 'ret' at the end of segment R_DINIT.
0062            550   ;--------------------------------------------------------
0062            551   ; code
0062            552   ;--------------------------------------------------------
0000            553            rseg R_CSEG
0000            554   ;------------------------------------------------------------
0000            555   ;Allocation info for local variables in function '_c51_external_startup'
0000            556   ;------------------------------------------------------------
0000            557   ;------------------------------------------------------------
0000            558   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:75: char _c51_external_startup (void)
0000            559   ;        -----------------------------------------
0000            560   ;         function _c51_external_startup
0000            561   ;        -----------------------------------------
0000            562   __c51_external_startup:
0000            563            using   0
0000            564   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:77: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     565            anl     _PCA0MD,#0xBF
0003            566   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:78: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     567            mov     _VDM0CN,#0x80
0006            568   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:79: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     569            mov     _RSTSRC,#0x06
0009            570   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:87: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     571            orl     _CLKSEL,#0x03
000C            572   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:91: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     573            orl     _OSCICN,#0x03
000F            574   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:94: SCON0 = 0x10;
000F 759810     575            mov     _SCON0,#0x10
0012            576   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:96: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     577            mov     _TH1,#0x30
0015            578   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:97: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     579            anl     _CKCON,#0xF4
0018            580   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:98: CKCON |=  0x08;
0018 438E08     581            orl     _CKCON,#0x08
001B            582   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:111: TL1 = TH1;      // Init Timer1
001B 858D8B     583            mov     _TL1,_TH1
001E            584   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:112: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     585            anl     _TMOD,#0x0F
0021            586   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:113: TMOD |=  0x20;
0021 438920     587            orl     _TMOD,#0x20
0024            588   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:114: TR1 = 1; // START Timer1
0024 D28E       589            setb    _TR1
0026            590   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:115: TI = 1;  // Indicate TX0 ready
0026 D299       591            setb    _TI
0028            592   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:118: P2MDOUT|=0b_0000_0011;
0028 43A603     593            orl     _P2MDOUT,#0x03
002B            594   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:119: P0MDOUT |= 0x01;  // set P0.0 and P0.4 as push-pull outputs
002B 43A401     595            orl     _P0MDOUT,#0x01
002E            596   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:120: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)
002E 75E101     597            mov     _XBR0,#0x01
0031            598   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:121: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     599            mov     _XBR1,#0x40
0034            600   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:123: return 0;
0034 758200     601            mov     dpl,#0x00
0037 22         602            ret
0038            603   ;------------------------------------------------------------
0038            604   ;Allocation info for local variables in function 'Timer3us'
0038            605   ;------------------------------------------------------------
0038            606   ;us                        Allocated to registers r2 
0038            607   ;i                         Allocated to registers r3 
0038            608   ;------------------------------------------------------------
0038            609   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:130: void Timer3us(unsigned char us)
0038            610   ;        -----------------------------------------
0038            611   ;         function Timer3us
0038            612   ;        -----------------------------------------
0038            613   _Timer3us:
0038 AA82       614            mov     r2,dpl
003A            615   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:135: CKCON|=0b_0100_0000;
003A 438E40     616            orl     _CKCON,#0x40
003D            617   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:137: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
003D 7592D0     618            mov     _TMR3RL,#0xD0
0040 7593FF     619            mov     (_TMR3RL >> 8),#0xFF
0043            620   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:138: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0043 859294     621            mov     _TMR3,_TMR3RL
0046 859395     622            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0049            623   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:140: TMR3CN = 0x04;                 // Sart Timer3 and clear overflow flag
0049 759104     624            mov     _TMR3CN,#0x04
004C            625   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:141: for (i = 0; i < us; i++)       // Count <us> overflows
004C 7B00       626            mov     r3,#0x00
004E            627   L003004?:
004E C3         628            clr     c
004F EB         629            mov     a,r3
0050 9A         630            subb    a,r2
0051 5001       631            jnc     L003007?
0053            632   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:143: while (!(TMR3CN & 0x80));  // Wait for overflow
0053            633   L003001?:
0053 E591       634            mov     a,_TMR3CN
0055 30E7C8     635            jnb     acc.7,L003001?
0058            636   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:144: TMR3CN &= ~(0x80);         // Clear overflow indicator
0058 53917F     637            anl     _TMR3CN,#0x7F
005B            638   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:141: for (i = 0; i < us; i++)       // Count <us> overflows
005B 0B         639            inc     r3
005C 8001       640            sjmp    L003004?
005E            641   L003007?:
005E            642   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:146: TMR3CN = 0 ;                   // Stop Timer3 and clear overflow flag
005E 759100     643            mov     _TMR3CN,#0x00
0061 22         644            ret
0062            645   ;------------------------------------------------------------
0062            646   ;Allocation info for local variables in function 'waitms'
0062            647   ;------------------------------------------------------------
0062            648   ;ms                        Allocated to registers r2 r3 
0062            649   ;j                         Allocated to registers r2 r3 
0062            650   ;------------------------------------------------------------
0062            651   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:153: void waitms (unsigned int ms)
0062            652   ;        -----------------------------------------
0062            653   ;         function waitms
0062            654   ;        -----------------------------------------
0062            655   _waitms:
0062 AA82       656            mov     r2,dpl
0064 AB83       657            mov     r3,dph
0066            658   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:156: for(j=ms; j!=0; j--)
0066            659   L004001?:
0066 BA00C8     660            cjne    r2,#0x00,L004010?
0069 BB00C8     661            cjne    r3,#0x00,L004010?
006C 22         662            ret
006D            663   L004010?:
006D            664   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:158: Timer3us(249);
006D 7582F9     665            mov     dpl,#0xF9
0070 C002       666            push    ar2
0072 C003       667            push    ar3
0074 120100     668            lcall   _Timer3us
0077            669   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:159: Timer3us(249);
0077 7582F9     670            mov     dpl,#0xF9
007A 120100     671            lcall   _Timer3us
007D            672   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:160: Timer3us(249);
007D 7582F9     673            mov     dpl,#0xF9
0080 120100     674            lcall   _Timer3us
0083            675   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:161: Timer3us(250);
0083 7582FA     676            mov     dpl,#0xFA
0086 120100     677            lcall   _Timer3us
0089 D003       678            pop     ar3
008B D002       679            pop     ar2
008D            680   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:156: for(j=ms; j!=0; j--)
008D 1A         681            dec     r2
008E BAFF08     682            cjne    r2,#0xff,L004011?
0091 1B         683            dec     r3
0092            684   L004011?:
0092 8001       685            sjmp    L004001?
0094            686   ;------------------------------------------------------------
0094            687   ;Allocation info for local variables in function 'TIMER0_Init'
0094            688   ;------------------------------------------------------------
0094            689   ;------------------------------------------------------------
0094            690   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:167: void TIMER0_Init(void)
0094            691   ;        -----------------------------------------
0094            692   ;         function TIMER0_Init
0094            693   ;        -----------------------------------------
0094            694   _TIMER0_Init:
0094            695   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:169: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
0094 5389F0     696            anl     _TMOD,#0xF0
0097            697   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:170: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
0097 438901     698            orl     _TMOD,#0x01
009A            699   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:171: TR0=0; // Stop Timer/Counter 0
009A C28C       700            clr     _TR0
009C 22         701            ret
009D            702   ;------------------------------------------------------------
009D            703   ;Allocation info for local variables in function 'TIMER2_Init'
009D            704   ;------------------------------------------------------------
009D            705   ;------------------------------------------------------------
009D            706   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:177: void TIMER2_Init(void)
009D            707   ;        -----------------------------------------
009D            708   ;         function TIMER2_Init
009D            709   ;        -----------------------------------------
009D            710   _TIMER2_Init:
009D            711   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:179: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
009D 75C800     712            mov     _TMR2CN,#0x00
00A0            713   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:180: CKCON|=0b_0001_0000;
00A0 438E10     714            orl     _CKCON,#0x10
00A3            715   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:181: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
00A3 75CA78     716            mov     _TMR2RL,#0x78
00A6 75CBEC     717            mov     (_TMR2RL >> 8),#0xEC
00A9            718   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:182: TMR2=0xffff;   // Set to reload immediately
00A9 75CCFF     719            mov     _TMR2,#0xFF
00AC 75CDFF     720            mov     (_TMR2 >> 8),#0xFF
00AF            721   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:183: ET2=1;         // Enable Timer2 interrupts
00AF D2AD       722            setb    _ET2
00B1            723   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:184: TR2=1;         // Start Timer2
00B1 D2CA       724            setb    _TR2
00B3 22         725            ret
00B4            726   ;------------------------------------------------------------
00B4            727   ;Allocation info for local variables in function 'InitADC'
00B4            728   ;------------------------------------------------------------
00B4            729   ;------------------------------------------------------------
00B4            730   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:190: void InitADC (void)
00B4            731   ;        -----------------------------------------
00B4            732   ;         function InitADC
00B4            733   ;        -----------------------------------------
00B4            734   _InitADC:
00B4            735   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:193: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
00B4 75BCF8     736            mov     _ADC0CF,#0xF8
00B7            737   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:194: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
00B7 75E880     738            mov     _ADC0CN,#0x80
00BA            739   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:195: REF0CN = 0b_0000_1000; //Select VDD as the voltage reference for the converter
00BA 75D108     740            mov     _REF0CN,#0x08
00BD 22         741            ret
00BE            742   ;------------------------------------------------------------
00BE            743   ;Allocation info for local variables in function 'InitPinADC'
00BE            744   ;------------------------------------------------------------
00BE            745   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00BE            746   ;portno                    Allocated to registers r2 
00BE            747   ;mask                      Allocated to registers r3 
00BE            748   ;------------------------------------------------------------
00BE            749   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:202: void InitPinADC (unsigned char portno, unsigned char pinno)
00BE            750   ;        -----------------------------------------
00BE            751   ;         function InitPinADC
00BE            752   ;        -----------------------------------------
00BE            753   _InitPinADC:
00BE AA82       754            mov     r2,dpl
00C0            755   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:206: mask=1<<pinno;
00C0 8550F0     756            mov     b,_InitPinADC_PARM_2
00C3 05F0       757            inc     b
00C5 7401       758            mov     a,#0x01
00C7 8001       759            sjmp    L008012?
00C9            760   L008010?:
00C9 25E0       761            add     a,acc
00CB            762   L008012?:
00CB D5F0C8     763            djnz    b,L008010?
00CE FB         764            mov     r3,a
00CF            765   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:208: switch (portno)
00CF EA         766            mov     a,r2
00D0 24FC       767            add     a,#0xff - 0x03
00D2 4001       768            jc      L008007?
00D4 EA         769            mov     a,r2
00D5 2A         770            add     a,r2
00D6 2A         771            add     a,r2
00D7 90A248     772            mov     dptr,#L008014?
00DA 73         773            jmp     @a+dptr
00DB            774   L008014?:
00DB 020100     775            ljmp    L008001?
00DE 020100     776            ljmp    L008002?
00E1 020100     777            ljmp    L008003?
00E4 020100     778            ljmp    L008004?
00E7            779   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:210: case 0:
00E7            780   L008001?:
00E7            781   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:211: P0MDIN &= (~mask); // Set pin as analog input
00E7 EB         782            mov     a,r3
00E8 F4         783            cpl     a
00E9 52F1       784            anl     _P0MDIN,a
00EB            785   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:212: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00EB EB         786            mov     a,r3
00EC 42D4       787            orl     _P0SKIP,a
00EE            788   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:213: break;
00EE            789   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:214: case 1:
00EE 22         790            ret
00EF            791   L008002?:
00EF            792   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:215: P1MDIN &= (~mask); // Set pin as analog input
00EF EB         793            mov     a,r3
00F0 F4         794            cpl     a
00F1 52F2       795            anl     _P1MDIN,a
00F3            796   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:216: P1SKIP |= mask; // Skip Crossbar decoding for this pin
00F3 EB         797            mov     a,r3
00F4 42D5       798            orl     _P1SKIP,a
00F6            799   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:217: break;
00F6            800   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:218: case 2:
00F6 22         801            ret
00F7            802   L008003?:
00F7            803   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:219: P2MDIN &= (~mask); // Set pin as analog input
00F7 EB         804            mov     a,r3
00F8 F4         805            cpl     a
00F9 52F3       806            anl     _P2MDIN,a
00FB            807   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:220: P2SKIP |= mask; // Skip Crossbar decoding for this pin
00FB EB         808            mov     a,r3
00FC 42D6       809            orl     _P2SKIP,a
00FE            810   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:221: break;
00FE            811   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:222: case 3:
00FE 22         812            ret
00FF            813   L008004?:
00FF            814   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:223: P3MDIN &= (~mask); // Set pin as analog input
00FF EB         815            mov     a,r3
0100 F4         816            cpl     a
0101 FA         817            mov     r2,a
0102 52F4       818            anl     _P3MDIN,a
0104            819   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:224: P3SKIP |= mask; // Skip Crossbar decoding for this pin
0104 EB         820            mov     a,r3
0105 42DF       821            orl     _P3SKIP,a
0107            822   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:228: }
0107            823   L008007?:
0107 22         824            ret
0108            825   ;------------------------------------------------------------
0108            826   ;Allocation info for local variables in function 'ADC_at_Pin'
0108            827   ;------------------------------------------------------------
0108            828   ;pin                       Allocated to registers 
0108            829   ;------------------------------------------------------------
0108            830   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:235: unsigned int ADC_at_Pin(unsigned char pin)
0108            831   ;        -----------------------------------------
0108            832   ;         function ADC_at_Pin
0108            833   ;        -----------------------------------------
0108            834   _ADC_at_Pin:
0108 8582BB     835            mov     _AMX0P,dpl
010B            836   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:238: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
010B 75BA1F     837            mov     _AMX0N,#0x1F
010E            838   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:240: AD0BUSY=1;
010E D2EC       839            setb    _AD0BUSY
0110            840   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:241: while (AD0BUSY); // Wait for dummy conversion to finish
0110            841   L009001?:
0110 20EC88     842            jb      _AD0BUSY,L009001?
0113            843   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:243: AD0BUSY = 1;
0113 D2EC       844            setb    _AD0BUSY
0115            845   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:244: while (AD0BUSY); // Wait for conversion to complete
0115            846   L009004?:
0115 20ECC8     847            jb      _AD0BUSY,L009004?
0118            848   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:245: return (ADC0L+(ADC0H*0x100));
0118 AABD       849            mov     r2,_ADC0L
011A 7B00       850            mov     r3,#0x00
011C ADBE       851            mov     r5,_ADC0H
011E 7C00       852            mov     r4,#0x00
0120 EC         853            mov     a,r4
0121 2A         854            add     a,r2
0122 F582       855            mov     dpl,a
0124 ED         856            mov     a,r5
0125 3B         857            addc    a,r3
0126 F583       858            mov     dph,a
0128 22         859            ret
0129            860   ;------------------------------------------------------------
0129            861   ;Allocation info for local variables in function 'Volts_at_Pin'
0129            862   ;------------------------------------------------------------
0129            863   ;pin                       Allocated to registers r2 
0129            864   ;------------------------------------------------------------
0129            865   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:252: float Volts_at_Pin(unsigned char pin)
0129            866   ;        -----------------------------------------
0129            867   ;         function Volts_at_Pin
0129            868   ;        -----------------------------------------
0129            869   _Volts_at_Pin:
0129            870   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:254: return ((ADC_at_Pin(pin)*VDD_onboard)/1024.0);
0129 120100     871            lcall   _ADC_at_Pin
012C 120100     872            lcall   ___uint2fs
012F AA82       873            mov     r2,dpl
0131 AB83       874            mov     r3,dph
0133 ACF0       875            mov     r4,b
0135 FD         876            mov     r5,a
0136 C002       877            push    ar2
0138 C003       878            push    ar3
013A C004       879            push    ar4
013C C005       880            push    ar5
013E 90DD2F     881            mov     dptr,#0xDD2F
0141 75F054     882            mov     b,#0x54
0144 7440       883            mov     a,#0x40
0146 120100     884            lcall   ___fsmul
0149 AA82       885            mov     r2,dpl
014B AB83       886            mov     r3,dph
014D ACF0       887            mov     r4,b
014F FD         888            mov     r5,a
0150 E581       889            mov     a,sp
0152 24FC       890            add     a,#0xfc
0154 F581       891            mov     sp,a
0156 E4         892            clr     a
0157 C0E0       893            push    acc
0159 C0E0       894            push    acc
015B 7480       895            mov     a,#0x80
015D C0E0       896            push    acc
015F 7444       897            mov     a,#0x44
0161 C0E0       898            push    acc
0163 8A82       899            mov     dpl,r2
0165 8B83       900            mov     dph,r3
0167 8CF0       901            mov     b,r4
0169 ED         902            mov     a,r5
016A 120100     903            lcall   ___fsdiv
016D AA82       904            mov     r2,dpl
016F AB83       905            mov     r3,dph
0171 ACF0       906            mov     r4,b
0173 FD         907            mov     r5,a
0174 E581       908            mov     a,sp
0176 24FC       909            add     a,#0xfc
0178 F581       910            mov     sp,a
017A 8A82       911            mov     dpl,r2
017C 8B83       912            mov     dph,r3
017E 8CF0       913            mov     b,r4
0180 ED         914            mov     a,r5
0181 22         915            ret
0182            916   ;------------------------------------------------------------
0182            917   ;Allocation info for local variables in function 'Timer2_ISR'
0182            918   ;------------------------------------------------------------
0182            919   ;------------------------------------------------------------
0182            920   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:261: void Timer2_ISR (void) interrupt 5
0182            921   ;        -----------------------------------------
0182            922   ;         function Timer2_ISR
0182            923   ;        -----------------------------------------
0182            924   _Timer2_ISR:
0182 C0E0       925            push    acc
0184 C0D0       926            push    psw
0186 75D000     927            mov     psw,#0x00
0189            928   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:263: TF2H = 0; // Clear Timer2 interrupt flag
0189 C2CF       929            clr     _TF2H
018B            930   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:265: pwm_count++;
018B 0568       931            inc     _pwm_count
018D            932   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:266: if(pwm_count>100) pwm_count=0;
018D E568       933            mov     a,_pwm_count
018F 249B       934            add     a,#0xff - 0x64
0191 5001       935            jnc     L011002?
0193 756800     936            mov     _pwm_count,#0x00
0196            937   L011002?:
0196            938   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:268: BLU0=pwm_count>pwm_BLU0?0:1;
0196 C3         939            clr     c
0197 E5E8       940            mov     a,_pwm_BLU0
0199 9568       941            subb    a,_pwm_count
019B 9288       942            mov  _Timer2_ISR_sloc0_1_0,c
019D B3         943            cpl     c
019E 92A5       944            mov     _P2_5,c
01A0            945   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:269: BLU1=pwm_count>pwm_BLU1?0:1;
01A0 C3         946            clr     c
01A1 E5A8       947            mov     a,_pwm_BLU1
01A3 9568       948            subb    a,_pwm_count
01A5 9288       949            mov  _Timer2_ISR_sloc0_1_0,c
01A7 B3         950            cpl     c
01A8 92A2       951            mov     _P2_2,c
01AA            952   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:271: RED0=pwm_count>pwm_RED0?0:1;
01AA C3         953            clr     c
01AB E568       954            mov     a,_pwm_RED0
01AD 9568       955            subb    a,_pwm_count
01AF 9288       956            mov  _Timer2_ISR_sloc0_1_0,c
01B1 B3         957            cpl     c
01B2 92A3       958            mov     _P2_3,c
01B4            959   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:272: RED1=pwm_count>pwm_RED1?0:1;
01B4 C3         960            clr     c
01B5 E528       961            mov     a,_pwm_RED1
01B7 9568       962            subb    a,_pwm_count
01B9 9288       963            mov  _Timer2_ISR_sloc0_1_0,c
01BB B3         964            cpl     c
01BC 92A4       965            mov     _P2_4,c
01BE D0D0       966            pop     psw
01C0 D0E0       967            pop     acc
01C2 32         968            reti
01C3            969   ;        eliminated unneeded push/pop dpl
01C3            970   ;        eliminated unneeded push/pop dph
01C3            971   ;        eliminated unneeded push/pop b
01C3            972   ;------------------------------------------------------------
01C3            973   ;Allocation info for local variables in function 'LCD_pulse'
01C3            974   ;------------------------------------------------------------
01C3            975   ;------------------------------------------------------------
01C3            976   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:278: void LCD_pulse (void)
01C3            977   ;        -----------------------------------------
01C3            978   ;         function LCD_pulse
01C3            979   ;        -----------------------------------------
01C3            980   _LCD_pulse:
01C3            981   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:280: LCD_E=1;
01C3 D295       982            setb    _P1_5
01C5            983   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:281: Timer3us(40);
01C5 758228     984            mov     dpl,#0x28
01C8 120100     985            lcall   _Timer3us
01CB            986   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:282: LCD_E=0;
01CB C295       987            clr     _P1_5
01CD 22         988            ret
01CE            989   ;------------------------------------------------------------
01CE            990   ;Allocation info for local variables in function 'LCD_byte'
01CE            991   ;------------------------------------------------------------
01CE            992   ;x                         Allocated to registers r2 
01CE            993   ;------------------------------------------------------------
01CE            994   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:285: void LCD_byte (unsigned char x)
01CE            995   ;        -----------------------------------------
01CE            996   ;         function LCD_byte
01CE            997   ;        -----------------------------------------
01CE            998   _LCD_byte:
01CE AA82       999            mov     r2,dpl
01D0           1000   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:288: ACC=x; //Send high nible
01D0 8AE0      1001            mov     _ACC,r2
01D2           1002   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:289: LCD_D7=ACC_7;
01D2 A2E7      1003            mov     c,_ACC_7
01D4 9290      1004            mov     _P1_0,c
01D6           1005   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:290: LCD_D6=ACC_6;
01D6 A2E6      1006            mov     c,_ACC_6
01D8 9291      1007            mov     _P1_1,c
01DA           1008   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:291: LCD_D5=ACC_5;
01DA A2E5      1009            mov     c,_ACC_5
01DC 9292      1010            mov     _P1_2,c
01DE           1011   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:292: LCD_D4=ACC_4;
01DE A2E4      1012            mov     c,_ACC_4
01E0 9293      1013            mov     _P1_3,c
01E2           1014   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:293: LCD_pulse();
01E2 C002      1015            push    ar2
01E4 120100    1016            lcall   _LCD_pulse
01E7           1017   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:294: Timer3us(40);
01E7 758228    1018            mov     dpl,#0x28
01EA 120100    1019            lcall   _Timer3us
01ED D002      1020            pop     ar2
01EF           1021   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:295: ACC=x; //Send low nible
01EF 8AE0      1022            mov     _ACC,r2
01F1           1023   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:296: LCD_D7=ACC_3;
01F1 A2E3      1024            mov     c,_ACC_3
01F3 9290      1025            mov     _P1_0,c
01F5           1026   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:297: LCD_D6=ACC_2;
01F5 A2E2      1027            mov     c,_ACC_2
01F7 9291      1028            mov     _P1_1,c
01F9           1029   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:298: LCD_D5=ACC_1;
01F9 A2E1      1030            mov     c,_ACC_1
01FB 9292      1031            mov     _P1_2,c
01FD           1032   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:299: LCD_D4=ACC_0;
01FD A2E0      1033            mov     c,_ACC_0
01FF 9293      1034            mov     _P1_3,c
0201           1035   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:300: LCD_pulse();
0201 020100    1036            ljmp    _LCD_pulse
0204           1037   ;------------------------------------------------------------
0204           1038   ;Allocation info for local variables in function 'WriteData'
0204           1039   ;------------------------------------------------------------
0204           1040   ;x                         Allocated to registers r2 
0204           1041   ;------------------------------------------------------------
0204           1042   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:303: void WriteData (unsigned char x)
0204           1043   ;        -----------------------------------------
0204           1044   ;         function WriteData
0204           1045   ;        -----------------------------------------
0204           1046   _WriteData:
0204 AA82      1047            mov     r2,dpl
0206           1048   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:305: LCD_RS=1;
0206 D2A1      1049            setb    _P2_1
0208           1050   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:306: LCD_byte(x);
0208 8A82      1051            mov     dpl,r2
020A 120100    1052            lcall   _LCD_byte
020D           1053   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:307: waitms(2);
020D 900002    1054            mov     dptr,#0x0002
0210 020100    1055            ljmp    _waitms
0213           1056   ;------------------------------------------------------------
0213           1057   ;Allocation info for local variables in function 'WriteCommand'
0213           1058   ;------------------------------------------------------------
0213           1059   ;x                         Allocated to registers r2 
0213           1060   ;------------------------------------------------------------
0213           1061   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:310: void WriteCommand (unsigned char x)
0213           1062   ;        -----------------------------------------
0213           1063   ;         function WriteCommand
0213           1064   ;        -----------------------------------------
0213           1065   _WriteCommand:
0213 AA82      1066            mov     r2,dpl
0215           1067   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:312: LCD_RS=0;
0215 C2A1      1068            clr     _P2_1
0217           1069   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:313: LCD_byte(x);
0217 8A82      1070            mov     dpl,r2
0219 120100    1071            lcall   _LCD_byte
021C           1072   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:314: waitms(5);
021C 900005    1073            mov     dptr,#0x0005
021F 020100    1074            ljmp    _waitms
0222           1075   ;------------------------------------------------------------
0222           1076   ;Allocation info for local variables in function 'LCD_4BIT'
0222           1077   ;------------------------------------------------------------
0222           1078   ;------------------------------------------------------------
0222           1079   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:317: void LCD_4BIT (void)
0222           1080   ;        -----------------------------------------
0222           1081   ;         function LCD_4BIT
0222           1082   ;        -----------------------------------------
0222           1083   _LCD_4BIT:
0222           1084   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:319: LCD_E=0; // Resting state of LCD's enable is zero
0222 C295      1085            clr     _P1_5
0224           1086   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:320: LCD_RW=0; // We are only writing to the LCD in this program
0224 C297      1087            clr     _P1_7
0226           1088   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:321: waitms(20);
0226 900014    1089            mov     dptr,#0x0014
0229 120100    1090            lcall   _waitms
022C           1091   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:323: WriteCommand(0x33);
022C 758233    1092            mov     dpl,#0x33
022F 120100    1093            lcall   _WriteCommand
0232           1094   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:324: WriteCommand(0x33);
0232 758233    1095            mov     dpl,#0x33
0235 120100    1096            lcall   _WriteCommand
0238           1097   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:325: WriteCommand(0x32); // Change to 4-bit mode
0238 758232    1098            mov     dpl,#0x32
023B 120100    1099            lcall   _WriteCommand
023E           1100   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:328: WriteCommand(0x28);
023E 758228    1101            mov     dpl,#0x28
0241 120100    1102            lcall   _WriteCommand
0244           1103   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:329: WriteCommand(0x0c);
0244 75820C    1104            mov     dpl,#0x0C
0247 120100    1105            lcall   _WriteCommand
024A           1106   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:330: WriteCommand(0x01); // Clear screen command (takes some time)
024A 758201    1107            mov     dpl,#0x01
024D 120100    1108            lcall   _WriteCommand
0250           1109   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:331: waitms(20); // Wait for clear screen command to finsih.
0250 900014    1110            mov     dptr,#0x0014
0253 020100    1111            ljmp    _waitms
0256           1112   ;------------------------------------------------------------
0256           1113   ;Allocation info for local variables in function 'LCDprint'
0256           1114   ;------------------------------------------------------------
0256           1115   ;line                      Allocated with name '_LCDprint_PARM_2'
0256           1116   ;string                    Allocated to registers r2 r3 r4 
0256           1117   ;j                         Allocated to registers r5 r6 
0256           1118   ;------------------------------------------------------------
0256           1119   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:334: void LCDprint(char * string, unsigned char line, bit clear)
0256           1120   ;        -----------------------------------------
0256           1121   ;         function LCDprint
0256           1122   ;        -----------------------------------------
0256           1123   _LCDprint:
0256 AA82      1124            mov     r2,dpl
0258 AB83      1125            mov     r3,dph
025A ACF0      1126            mov     r4,b
025C           1127   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:338: WriteCommand(line==2?0xc0:0x80);
025C 7402      1128            mov     a,#0x02
025E B58088    1129            cjne    a,_LCDprint_PARM_2,L017013?
0261 7DC0      1130            mov     r5,#0xC0
0263 8001      1131            sjmp    L017014?
0265           1132   L017013?:
0265 7D80      1133            mov     r5,#0x80
0267           1134   L017014?:
0267 8D82      1135            mov     dpl,r5
0269 C002      1136            push    ar2
026B C003      1137            push    ar3
026D C004      1138            push    ar4
026F 120100    1139            lcall   _WriteCommand
0272           1140   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:339: waitms(5);
0272 900005    1141            mov     dptr,#0x0005
0275 120100    1142            lcall   _waitms
0278 D004      1143            pop     ar4
027A D003      1144            pop     ar3
027C D002      1145            pop     ar2
027E           1146   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:340: for(j=0; string[j]!=0; j++)      WriteData(string[j]);// Write the message
027E 7D00      1147            mov     r5,#0x00
0280 7E00      1148            mov     r6,#0x00
0282           1149   L017003?:
0282 ED        1150            mov     a,r5
0283 2A        1151            add     a,r2
0284 FF        1152            mov     r7,a
0285 EE        1153            mov     a,r6
0286 3B        1154            addc    a,r3
0287 F8        1155            mov     r0,a
0288 8C01      1156            mov     ar1,r4
028A 8F82      1157            mov     dpl,r7
028C 8883      1158            mov     dph,r0
028E 89F0      1159            mov     b,r1
0290 120100    1160            lcall   __gptrget
0293 FF        1161            mov     r7,a
0294 6001      1162            jz      L017006?
0296 8F82      1163            mov     dpl,r7
0298 C002      1164            push    ar2
029A C003      1165            push    ar3
029C C004      1166            push    ar4
029E C005      1167            push    ar5
02A0 C006      1168            push    ar6
02A2 120100    1169            lcall   _WriteData
02A5 D006      1170            pop     ar6
02A7 D005      1171            pop     ar5
02A9 D004      1172            pop     ar4
02AB D003      1173            pop     ar3
02AD D002      1174            pop     ar2
02AF 0D        1175            inc     r5
02B0 BD0008    1176            cjne    r5,#0x00,L017003?
02B3 0E        1177            inc     r6
02B4 8001      1178            sjmp    L017003?
02B6           1179   L017006?:
02B6           1180   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:341: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
02B6 3030C8    1181            jnb     _LCDprint_PARM_3,L017011?
02B9 8D02      1182            mov     ar2,r5
02BB 8E03      1183            mov     ar3,r6
02BD           1184   L017007?:
02BD C3        1185            clr     c
02BE EA        1186            mov     a,r2
02BF 9410      1187            subb    a,#0x10
02C1 EB        1188            mov     a,r3
02C2 6480      1189            xrl     a,#0x80
02C4 9480      1190            subb    a,#0x80
02C6 5001      1191            jnc     L017011?
02C8 758220    1192            mov     dpl,#0x20
02CB C002      1193            push    ar2
02CD C003      1194            push    ar3
02CF 120100    1195            lcall   _WriteData
02D2 D003      1196            pop     ar3
02D4 D002      1197            pop     ar2
02D6 0A        1198            inc     r2
02D7 BA0008    1199            cjne    r2,#0x00,L017007?
02DA 0B        1200            inc     r3
02DB 8001      1201            sjmp    L017007?
02DD           1202   L017011?:
02DD 22        1203            ret
02DE           1204   ;------------------------------------------------------------
02DE           1205   ;Allocation info for local variables in function 'Clean_LCD'
02DE           1206   ;------------------------------------------------------------
02DE           1207   ;------------------------------------------------------------
02DE           1208   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:345: void Clean_LCD(void){
02DE           1209   ;        -----------------------------------------
02DE           1210   ;         function Clean_LCD
02DE           1211   ;        -----------------------------------------
02DE           1212   _Clean_LCD:
02DE           1213   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:346: LCDprint("                ", 1, 1);
02DE 758001    1214            mov     _LCDprint_PARM_2,#0x01
02E1 D230      1215            setb    _LCDprint_PARM_3
02E3 90A748    1216            mov     dptr,#__str_0
02E6 75F080    1217            mov     b,#0x80
02E9 120100    1218            lcall   _LCDprint
02EC           1219   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:347: LCDprint("                ", 2, 1);
02EC 758002    1220            mov     _LCDprint_PARM_2,#0x02
02EF D230      1221            setb    _LCDprint_PARM_3
02F1 90A748    1222            mov     dptr,#__str_0
02F4 75F080    1223            mov     b,#0x80
02F7 020100    1224            ljmp    _LCDprint
02FA           1225   ;------------------------------------------------------------
02FA           1226   ;Allocation info for local variables in function 'ReadFrequency'
02FA           1227   ;------------------------------------------------------------
02FA           1228   ;------------------------------------------------------------
02FA           1229   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:353: void ReadFrequency (void)
02FA           1230   ;        -----------------------------------------
02FA           1231   ;         function ReadFrequency
02FA           1232   ;        -----------------------------------------
02FA           1233   _ReadFrequency:
02FA           1234   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:357: TL0=0;
02FA 758A00    1235            mov     _TL0,#0x00
02FD           1236   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:358: TH0=0;
02FD 758C00    1237            mov     _TH0,#0x00
0300           1238   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:359: TF0=0;
0300 C28D      1239            clr     _TF0
0302           1240   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:360: overflow_count=0;
0302 75A800    1241            mov     _overflow_count,#0x00
0305           1242   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:362: while(FRQIN!=0); // Wait for the signal to be zero
0305           1243   L019001?:
0305 209688    1244            jb      _P1_6,L019001?
0308           1245   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:363: while(FRQIN!=1); // Wait for the signal to be one
0308           1246   L019004?:
0308 3096C8    1247            jnb     _P1_6,L019004?
030B           1248   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:364: TR0=1; // Start the timer
030B D28C      1249            setb    _TR0
030D           1250   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:365: while(FRQIN!=0) // Wait for the signal to be zero
030D           1251   L019009?:
030D 309648    1252            jnb     _P1_6,L019014?
0310           1253   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:367: if(TF0==1) // Did the 16-bit timer overflow?
0310           1254   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:369: TF0=0;
0310 108D88    1255            jbc     _TF0,L019031?
0313 8001      1256            sjmp    L019009?
0315           1257   L019031?:
0315           1258   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:370: overflow_count++;
0315 05A8      1259            inc     _overflow_count
0317           1260   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:373: while(FRQIN!=1) // Wait for the signal to be one
0317 8001      1261            sjmp    L019009?
0319           1262   L019014?:
0319 2096C8    1263            jb      _P1_6,L019016?
031C           1264   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:375: if(TF0==1) // Did the 16-bit timer overflow?
031C           1265   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:377: TF0=0;
031C 108D08    1266            jbc     _TF0,L019033?
031F 8001      1267            sjmp    L019014?
0321           1268   L019033?:
0321           1269   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:378: overflow_count++;
0321 05A8      1270            inc     _overflow_count
0323 8001      1271            sjmp    L019014?
0325           1272   L019016?:
0325           1273   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:382: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period. Then convert it to frequency
0325 C28C      1274            clr     _TR0
0327           1275   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:384: frequency=1.0/((overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK)); // Compute frequency
0327 85A882    1276            mov     dpl,_overflow_count
032A 120100    1277            lcall   ___uchar2fs
032D AA82      1278            mov     r2,dpl
032F AB83      1279            mov     r3,dph
0331 ACF0      1280            mov     r4,b
0333 FD        1281            mov     r5,a
0334 C002      1282            push    ar2
0336 C003      1283            push    ar3
0338 C004      1284            push    ar4
033A C005      1285            push    ar5
033C 900000    1286            mov     dptr,#0x0000
033F 75F080    1287            mov     b,#0x80
0342 7447      1288            mov     a,#0x47
0344 120100    1289            lcall   ___fsmul
0347 AA82      1290            mov     r2,dpl
0349 AB83      1291            mov     r3,dph
034B ACF0      1292            mov     r4,b
034D FD        1293            mov     r5,a
034E E581      1294            mov     a,sp
0350 24FC      1295            add     a,#0xfc
0352 F581      1296            mov     sp,a
0354 858C82    1297            mov     dpl,_TH0
0357 C002      1298            push    ar2
0359 C003      1299            push    ar3
035B C004      1300            push    ar4
035D C005      1301            push    ar5
035F 120100    1302            lcall   ___uchar2fs
0362 AE82      1303            mov     r6,dpl
0364 AF83      1304            mov     r7,dph
0366 A8F0      1305            mov     r0,b
0368 F9        1306            mov     r1,a
0369 C006      1307            push    ar6
036B C007      1308            push    ar7
036D C000      1309            push    ar0
036F C001      1310            push    ar1
0371 900000    1311            mov     dptr,#0x0000
0374 75F080    1312            mov     b,#0x80
0377 7443      1313            mov     a,#0x43
0379 120100    1314            lcall   ___fsmul
037C AE82      1315            mov     r6,dpl
037E AF83      1316            mov     r7,dph
0380 A8F0      1317            mov     r0,b
0382 F9        1318            mov     r1,a
0383 E581      1319            mov     a,sp
0385 24FC      1320            add     a,#0xfc
0387 F581      1321            mov     sp,a
0389 D005      1322            pop     ar5
038B D004      1323            pop     ar4
038D D003      1324            pop     ar3
038F D002      1325            pop     ar2
0391 C006      1326            push    ar6
0393 C007      1327            push    ar7
0395 C000      1328            push    ar0
0397 C001      1329            push    ar1
0399 8A82      1330            mov     dpl,r2
039B 8B83      1331            mov     dph,r3
039D 8CF0      1332            mov     b,r4
039F ED        1333            mov     a,r5
03A0 120100    1334            lcall   ___fsadd
03A3 AA82      1335            mov     r2,dpl
03A5 AB83      1336            mov     r3,dph
03A7 ACF0      1337            mov     r4,b
03A9 FD        1338            mov     r5,a
03AA E581      1339            mov     a,sp
03AC 24FC      1340            add     a,#0xfc
03AE F581      1341            mov     sp,a
03B0 AE8A      1342            mov     r6,_TL0
03B2 7F00      1343            mov     r7,#0x00
03B4 8E82      1344            mov     dpl,r6
03B6 8F83      1345            mov     dph,r7
03B8 C002      1346            push    ar2
03BA C003      1347            push    ar3
03BC C004      1348            push    ar4
03BE C005      1349            push    ar5
03C0 120100    1350            lcall   ___sint2fs
03C3 AE82      1351            mov     r6,dpl
03C5 AF83      1352            mov     r7,dph
03C7 A8F0      1353            mov     r0,b
03C9 F9        1354            mov     r1,a
03CA D005      1355            pop     ar5
03CC D004      1356            pop     ar4
03CE D003      1357            pop     ar3
03D0 D002      1358            pop     ar2
03D2 C006      1359            push    ar6
03D4 C007      1360            push    ar7
03D6 C000      1361            push    ar0
03D8 C001      1362            push    ar1
03DA 8A82      1363            mov     dpl,r2
03DC 8B83      1364            mov     dph,r3
03DE 8CF0      1365            mov     b,r4
03E0 ED        1366            mov     a,r5
03E1 120100    1367            lcall   ___fsadd
03E4 AA82      1368            mov     r2,dpl
03E6 AB83      1369            mov     r3,dph
03E8 ACF0      1370            mov     r4,b
03EA FD        1371            mov     r5,a
03EB E581      1372            mov     a,sp
03ED 24FC      1373            add     a,#0xfc
03EF F581      1374            mov     sp,a
03F1 C002      1375            push    ar2
03F3 C003      1376            push    ar3
03F5 C004      1377            push    ar4
03F7 C005      1378            push    ar5
03F9 9037BD    1379            mov     dptr,#0x37BD
03FC 75F086    1380            mov     b,#0x86
03FF 7434      1381            mov     a,#0x34
0401 120100    1382            lcall   ___fsmul
0404 AA82      1383            mov     r2,dpl
0406 AB83      1384            mov     r3,dph
0408 ACF0      1385            mov     r4,b
040A FD        1386            mov     r5,a
040B E581      1387            mov     a,sp
040D 24FC      1388            add     a,#0xfc
040F F581      1389            mov     sp,a
0411 C002      1390            push    ar2
0413 C003      1391            push    ar3
0415 C004      1392            push    ar4
0417 C005      1393            push    ar5
0419 900000    1394            mov     dptr,#0x0000
041C 75F080    1395            mov     b,#0x80
041F 743F      1396            mov     a,#0x3F
0421 120100    1397            lcall   ___fsdiv
0424 858280    1398            mov     _frequency,dpl
0427 858381    1399            mov     (_frequency + 1),dph
042A 85F082    1400            mov     (_frequency + 2),b
042D F583      1401            mov     (_frequency + 3),a
042F E581      1402            mov     a,sp
0431 24FC      1403            add     a,#0xfc
0433 F581      1404            mov     sp,a
0435 22        1405            ret
0436           1406   ;------------------------------------------------------------
0436           1407   ;Allocation info for local variables in function 'DetermineMode'
0436           1408   ;------------------------------------------------------------
0436           1409   ;ReadCount                 Allocated to registers r4 
0436           1410   ;ForwardSigCount           Allocated with name '_DetermineMode_ForwardSigCount_1_86'
0436           1411   ;StopSigCount              Allocated with name '_DetermineMode_StopSigCount_1_86'
0436           1412   ;------------------------------------------------------------
0436           1413   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:390: void DetermineMode (void) {
0436           1414   ;        -----------------------------------------
0436           1415   ;         function DetermineMode
0436           1416   ;        -----------------------------------------
0436           1417   _DetermineMode:
0436           1418   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:394: ReadFrequency();
0436 120100    1419            lcall   _ReadFrequency
0439           1420   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:398: FreqBuffer[WriteCount]=frequency;
0439 E540      1421            mov     a,_WriteCount
043B 2540      1422            add     a,_WriteCount
043D 25E0      1423            add     a,acc
043F FA        1424            mov     r2,a
0440 2480      1425            add     a,#_FreqBuffer
0442 F8        1426            mov     r0,a
0443 A680      1427            mov     @r0,_frequency
0445 08        1428            inc     r0
0446 A681      1429            mov     @r0,(_frequency + 1)
0448 08        1430            inc     r0
0449 A682      1431            mov     @r0,(_frequency + 2)
044B 08        1432            inc     r0
044C A683      1433            mov     @r0,(_frequency + 3)
044E           1434   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:399: WriteCount++;
044E 0540      1435            inc     _WriteCount
0450           1436   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:400: if (WriteCount==4){
0450 7404      1437            mov     a,#0x04
0452 B54008    1438            cjne    a,_WriteCount,L020025?
0455           1439   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:401: WriteCount=0;
0455 754000    1440            mov     _WriteCount,#0x00
0458           1441   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:406: for (ReadCount=0; ReadCount<4; ReadCount++){
0458           1442   L020025?:
0458 754800    1443            mov     _DetermineMode_ForwardSigCount_1_86,#0x00
045B 75A800    1444            mov     _DetermineMode_StopSigCount_1_86,#0x00
045E 7C00      1445            mov     r4,#0x00
0460           1446   L020013?:
0460 BC0488    1447            cjne    r4,#0x04,L020031?
0463           1448   L020031?:
0463 4001      1449            jc      L020032?
0465 020100    1450            ljmp    L020016?
0468           1451   L020032?:
0468           1452   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:407: if (FreqBuffer[ReadCount]>0.99*FRQFORWARD && FreqBuffer[ReadCount]<1.01*FRQFORWARD){
0468 EC        1453            mov     a,r4
0469 2C        1454            add     a,r4
046A 25E0      1455            add     a,acc
046C FD        1456            mov     r5,a
046D 2480      1457            add     a,#_FreqBuffer
046F F8        1458            mov     r0,a
0470 8606      1459            mov     ar6,@r0
0472 08        1460            inc     r0
0473 8607      1461            mov     ar7,@r0
0475 08        1462            inc     r0
0476 8603      1463            mov     ar3,@r0
0478 08        1464            inc     r0
0479 8602      1465            mov     ar2,@r0
047B 18        1466            dec     r0
047C 18        1467            dec     r0
047D 18        1468            dec     r0
047E C004      1469            push    ar4
0480 C005      1470            push    ar5
0482 E4        1471            clr     a
0483 C0E0      1472            push    acc
0485 74B6      1473            mov     a,#0xB6
0487 C0E0      1474            push    acc
0489 7482      1475            mov     a,#0x82
048B C0E0      1476            push    acc
048D 7446      1477            mov     a,#0x46
048F C0E0      1478            push    acc
0491 8E82      1479            mov     dpl,r6
0493 8F83      1480            mov     dph,r7
0495 8BF0      1481            mov     b,r3
0497 EA        1482            mov     a,r2
0498 120100    1483            lcall   ___fsgt
049B AA82      1484            mov     r2,dpl
049D E581      1485            mov     a,sp
049F 24FC      1486            add     a,#0xfc
04A1 F581      1487            mov     sp,a
04A3 D005      1488            pop     ar5
04A5 D004      1489            pop     ar4
04A7 EA        1490            mov     a,r2
04A8 6001      1491            jz      L020004?
04AA ED        1492            mov     a,r5
04AB 2480      1493            add     a,#_FreqBuffer
04AD F8        1494            mov     r0,a
04AE 8602      1495            mov     ar2,@r0
04B0 08        1496            inc     r0
04B1 8603      1497            mov     ar3,@r0
04B3 08        1498            inc     r0
04B4 8605      1499            mov     ar5,@r0
04B6 08        1500            inc     r0
04B7 8606      1501            mov     ar6,@r0
04B9 18        1502            dec     r0
04BA 18        1503            dec     r0
04BB 18        1504            dec     r0
04BC C004      1505            push    ar4
04BE E4        1506            clr     a
04BF C0E0      1507            push    acc
04C1 745A      1508            mov     a,#0x5A
04C3 C0E0      1509            push    acc
04C5 7485      1510            mov     a,#0x85
04C7 C0E0      1511            push    acc
04C9 7446      1512            mov     a,#0x46
04CB C0E0      1513            push    acc
04CD 8A82      1514            mov     dpl,r2
04CF 8B83      1515            mov     dph,r3
04D1 8DF0      1516            mov     b,r5
04D3 EE        1517            mov     a,r6
04D4 120100    1518            lcall   ___fslt
04D7 AA82      1519            mov     r2,dpl
04D9 E581      1520            mov     a,sp
04DB 24FC      1521            add     a,#0xfc
04DD F581      1522            mov     sp,a
04DF D004      1523            pop     ar4
04E1 EA        1524            mov     a,r2
04E2 6001      1525            jz      L020004?
04E4           1526   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:408: ForwardSigCount++;
04E4 0548      1527            inc     _DetermineMode_ForwardSigCount_1_86
04E6           1528   L020004?:
04E6           1529   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:410: if (FreqBuffer[ReadCount]>0.98*FRQSTOP && FreqBuffer[ReadCount]<1.02*FRQSTOP){
04E6 EC        1530            mov     a,r4
04E7 2C        1531            add     a,r4
04E8 25E0      1532            add     a,acc
04EA FA        1533            mov     r2,a
04EB 2480      1534            add     a,#_FreqBuffer
04ED F8        1535            mov     r0,a
04EE 8603      1536            mov     ar3,@r0
04F0 08        1537            inc     r0
04F1 8605      1538            mov     ar5,@r0
04F3 08        1539            inc     r0
04F4 8606      1540            mov     ar6,@r0
04F6 08        1541            inc     r0
04F7 8607      1542            mov     ar7,@r0
04F9 18        1543            dec     r0
04FA 18        1544            dec     r0
04FB 18        1545            dec     r0
04FC C002      1546            push    ar2
04FE C004      1547            push    ar4
0500 E4        1548            clr     a
0501 C0E0      1549            push    acc
0503 7438      1550            mov     a,#0x38
0505 C0E0      1551            push    acc
0507 7467      1552            mov     a,#0x67
0509 C0E0      1553            push    acc
050B 7446      1554            mov     a,#0x46
050D C0E0      1555            push    acc
050F 8B82      1556            mov     dpl,r3
0511 8D83      1557            mov     dph,r5
0513 8EF0      1558            mov     b,r6
0515 EF        1559            mov     a,r7
0516 120100    1560            lcall   ___fsgt
0519 AB82      1561            mov     r3,dpl
051B E581      1562            mov     a,sp
051D 24FC      1563            add     a,#0xfc
051F F581      1564            mov     sp,a
0521 D004      1565            pop     ar4
0523 D002      1566            pop     ar2
0525 EB        1567            mov     a,r3
0526 6001      1568            jz      L020015?
0528 EA        1569            mov     a,r2
0529 2480      1570            add     a,#_FreqBuffer
052B F8        1571            mov     r0,a
052C 8602      1572            mov     ar2,@r0
052E 08        1573            inc     r0
052F 8603      1574            mov     ar3,@r0
0531 08        1575            inc     r0
0532 8605      1576            mov     ar5,@r0
0534 08        1577            inc     r0
0535 8606      1578            mov     ar6,@r0
0537 18        1579            dec     r0
0538 18        1580            dec     r0
0539 18        1581            dec     r0
053A C004      1582            push    ar4
053C E4        1583            clr     a
053D C0E0      1584            push    acc
053F 74A8      1585            mov     a,#0xA8
0541 C0E0      1586            push    acc
0543 7470      1587            mov     a,#0x70
0545 C0E0      1588            push    acc
0547 7446      1589            mov     a,#0x46
0549 C0E0      1590            push    acc
054B 8A82      1591            mov     dpl,r2
054D 8B83      1592            mov     dph,r3
054F 8DF0      1593            mov     b,r5
0551 EE        1594            mov     a,r6
0552 120100    1595            lcall   ___fslt
0555 AA82      1596            mov     r2,dpl
0557 E581      1597            mov     a,sp
0559 24FC      1598            add     a,#0xfc
055B F581      1599            mov     sp,a
055D D004      1600            pop     ar4
055F EA        1601            mov     a,r2
0560 6001      1602            jz      L020015?
0562           1603   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:411: StopSigCount++;  
0562 05A8      1604            inc     _DetermineMode_StopSigCount_1_86
0564           1605   L020015?:
0564           1606   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:406: for (ReadCount=0; ReadCount<4; ReadCount++){
0564 0C        1607            inc     r4
0565 020100    1608            ljmp    L020013?
0568           1609   L020016?:
0568           1610   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:416: if (StopSigCount > 2){
0568 E5A8      1611            mov     a,_DetermineMode_StopSigCount_1_86
056A 24FD      1612            add     a,#0xff - 0x02
056C 5001      1613            jnc     L020010?
056E           1614   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:417: mode = STOP;
056E E4        1615            clr     a
056F F5C0      1616            mov     _mode,a
0571 F5C1      1617            mov     (_mode + 1),a
0573           1618   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:418: return;
0573 22        1619            ret
0574           1620   L020010?:
0574           1621   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:422: if (ForwardSigCount > 2){
0574 E548      1622            mov     a,_DetermineMode_ForwardSigCount_1_86
0576 24FD      1623            add     a,#0xff - 0x02
0578 5001      1624            jnc     L020017?
057A           1625   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:423: mode = FORWARD;
057A 75C003    1626            mov     _mode,#0x03
057D E4        1627            clr     a
057E F5C1      1628            mov     (_mode + 1),a
0580           1629   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:431: power=30;
0580 75281E    1630            mov     _power,#0x1E
0583           1631   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:432: return;
0583           1632   L020017?:
0583 22        1633            ret
0584           1634   ;------------------------------------------------------------
0584           1635   ;Allocation info for local variables in function 'MotorControl'
0584           1636   ;------------------------------------------------------------
0584           1637   ;IndVolts                  Allocated with name '_MotorControl_IndVolts_1_93'
0584           1638   ;sloc0                     Allocated with name '_MotorControl_sloc0_1_0'
0584           1639   ;sloc1                     Allocated with name '_MotorControl_sloc1_1_0'
0584           1640   ;sloc2                     Allocated with name '_MotorControl_sloc2_1_0'
0584           1641   ;------------------------------------------------------------
0584           1642   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:443: void MotorControl (volatile float IndVolts[])
0584           1643   ;        -----------------------------------------
0584           1644   ;         function MotorControl
0584           1645   ;        -----------------------------------------
0584           1646   _MotorControl:
0584 8582F8    1647            mov     _MotorControl_IndVolts_1_93,dpl
0587 8583F9    1648            mov     (_MotorControl_IndVolts_1_93 + 1),dph
058A 85F0FA    1649            mov     (_MotorControl_IndVolts_1_93 + 2),b
058D           1650   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:446: switch (mode){
058D E4        1651            clr     a
058E B5C0C8    1652            cjne    a,_mode,L021037?
0591 E4        1653            clr     a
0592 B5C1C8    1654            cjne    a,(_mode + 1),L021037?
0595 020100    1655            ljmp    L021023?
0598           1656   L021037?:
0598 7403      1657            mov     a,#0x03
059A B5C048    1658            cjne    a,_mode,L021038?
059D E4        1659            clr     a
059E B5C148    1660            cjne    a,(_mode + 1),L021038?
05A1 8001      1661            sjmp    L021001?
05A3           1662   L021038?:
05A3 7404      1663            mov     a,#0x04
05A5 B5C0C8    1664            cjne    a,_mode,L021039?
05A8 E4        1665            clr     a
05A9 B5C1C8    1666            cjne    a,(_mode + 1),L021039?
05AC 020100    1667            ljmp    L021008?
05AF           1668   L021039?:
05AF 22        1669            ret
05B0           1670   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:448: case FORWARD:
05B0           1671   L021001?:
05B0           1672   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:449: if((IndVolts[0] - Vblue_middle) > Vblue_thresh){
05B0 AAF8      1673            mov     r2,_MotorControl_IndVolts_1_93
05B2 ABF9      1674            mov     r3,(_MotorControl_IndVolts_1_93 + 1)
05B4 ACFA      1675            mov     r4,(_MotorControl_IndVolts_1_93 + 2)
05B6 8A82      1676            mov     dpl,r2
05B8 8B83      1677            mov     dph,r3
05BA 8CF0      1678            mov     b,r4
05BC 120100    1679            lcall   __gptrget
05BF FD        1680            mov     r5,a
05C0 A3        1681            inc     dptr
05C1 120100    1682            lcall   __gptrget
05C4 FE        1683            mov     r6,a
05C5 A3        1684            inc     dptr
05C6 120100    1685            lcall   __gptrget
05C9 FF        1686            mov     r7,a
05CA A3        1687            inc     dptr
05CB 120100    1688            lcall   __gptrget
05CE F8        1689            mov     r0,a
05CF C002      1690            push    ar2
05D1 C003      1691            push    ar3
05D3 C004      1692            push    ar4
05D5 7462      1693            mov     a,#0x62
05D7 C0E0      1694            push    acc
05D9 7410      1695            mov     a,#0x10
05DB C0E0      1696            push    acc
05DD 74F8      1697            mov     a,#0xF8
05DF C0E0      1698            push    acc
05E1 743E      1699            mov     a,#0x3E
05E3 C0E0      1700            push    acc
05E5 8D82      1701            mov     dpl,r5
05E7 8E83      1702            mov     dph,r6
05E9 8FF0      1703            mov     b,r7
05EB E8        1704            mov     a,r0
05EC 120100    1705            lcall   ___fssub
05EF AD82      1706            mov     r5,dpl
05F1 AE83      1707            mov     r6,dph
05F3 AFF0      1708            mov     r7,b
05F5 F8        1709            mov     r0,a
05F6 E581      1710            mov     a,sp
05F8 24FC      1711            add     a,#0xfc
05FA F581      1712            mov     sp,a
05FC 74AC      1713            mov     a,#0xAC
05FE C0E0      1714            push    acc
0600 741C      1715            mov     a,#0x1C
0602 C0E0      1716            push    acc
0604 74DA      1717            mov     a,#0xDA
0606 C0E0      1718            push    acc
0608 743D      1719            mov     a,#0x3D
060A C0E0      1720            push    acc
060C 8D82      1721            mov     dpl,r5
060E 8E83      1722            mov     dph,r6
0610 8FF0      1723            mov     b,r7
0612 E8        1724            mov     a,r0
0613 120100    1725            lcall   ___fsgt
0616 AD82      1726            mov     r5,dpl
0618 E581      1727            mov     a,sp
061A 24FC      1728            add     a,#0xfc
061C F581      1729            mov     sp,a
061E D004      1730            pop     ar4
0620 D003      1731            pop     ar3
0622 D002      1732            pop     ar2
0624 ED        1733            mov     a,r5
0625 6001      1734            jz      L021006?
0627           1735   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:450: pwm_BLU1= 0;
0627 75A800    1736            mov     _pwm_BLU1,#0x00
062A           1737   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:451: pwm_BLU0 = 0;
062A 75E800    1738            mov     _pwm_BLU0,#0x00
062D           1739   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:452: pwm_RED1 = power;
062D 852828    1740            mov     _pwm_RED1,_power
0630           1741   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:453: pwm_RED0 = 0; 
0630 756800    1742            mov     _pwm_RED0,#0x00
0633 22        1743            ret
0634           1744   L021006?:
0634           1745   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:456: else if( (IndVolts[1] - Vred_middle) > Vred_thresh ){
0634 7404      1746            mov     a,#0x04
0636 2A        1747            add     a,r2
0637 FA        1748            mov     r2,a
0638 E4        1749            clr     a
0639 3B        1750            addc    a,r3
063A FB        1751            mov     r3,a
063B 8A82      1752            mov     dpl,r2
063D 8B83      1753            mov     dph,r3
063F 8CF0      1754            mov     b,r4
0641 120100    1755            lcall   __gptrget
0644 FA        1756            mov     r2,a
0645 A3        1757            inc     dptr
0646 120100    1758            lcall   __gptrget
0649 FB        1759            mov     r3,a
064A A3        1760            inc     dptr
064B 120100    1761            lcall   __gptrget
064E FC        1762            mov     r4,a
064F A3        1763            inc     dptr
0650 120100    1764            lcall   __gptrget
0653 FD        1765            mov     r5,a
0654 741B      1766            mov     a,#0x1B
0656 C0E0      1767            push    acc
0658 742F      1768            mov     a,#0x2F
065A C0E0      1769            push    acc
065C 74CD      1770            mov     a,#0xCD
065E C0E0      1771            push    acc
0660 743E      1772            mov     a,#0x3E
0662 C0E0      1773            push    acc
0664 8A82      1774            mov     dpl,r2
0666 8B83      1775            mov     dph,r3
0668 8CF0      1776            mov     b,r4
066A ED        1777            mov     a,r5
066B 120100    1778            lcall   ___fssub
066E AA82      1779            mov     r2,dpl
0670 AB83      1780            mov     r3,dph
0672 ACF0      1781            mov     r4,b
0674 FD        1782            mov     r5,a
0675 E581      1783            mov     a,sp
0677 24FC      1784            add     a,#0xfc
0679 F581      1785            mov     sp,a
067B 74AC      1786            mov     a,#0xAC
067D C0E0      1787            push    acc
067F 741C      1788            mov     a,#0x1C
0681 C0E0      1789            push    acc
0683 745A      1790            mov     a,#0x5A
0685 C0E0      1791            push    acc
0687 743D      1792            mov     a,#0x3D
0689 C0E0      1793            push    acc
068B 8A82      1794            mov     dpl,r2
068D 8B83      1795            mov     dph,r3
068F 8CF0      1796            mov     b,r4
0691 ED        1797            mov     a,r5
0692 120100    1798            lcall   ___fsgt
0695 AA82      1799            mov     r2,dpl
0697 E581      1800            mov     a,sp
0699 24FC      1801            add     a,#0xfc
069B F581      1802            mov     sp,a
069D EA        1803            mov     a,r2
069E 6001      1804            jz      L021003?
06A0           1805   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:457: pwm_BLU1=power;
06A0 8528A8    1806            mov     _pwm_BLU1,_power
06A3           1807   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:458: pwm_BLU0=0;
06A3 75E800    1808            mov     _pwm_BLU0,#0x00
06A6           1809   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:459: pwm_RED1=0;
06A6 752800    1810            mov     _pwm_RED1,#0x00
06A9           1811   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:460: pwm_RED0=0;
06A9 756800    1812            mov     _pwm_RED0,#0x00
06AC 22        1813            ret
06AD           1814   L021003?:
06AD           1815   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:463: pwm_BLU1 = power;
06AD 8528A8    1816            mov     _pwm_BLU1,_power
06B0           1817   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:464: pwm_BLU0 = 0;
06B0 75E800    1818            mov     _pwm_BLU0,#0x00
06B3           1819   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:465: pwm_RED1 = power;
06B3 852828    1820            mov     _pwm_RED1,_power
06B6           1821   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:466: pwm_RED0 = 0;
06B6 756800    1822            mov     _pwm_RED0,#0x00
06B9           1823   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:468: break;
06B9 22        1824            ret
06BA           1825   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:471: case BACKWARD:
06BA           1826   L021008?:
06BA           1827   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:472: if(IndVolts[0] > Vblue_thresh + 0.1 || IndVolts[0]/IndVolts[1] > 1){
06BA 85F848    1828            mov     _MotorControl_sloc0_1_0,_MotorControl_IndVolts_1_93
06BD 85F949    1829            mov     (_MotorControl_sloc0_1_0 + 1),(_MotorControl_IndVolts_1_93 + 1)
06C0 85FA4A    1830            mov     (_MotorControl_sloc0_1_0 + 2),(_MotorControl_IndVolts_1_93 + 2)
06C3 854882    1831            mov     dpl,_MotorControl_sloc0_1_0
06C6 854983    1832            mov     dph,(_MotorControl_sloc0_1_0 + 1)
06C9 854AF0    1833            mov     b,(_MotorControl_sloc0_1_0 + 2)
06CC 120100    1834            lcall   __gptrget
06CF FD        1835            mov     r5,a
06D0 A3        1836            inc     dptr
06D1 120100    1837            lcall   __gptrget
06D4 FE        1838            mov     r6,a
06D5 A3        1839            inc     dptr
06D6 120100    1840            lcall   __gptrget
06D9 FF        1841            mov     r7,a
06DA A3        1842            inc     dptr
06DB 120100    1843            lcall   __gptrget
06DE F8        1844            mov     r0,a
06DF C005      1845            push    ar5
06E1 C006      1846            push    ar6
06E3 C007      1847            push    ar7
06E5 C000      1848            push    ar0
06E7 74BC      1849            mov     a,#0xBC
06E9 C0E0      1850            push    acc
06EB 7474      1851            mov     a,#0x74
06ED C0E0      1852            push    acc
06EF 7453      1853            mov     a,#0x53
06F1 C0E0      1854            push    acc
06F3 743E      1855            mov     a,#0x3E
06F5 C0E0      1856            push    acc
06F7 8D82      1857            mov     dpl,r5
06F9 8E83      1858            mov     dph,r6
06FB 8FF0      1859            mov     b,r7
06FD E8        1860            mov     a,r0
06FE 120100    1861            lcall   ___fsgt
0701 A982      1862            mov     r1,dpl
0703 E581      1863            mov     a,sp
0705 24FC      1864            add     a,#0xfc
0707 F581      1865            mov     sp,a
0709 D000      1866            pop     ar0
070B D007      1867            pop     ar7
070D D006      1868            pop     ar6
070F D005      1869            pop     ar5
0711 E9        1870            mov     a,r1
0712 6001      1871            jz      L021042?
0714 020100    1872            ljmp    L021019?
0717           1873   L021042?:
0717 7404      1874            mov     a,#0x04
0719 2548      1875            add     a,_MotorControl_sloc0_1_0
071B F9        1876            mov     r1,a
071C E4        1877            clr     a
071D 3549      1878            addc    a,(_MotorControl_sloc0_1_0 + 1)
071F FA        1879            mov     r2,a
0720 AB4A      1880            mov     r3,(_MotorControl_sloc0_1_0 + 2)
0722 8982      1881            mov     dpl,r1
0724 8A83      1882            mov     dph,r2
0726 8BF0      1883            mov     b,r3
0728 120100    1884            lcall   __gptrget
072B F5E8      1885            mov     _MotorControl_sloc2_1_0,a
072D A3        1886            inc     dptr
072E 120100    1887            lcall   __gptrget
0731 F5E9      1888            mov     (_MotorControl_sloc2_1_0 + 1),a
0733 A3        1889            inc     dptr
0734 120100    1890            lcall   __gptrget
0737 F5EA      1891            mov     (_MotorControl_sloc2_1_0 + 2),a
0739 A3        1892            inc     dptr
073A 120100    1893            lcall   __gptrget
073D F5EB      1894            mov     (_MotorControl_sloc2_1_0 + 3),a
073F C005      1895            push    ar5
0741 C006      1896            push    ar6
0743 C007      1897            push    ar7
0745 C000      1898            push    ar0
0747 C0E8      1899            push    _MotorControl_sloc2_1_0
0749 C0E9      1900            push    (_MotorControl_sloc2_1_0 + 1)
074B C0EA      1901            push    (_MotorControl_sloc2_1_0 + 2)
074D C0EB      1902            push    (_MotorControl_sloc2_1_0 + 3)
074F 8D82      1903            mov     dpl,r5
0751 8E83      1904            mov     dph,r6
0753 8FF0      1905            mov     b,r7
0755 E8        1906            mov     a,r0
0756 120100    1907            lcall   ___fsdiv
0759 858298    1908            mov     _MotorControl_sloc1_1_0,dpl
075C 858399    1909            mov     (_MotorControl_sloc1_1_0 + 1),dph
075F 85F09A    1910            mov     (_MotorControl_sloc1_1_0 + 2),b
0762 F59B      1911            mov     (_MotorControl_sloc1_1_0 + 3),a
0764 E581      1912            mov     a,sp
0766 24FC      1913            add     a,#0xfc
0768 F581      1914            mov     sp,a
076A E4        1915            clr     a
076B C0E0      1916            push    acc
076D C0E0      1917            push    acc
076F 7480      1918            mov     a,#0x80
0771 C0E0      1919            push    acc
0773 743F      1920            mov     a,#0x3F
0775 C0E0      1921            push    acc
0777 859882    1922            mov     dpl,_MotorControl_sloc1_1_0
077A 859983    1923            mov     dph,(_MotorControl_sloc1_1_0 + 1)
077D 859AF0    1924            mov     b,(_MotorControl_sloc1_1_0 + 2)
0780 E59B      1925            mov     a,(_MotorControl_sloc1_1_0 + 3)
0782 120100    1926            lcall   ___fsgt
0785 AA82      1927            mov     r2,dpl
0787 E581      1928            mov     a,sp
0789 24FC      1929            add     a,#0xfc
078B F581      1930            mov     sp,a
078D D000      1931            pop     ar0
078F D007      1932            pop     ar7
0791 D006      1933            pop     ar6
0793 D005      1934            pop     ar5
0795 EA        1935            mov     a,r2
0796 7001      1936            jnz     L021043?
0798 020100    1937            ljmp    L021020?
079B           1938   L021043?:
079B           1939   L021019?:
079B           1940   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:473: if (IndVolts[0]/IndVolts[1]>1.1){
079B 7404      1941            mov     a,#0x04
079D 2548      1942            add     a,_MotorControl_sloc0_1_0
079F FA        1943            mov     r2,a
07A0 E4        1944            clr     a
07A1 3549      1945            addc    a,(_MotorControl_sloc0_1_0 + 1)
07A3 FB        1946            mov     r3,a
07A4 AC4A      1947            mov     r4,(_MotorControl_sloc0_1_0 + 2)
07A6 8A82      1948            mov     dpl,r2
07A8 8B83      1949            mov     dph,r3
07AA 8CF0      1950            mov     b,r4
07AC 120100    1951            lcall   __gptrget
07AF FA        1952            mov     r2,a
07B0 A3        1953            inc     dptr
07B1 120100    1954            lcall   __gptrget
07B4 FB        1955            mov     r3,a
07B5 A3        1956            inc     dptr
07B6 120100    1957            lcall   __gptrget
07B9 FC        1958            mov     r4,a
07BA A3        1959            inc     dptr
07BB 120100    1960            lcall   __gptrget
07BE F9        1961            mov     r1,a
07BF C002      1962            push    ar2
07C1 C003      1963            push    ar3
07C3 C004      1964            push    ar4
07C5 C001      1965            push    ar1
07C7 8D82      1966            mov     dpl,r5
07C9 8E83      1967            mov     dph,r6
07CB 8FF0      1968            mov     b,r7
07CD E8        1969            mov     a,r0
07CE 120100    1970            lcall   ___fsdiv
07D1 AA82      1971            mov     r2,dpl
07D3 AB83      1972            mov     r3,dph
07D5 ACF0      1973            mov     r4,b
07D7 FD        1974            mov     r5,a
07D8 E581      1975            mov     a,sp
07DA 24FC      1976            add     a,#0xfc
07DC F581      1977            mov     sp,a
07DE 74CD      1978            mov     a,#0xCD
07E0 C0E0      1979            push    acc
07E2 74CC      1980            mov     a,#0xCC
07E4 C0E0      1981            push    acc
07E6 748C      1982            mov     a,#0x8C
07E8 C0E0      1983            push    acc
07EA 743F      1984            mov     a,#0x3F
07EC C0E0      1985            push    acc
07EE 8A82      1986            mov     dpl,r2
07F0 8B83      1987            mov     dph,r3
07F2 8CF0      1988            mov     b,r4
07F4 ED        1989            mov     a,r5
07F5 120100    1990            lcall   ___fsgt
07F8 AA82      1991            mov     r2,dpl
07FA E581      1992            mov     a,sp
07FC 24FC      1993            add     a,#0xfc
07FE F581      1994            mov     sp,a
0800 EA        1995            mov     a,r2
0801 6001      1996            jz      L021010?
0803           1997   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:474: pwm_RED0=2*power;
0803 E528      1998            mov     a,_power
0805 25E0      1999            add     a,acc
0807 F568      2000            mov     _pwm_RED0,a
0809           2001   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:475: pwm_RED1=0;
0809 752800    2002            mov     _pwm_RED1,#0x00
080C           2003   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:476: pwm_BLU0=0;
080C 75E800    2004            mov     _pwm_BLU0,#0x00
080F           2005   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:477: pwm_BLU1=0;
080F 75A800    2006            mov     _pwm_BLU1,#0x00
0812 22        2007            ret
0813           2008   L021010?:
0813           2009   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:481: pwm_BLU0= power;
0813 8528E8    2010            mov     _pwm_BLU0,_power
0816           2011   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:482: pwm_BLU1 = 0;
0816 75A800    2012            mov     _pwm_BLU1,#0x00
0819           2013   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:483: pwm_RED0 = 0;
0819 756800    2014            mov     _pwm_RED0,#0x00
081C           2015   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:484: pwm_RED1 = 0; 
081C 752800    2016            mov     _pwm_RED1,#0x00
081F 22        2017            ret
0820           2018   L021020?:
0820           2019   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:488: else if(IndVolts[1] > Vred_thresh + 0.1 || IndVolts[0]/IndVolts[1] < 1){
0820 7491      2020            mov     a,#0x91
0822 C0E0      2021            push    acc
0824 74ED      2022            mov     a,#0xED
0826 C0E0      2023            push    acc
0828 741C      2024            mov     a,#0x1C
082A C0E0      2025            push    acc
082C 743E      2026            mov     a,#0x3E
082E C0E0      2027            push    acc
0830 85E882    2028            mov     dpl,_MotorControl_sloc2_1_0
0833 85E983    2029            mov     dph,(_MotorControl_sloc2_1_0 + 1)
0836 85EAF0    2030            mov     b,(_MotorControl_sloc2_1_0 + 2)
0839 E5EB      2031            mov     a,(_MotorControl_sloc2_1_0 + 3)
083B 120100    2032            lcall   ___fsgt
083E AA82      2033            mov     r2,dpl
0840 E581      2034            mov     a,sp
0842 24FC      2035            add     a,#0xfc
0844 F581      2036            mov     sp,a
0846 EA        2037            mov     a,r2
0847 7001      2038            jnz     L021015?
0849 C0E0      2039            push    acc
084B C0E0      2040            push    acc
084D 7480      2041            mov     a,#0x80
084F C0E0      2042            push    acc
0851 743F      2043            mov     a,#0x3F
0853 C0E0      2044            push    acc
0855 859882    2045            mov     dpl,_MotorControl_sloc1_1_0
0858 859983    2046            mov     dph,(_MotorControl_sloc1_1_0 + 1)
085B 859AF0    2047            mov     b,(_MotorControl_sloc1_1_0 + 2)
085E E59B      2048            mov     a,(_MotorControl_sloc1_1_0 + 3)
0860 120100    2049            lcall   ___fslt
0863 AA82      2050            mov     r2,dpl
0865 E581      2051            mov     a,sp
0867 24FC      2052            add     a,#0xfc
0869 F581      2053            mov     sp,a
086B EA        2054            mov     a,r2
086C 6001      2055            jz      L021016?
086E           2056   L021015?:
086E           2057   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:489: if (IndVolts[0]/IndVolts[1]<0.8){
086E 74CD      2058            mov     a,#0xCD
0870 C0E0      2059            push    acc
0872 74CC      2060            mov     a,#0xCC
0874 C0E0      2061            push    acc
0876 744C      2062            mov     a,#0x4C
0878 C0E0      2063            push    acc
087A 743F      2064            mov     a,#0x3F
087C C0E0      2065            push    acc
087E 859882    2066            mov     dpl,_MotorControl_sloc1_1_0
0881 859983    2067            mov     dph,(_MotorControl_sloc1_1_0 + 1)
0884 859AF0    2068            mov     b,(_MotorControl_sloc1_1_0 + 2)
0887 E59B      2069            mov     a,(_MotorControl_sloc1_1_0 + 3)
0889 120100    2070            lcall   ___fslt
088C AA82      2071            mov     r2,dpl
088E E581      2072            mov     a,sp
0890 24FC      2073            add     a,#0xfc
0892 F581      2074            mov     sp,a
0894 EA        2075            mov     a,r2
0895 6001      2076            jz      L021013?
0897           2077   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:490: pwm_RED0=0;
0897           2078   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:491: pwm_RED1=0;
0897           2079   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:492: pwm_BLU0=2*power;
0897 E4        2080            clr     a
0898 F568      2081            mov     _pwm_RED0,a
089A F528      2082            mov     _pwm_RED1,a
089C E528      2083            mov     a,_power
089E 25E0      2084            add     a,acc
08A0 F5E8      2085            mov     _pwm_BLU0,a
08A2           2086   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:493: pwm_BLU1=0;
08A2 75A800    2087            mov     _pwm_BLU1,#0x00
08A5 22        2088            ret
08A6           2089   L021013?:
08A6           2090   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:497: pwm_BLU0=0;
08A6 75E800    2091            mov     _pwm_BLU0,#0x00
08A9           2092   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:498: pwm_BLU1=0;
08A9 75A800    2093            mov     _pwm_BLU1,#0x00
08AC           2094   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:499: pwm_RED0=power;
08AC 852868    2095            mov     _pwm_RED0,_power
08AF           2096   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:500: pwm_RED1=0;
08AF 752800    2097            mov     _pwm_RED1,#0x00
08B2 22        2098            ret
08B3           2099   L021016?:
08B3           2100   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:504: pwm_BLU0 = power;
08B3 8528E8    2101            mov     _pwm_BLU0,_power
08B6           2102   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:505: pwm_BLU1 = 0;
08B6 75A800    2103            mov     _pwm_BLU1,#0x00
08B9           2104   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:506: pwm_RED0 = power;
08B9 852868    2105            mov     _pwm_RED0,_power
08BC           2106   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:507: pwm_RED1 = 0;
08BC 752800    2107            mov     _pwm_RED1,#0x00
08BF           2108   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:509: break;
08BF           2109   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:513: case STOP:
08BF 22        2110            ret
08C0           2111   L021023?:
08C0           2112   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:514: pwm_BLU1 = 0;
08C0 75A800    2113            mov     _pwm_BLU1,#0x00
08C3           2114   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:515: pwm_BLU0 = 0;
08C3 75E800    2115            mov     _pwm_BLU0,#0x00
08C6           2116   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:516: pwm_RED1 = 0;
08C6 752800    2117            mov     _pwm_RED1,#0x00
08C9           2118   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:517: pwm_RED0 = 0;
08C9 756800    2119            mov     _pwm_RED0,#0x00
08CC           2120   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:524: }
08CC 22        2121            ret
08CD           2122   ;------------------------------------------------------------
08CD           2123   ;Allocation info for local variables in function 'DebuggingFctn'
08CD           2124   ;------------------------------------------------------------
08CD           2125   ;------------------------------------------------------------
08CD           2126   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:535: void DebuggingFctn (void)
08CD           2127   ;        -----------------------------------------
08CD           2128   ;         function DebuggingFctn
08CD           2129   ;        -----------------------------------------
08CD           2130   _DebuggingFctn:
08CD           2131   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:538: sprintf(freqstring, "FREQ=%5.3fHZ", frequency);
08CD C080      2132            push    _frequency
08CF C081      2133            push    (_frequency + 1)
08D1 C082      2134            push    (_frequency + 2)
08D3 C083      2135            push    (_frequency + 3)
08D5 7408      2136            mov     a,#__str_1
08D7 C0E0      2137            push    acc
08D9 74B1      2138            mov     a,#(__str_1 >> 8)
08DB C0E0      2139            push    acc
08DD 7480      2140            mov     a,#0x80
08DF C0E0      2141            push    acc
08E1 74C0      2142            mov     a,#_freqstring
08E3 C0E0      2143            push    acc
08E5 7417      2144            mov     a,#(_freqstring >> 8)
08E7 C0E0      2145            push    acc
08E9 7440      2146            mov     a,#0x40
08EB C0E0      2147            push    acc
08ED 120100    2148            lcall   _sprintf
08F0 E581      2149            mov     a,sp
08F2 24F6      2150            add     a,#0xf6
08F4 F581      2151            mov     sp,a
08F6           2152   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:539: LCDprint(freqstring, 1,1);
08F6 758001    2153            mov     _LCDprint_PARM_2,#0x01
08F9 D230      2154            setb    _LCDprint_PARM_3
08FB 9017C0    2155            mov     dptr,#_freqstring
08FE 75F040    2156            mov     b,#0x40
0901 020100    2157            ljmp    _LCDprint
0904           2158   ;------------------------------------------------------------
0904           2159   ;Allocation info for local variables in function 'main'
0904           2160   ;------------------------------------------------------------
0904           2161   ;IndVolts                  Allocated with name '_main_IndVolts_1_109'
0904           2162   ;------------------------------------------------------------
0904           2163   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:546: void main (void)
0904           2164   ;        -----------------------------------------
0904           2165   ;         function main
0904           2166   ;        -----------------------------------------
0904           2167   _main:
0904           2168   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:553: TIMER0_Init(); // Initialize timer 0 to read the frequency of the fm signal
0904 120100    2169            lcall   _TIMER0_Init
0907           2170   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:554: TIMER2_Init(); // Initialize timer 2 for periodic interrupts used for motor control
0907 120100    2171            lcall   _TIMER2_Init
090A           2172   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:555: LCD_4BIT(); // Initialize the LCD
090A 120100    2173            lcall   _LCD_4BIT
090D           2174   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:556: EA=1; // Enable interrupts
090D D2AF      2175            setb    _EA
090F           2176   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:558: InitPinADC(1, 4); // Configure P1.4 as analog input
090F 755004    2177            mov     _InitPinADC_PARM_2,#0x04
0912 758201    2178            mov     dpl,#0x01
0915 120100    2179            lcall   _InitPinADC
0918           2180   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:559: InitPinADC(2, 0); // Configure P2.0 as analog input
0918 755000    2181            mov     _InitPinADC_PARM_2,#0x00
091B 758202    2182            mov     dpl,#0x02
091E 120100    2183            lcall   _InitPinADC
0921           2184   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:560: InitPinADC(2, 7); // Configure P2.7 as analog input
0921 755007    2185            mov     _InitPinADC_PARM_2,#0x07
0924 758202    2186            mov     dpl,#0x02
0927 120100    2187            lcall   _InitPinADC
092A           2188   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:561: InitADC();
092A 120100    2189            lcall   _InitADC
092D           2190   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:562: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
092D 7488      2191            mov     a,#__str_2
092F C0E0      2192            push    acc
0931 74B1      2193            mov     a,#(__str_2 >> 8)
0933 C0E0      2194            push    acc
0935 7480      2195            mov     a,#0x80
0937 C0E0      2196            push    acc
0939 120100    2197            lcall   _printf
093C 1581      2198            dec     sp
093E 1581      2199            dec     sp
0940 1581      2200            dec     sp
0942           2201   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:570: while(1)
0942           2202   L023006?:
0942           2203   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:574: if (millisecond%600==0){
0942 750058    2204            mov     __moduint_PARM_2,#0x58
0945 750102    2205            mov     (__moduint_PARM_2 + 1),#0x02
0948 850082    2206            mov     dpl,_millisecond
094B 850183    2207            mov     dph,(_millisecond + 1)
094E 120100    2208            lcall   __moduint
0951 E582      2209            mov     a,dpl
0953 8583F0    2210            mov     b,dph
0956 45F0      2211            orl     a,b
0958 7001      2212            jnz     L023002?
095A           2213   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:575: DetermineMode();
095A 120100    2214            lcall   _DetermineMode
095D           2215   L023002?:
095D           2216   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:579: IndVolts[0] = Volts_at_Pin(LQFP32_MUX_P2_7);
095D 75820F    2217            mov     dpl,#0x0F
0960 120100    2218            lcall   _Volts_at_Pin
0963 AA82      2219            mov     r2,dpl
0965 AB83      2220            mov     r3,dph
0967 ACF0      2221            mov     r4,b
0969 FD        2222            mov     r5,a
096A 8A38      2223            mov     _main_IndVolts_1_109,r2
096C 8B39      2224            mov     (_main_IndVolts_1_109 + 1),r3
096E 8C3A      2225            mov     (_main_IndVolts_1_109 + 2),r4
0970 8D3B      2226            mov     (_main_IndVolts_1_109 + 3),r5
0972           2227   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:580: IndVolts[1] = Volts_at_Pin(LQFP32_MUX_P1_4);
0972 758204    2228            mov     dpl,#0x04
0975 120100    2229            lcall   _Volts_at_Pin
0978 AA82      2230            mov     r2,dpl
097A AB83      2231            mov     r3,dph
097C ACF0      2232            mov     r4,b
097E FD        2233            mov     r5,a
097F 8A3C      2234            mov     (_main_IndVolts_1_109 + 0x0004),r2
0981 8B3D      2235            mov     ((_main_IndVolts_1_109 + 0x0004) + 1),r3
0983 8C3E      2236            mov     ((_main_IndVolts_1_109 + 0x0004) + 2),r4
0985 8D3F      2237            mov     ((_main_IndVolts_1_109 + 0x0004) + 3),r5
0987           2238   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:581: IndVolts[2] = Volts_at_Pin(LQFP32_MUX_P2_0);
0987 758208    2239            mov     dpl,#0x08
098A 120100    2240            lcall   _Volts_at_Pin
098D AA82      2241            mov     r2,dpl
098F AB83      2242            mov     r3,dph
0991 ACF0      2243            mov     r4,b
0993 FD        2244            mov     r5,a
0994 8A40      2245            mov     (_main_IndVolts_1_109 + 0x0008),r2
0996 8B41      2246            mov     ((_main_IndVolts_1_109 + 0x0008) + 1),r3
0998 8C42      2247            mov     ((_main_IndVolts_1_109 + 0x0008) + 2),r4
099A 8D43      2248            mov     ((_main_IndVolts_1_109 + 0x0008) + 3),r5
099C           2249   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:585: MotorControl(IndVolts);
099C 909E38    2250            mov     dptr,#_main_IndVolts_1_109
099F 75F040    2251            mov     b,#0x40
09A2 120100    2252            lcall   _MotorControl
09A5           2253   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:588: if (millisecond%600==0){
09A5 750058    2254            mov     __moduint_PARM_2,#0x58
09A8 750102    2255            mov     (__moduint_PARM_2 + 1),#0x02
09AB 850082    2256            mov     dpl,_millisecond
09AE 850183    2257            mov     dph,(_millisecond + 1)
09B1 120100    2258            lcall   __moduint
09B4 E582      2259            mov     a,dpl
09B6 8583F0    2260            mov     b,dph
09B9 45F0      2261            orl     a,b
09BB 7001      2262            jnz     L023004?
09BD           2263   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:589: DebuggingFctn();
09BD 120100    2264            lcall   _DebuggingFctn
09C0           2265   L023004?:
09C0           2266   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:593: waitms(20);
09C0 900014    2267            mov     dptr,#0x0014
09C3 120100    2268            lcall   _waitms
09C6           2269   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:594: millisecond = millisecond + 20;
09C6 7414      2270            mov     a,#0x14
09C8 2500      2271            add     a,_millisecond
09CA F500      2272            mov     _millisecond,a
09CC E4        2273            clr     a
09CD 3501      2274            addc    a,(_millisecond + 1)
09CF F501      2275            mov     (_millisecond + 1),a
09D1 020100    2276            ljmp    L023006?
09D4           2277            rseg R_CSEG
09D4           2278   
0000           2279            rseg R_XINIT
0000           2280   
0000           2281            rseg R_CONST
0000           2282   __str_0:
0000 20202020  2283            db '                '
     20202020
     20202020
     20202020
0010 00        2284            db 0x00
0011           2285   __str_1:
0011 46524551  2286            db 'FREQ=%5.3fHZ'
     3D25352E
     3366485A
001D 00        2287            db 0x00
001E           2288   __str_2:
001E 1B        2289            db 0x1B
001F 5B324A    2290            db '[2J'
0022 00        2291            db 0x00
0023           2292   
002E           2293            CSEG
002E           2294   
002E           2295   end
