0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Mon Apr 03 11:26:18 2017
0000              5   ;--------------------------------------------------------
                  5   $name Receiver
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _DebuggingFctn
0000             30            public _MotorControl
0000             31            public _DetermineMode
0000             32            public _ReadFrequency
0000             33            public _Timer2_ISR
0000             34            public _Volts_at_Pin
0000             35            public _ADC_at_Pin
0000             36            public _InitPinADC
0000             37            public _InitADC
0000             38            public _TIMER2_Init
0000             39            public _TIMER0_Init
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public __c51_external_startup
0000             43            public _millisecond
0000             44            public _StopSigCount
0000             45            public _ForwardSigCount
0000             46            public _WriteCount
0000             47            public _FreqBuffer
0000             48            public _mode
0000             49            public _frequency
0000             50            public _overflow_count
0000             51            public _dirout
0000             52            public _pwm_RED1
0000             53            public _pwm_RED0
0000             54            public _pwm_BLU1
0000             55            public _pwm_BLU0
0000             56            public _power
0000             57            public _pwm_count
0000             58   ;--------------------------------------------------------
0000             59   ; Special Function Registers
0000             60   ;--------------------------------------------------------
0000             61   _P0             DATA 0x80
0000             62   _SP             DATA 0x81
0000             63   _DPL            DATA 0x82
0000             64   _DPH            DATA 0x83
0000             65   _EMI0TC         DATA 0x84
0000             66   _EMI0CF         DATA 0x85
0000             67   _OSCLCN         DATA 0x86
0000             68   _PCON           DATA 0x87
0000             69   _TCON           DATA 0x88
0000             70   _TMOD           DATA 0x89
0000             71   _TL0            DATA 0x8a
0000             72   _TL1            DATA 0x8b
0000             73   _TH0            DATA 0x8c
0000             74   _TH1            DATA 0x8d
0000             75   _CKCON          DATA 0x8e
0000             76   _PSCTL          DATA 0x8f
0000             77   _P1             DATA 0x90
0000             78   _TMR3CN         DATA 0x91
0000             79   _TMR4CN         DATA 0x91
0000             80   _TMR3RLL        DATA 0x92
0000             81   _TMR4RLL        DATA 0x92
0000             82   _TMR3RLH        DATA 0x93
0000             83   _TMR4RLH        DATA 0x93
0000             84   _TMR3L          DATA 0x94
0000             85   _TMR4L          DATA 0x94
0000             86   _TMR3H          DATA 0x95
0000             87   _TMR4H          DATA 0x95
0000             88   _USB0ADR        DATA 0x96
0000             89   _USB0DAT        DATA 0x97
0000             90   _SCON           DATA 0x98
0000             91   _SCON0          DATA 0x98
0000             92   _SBUF           DATA 0x99
0000             93   _SBUF0          DATA 0x99
0000             94   _CPT1CN         DATA 0x9a
0000             95   _CPT0CN         DATA 0x9b
0000             96   _CPT1MD         DATA 0x9c
0000             97   _CPT0MD         DATA 0x9d
0000             98   _CPT1MX         DATA 0x9e
0000             99   _CPT0MX         DATA 0x9f
0000            100   _P2             DATA 0xa0
0000            101   _SPI0CFG        DATA 0xa1
0000            102   _SPI0CKR        DATA 0xa2
0000            103   _SPI0DAT        DATA 0xa3
0000            104   _P0MDOUT        DATA 0xa4
0000            105   _P1MDOUT        DATA 0xa5
0000            106   _P2MDOUT        DATA 0xa6
0000            107   _P3MDOUT        DATA 0xa7
0000            108   _IE             DATA 0xa8
0000            109   _CLKSEL         DATA 0xa9
0000            110   _EMI0CN         DATA 0xaa
0000            111   __XPAGE         DATA 0xaa
0000            112   _SBCON1         DATA 0xac
0000            113   _P4MDOUT        DATA 0xae
0000            114   _PFE0CN         DATA 0xaf
0000            115   _P3             DATA 0xb0
0000            116   _OSCXCN         DATA 0xb1
0000            117   _OSCICN         DATA 0xb2
0000            118   _OSCICL         DATA 0xb3
0000            119   _SBRLL1         DATA 0xb4
0000            120   _SBRLH1         DATA 0xb5
0000            121   _FLSCL          DATA 0xb6
0000            122   _FLKEY          DATA 0xb7
0000            123   _IP             DATA 0xb8
0000            124   _CLKMUL         DATA 0xb9
0000            125   _SMBTC          DATA 0xb9
0000            126   _AMX0N          DATA 0xba
0000            127   _AMX0P          DATA 0xbb
0000            128   _ADC0CF         DATA 0xbc
0000            129   _ADC0L          DATA 0xbd
0000            130   _ADC0H          DATA 0xbe
0000            131   _SFRPAGE        DATA 0xbf
0000            132   _SMB0CN         DATA 0xc0
0000            133   _SMB1CN         DATA 0xc0
0000            134   _SMB0CF         DATA 0xc1
0000            135   _SMB1CF         DATA 0xc1
0000            136   _SMB0DAT        DATA 0xc2
0000            137   _SMB1DAT        DATA 0xc2
0000            138   _ADC0GTL        DATA 0xc3
0000            139   _ADC0GTH        DATA 0xc4
0000            140   _ADC0LTL        DATA 0xc5
0000            141   _ADC0LTH        DATA 0xc6
0000            142   _P4             DATA 0xc7
0000            143   _TMR2CN         DATA 0xc8
0000            144   _TMR5CN         DATA 0xc8
0000            145   _REG01CN        DATA 0xc9
0000            146   _TMR2RLL        DATA 0xca
0000            147   _TMR5RLL        DATA 0xca
0000            148   _TMR2RLH        DATA 0xcb
0000            149   _TMR5RLH        DATA 0xcb
0000            150   _TMR2L          DATA 0xcc
0000            151   _TMR5L          DATA 0xcc
0000            152   _TMR2H          DATA 0xcd
0000            153   _TMR5H          DATA 0xcd
0000            154   _SMB0ADM        DATA 0xce
0000            155   _SMB1ADM        DATA 0xce
0000            156   _SMB0ADR        DATA 0xcf
0000            157   _SMB1ADR        DATA 0xcf
0000            158   _PSW            DATA 0xd0
0000            159   _REF0CN         DATA 0xd1
0000            160   _SCON1          DATA 0xd2
0000            161   _SBUF1          DATA 0xd3
0000            162   _P0SKIP         DATA 0xd4
0000            163   _P1SKIP         DATA 0xd5
0000            164   _P2SKIP         DATA 0xd6
0000            165   _USB0XCN        DATA 0xd7
0000            166   _PCA0CN         DATA 0xd8
0000            167   _PCA0MD         DATA 0xd9
0000            168   _PCA0CPM0       DATA 0xda
0000            169   _PCA0CPM1       DATA 0xdb
0000            170   _PCA0CPM2       DATA 0xdc
0000            171   _PCA0CPM3       DATA 0xdd
0000            172   _PCA0CPM4       DATA 0xde
0000            173   _P3SKIP         DATA 0xdf
0000            174   _ACC            DATA 0xe0
0000            175   _XBR0           DATA 0xe1
0000            176   _XBR1           DATA 0xe2
0000            177   _XBR2           DATA 0xe3
0000            178   _IT01CF         DATA 0xe4
0000            179   _CKCON1         DATA 0xe4
0000            180   _SMOD1          DATA 0xe5
0000            181   _EIE1           DATA 0xe6
0000            182   _EIE2           DATA 0xe7
0000            183   _ADC0CN         DATA 0xe8
0000            184   _PCA0CPL1       DATA 0xe9
0000            185   _PCA0CPH1       DATA 0xea
0000            186   _PCA0CPL2       DATA 0xeb
0000            187   _PCA0CPH2       DATA 0xec
0000            188   _PCA0CPL3       DATA 0xed
0000            189   _PCA0CPH3       DATA 0xee
0000            190   _RSTSRC         DATA 0xef
0000            191   _B              DATA 0xf0
0000            192   _P0MDIN         DATA 0xf1
0000            193   _P1MDIN         DATA 0xf2
0000            194   _P2MDIN         DATA 0xf3
0000            195   _P3MDIN         DATA 0xf4
0000            196   _P4MDIN         DATA 0xf5
0000            197   _EIP1           DATA 0xf6
0000            198   _EIP2           DATA 0xf7
0000            199   _SPI0CN         DATA 0xf8
0000            200   _PCA0L          DATA 0xf9
0000            201   _PCA0H          DATA 0xfa
0000            202   _PCA0CPL0       DATA 0xfb
0000            203   _PCA0CPH0       DATA 0xfc
0000            204   _PCA0CPL4       DATA 0xfd
0000            205   _PCA0CPH4       DATA 0xfe
0000            206   _VDM0CN         DATA 0xff
0000            207   _DPTR           DATA 0x8382
0000            208   _TMR2RL         DATA 0xcbca
0000            209   _TMR3RL         DATA 0x9392
0000            210   _TMR4RL         DATA 0x9392
0000            211   _TMR5RL         DATA 0xcbca
0000            212   _TMR2           DATA 0xcdcc
0000            213   _TMR3           DATA 0x9594
0000            214   _TMR4           DATA 0x9594
0000            215   _TMR5           DATA 0xcdcc
0000            216   _SBRL1          DATA 0xb5b4
0000            217   _ADC0           DATA 0xbebd
0000            218   _ADC0GT         DATA 0xc4c3
0000            219   _ADC0LT         DATA 0xc6c5
0000            220   _PCA0           DATA 0xfaf9
0000            221   _PCA0CP1        DATA 0xeae9
0000            222   _PCA0CP2        DATA 0xeceb
0000            223   _PCA0CP3        DATA 0xeeed
0000            224   _PCA0CP0        DATA 0xfcfb
0000            225   _PCA0CP4        DATA 0xfefd
0000            226   ;--------------------------------------------------------
0000            227   ; special function bits
0000            228   ;--------------------------------------------------------
0000            229   _P0_0           BIT 0x80
0000            230   _P0_1           BIT 0x81
0000            231   _P0_2           BIT 0x82
0000            232   _P0_3           BIT 0x83
0000            233   _P0_4           BIT 0x84
0000            234   _P0_5           BIT 0x85
0000            235   _P0_6           BIT 0x86
0000            236   _P0_7           BIT 0x87
0000            237   _TF1            BIT 0x8f
0000            238   _TR1            BIT 0x8e
0000            239   _TF0            BIT 0x8d
0000            240   _TR0            BIT 0x8c
0000            241   _IE1            BIT 0x8b
0000            242   _IT1            BIT 0x8a
0000            243   _IE0            BIT 0x89
0000            244   _IT0            BIT 0x88
0000            245   _P1_0           BIT 0x90
0000            246   _P1_1           BIT 0x91
0000            247   _P1_2           BIT 0x92
0000            248   _P1_3           BIT 0x93
0000            249   _P1_4           BIT 0x94
0000            250   _P1_5           BIT 0x95
0000            251   _P1_6           BIT 0x96
0000            252   _P1_7           BIT 0x97
0000            253   _S0MODE         BIT 0x9f
0000            254   _SCON0_6        BIT 0x9e
0000            255   _MCE0           BIT 0x9d
0000            256   _REN0           BIT 0x9c
0000            257   _TB80           BIT 0x9b
0000            258   _RB80           BIT 0x9a
0000            259   _TI0            BIT 0x99
0000            260   _RI0            BIT 0x98
0000            261   _SCON_6         BIT 0x9e
0000            262   _MCE            BIT 0x9d
0000            263   _REN            BIT 0x9c
0000            264   _TB8            BIT 0x9b
0000            265   _RB8            BIT 0x9a
0000            266   _TI             BIT 0x99
0000            267   _RI             BIT 0x98
0000            268   _P2_0           BIT 0xa0
0000            269   _P2_1           BIT 0xa1
0000            270   _P2_2           BIT 0xa2
0000            271   _P2_3           BIT 0xa3
0000            272   _P2_4           BIT 0xa4
0000            273   _P2_5           BIT 0xa5
0000            274   _P2_6           BIT 0xa6
0000            275   _P2_7           BIT 0xa7
0000            276   _EA             BIT 0xaf
0000            277   _ESPI0          BIT 0xae
0000            278   _ET2            BIT 0xad
0000            279   _ES0            BIT 0xac
0000            280   _ET1            BIT 0xab
0000            281   _EX1            BIT 0xaa
0000            282   _ET0            BIT 0xa9
0000            283   _EX0            BIT 0xa8
0000            284   _P3_0           BIT 0xb0
0000            285   _P3_1           BIT 0xb1
0000            286   _P3_2           BIT 0xb2
0000            287   _P3_3           BIT 0xb3
0000            288   _P3_4           BIT 0xb4
0000            289   _P3_5           BIT 0xb5
0000            290   _P3_6           BIT 0xb6
0000            291   _P3_7           BIT 0xb7
0000            292   _IP_7           BIT 0xbf
0000            293   _PSPI0          BIT 0xbe
0000            294   _PT2            BIT 0xbd
0000            295   _PS0            BIT 0xbc
0000            296   _PT1            BIT 0xbb
0000            297   _PX1            BIT 0xba
0000            298   _PT0            BIT 0xb9
0000            299   _PX0            BIT 0xb8
0000            300   _MASTER0        BIT 0xc7
0000            301   _TXMODE0        BIT 0xc6
0000            302   _STA0           BIT 0xc5
0000            303   _STO0           BIT 0xc4
0000            304   _ACKRQ0         BIT 0xc3
0000            305   _ARBLOST0       BIT 0xc2
0000            306   _ACK0           BIT 0xc1
0000            307   _SI0            BIT 0xc0
0000            308   _MASTER1        BIT 0xc7
0000            309   _TXMODE1        BIT 0xc6
0000            310   _STA1           BIT 0xc5
0000            311   _STO1           BIT 0xc4
0000            312   _ACKRQ1         BIT 0xc3
0000            313   _ARBLOST1       BIT 0xc2
0000            314   _ACK1           BIT 0xc1
0000            315   _SI1            BIT 0xc0
0000            316   _TF2            BIT 0xcf
0000            317   _TF2H           BIT 0xcf
0000            318   _TF2L           BIT 0xce
0000            319   _TF2LEN         BIT 0xcd
0000            320   _TF2CEN         BIT 0xcc
0000            321   _T2SPLIT        BIT 0xcb
0000            322   _TR2            BIT 0xca
0000            323   _T2CSS          BIT 0xc9
0000            324   _T2XCLK         BIT 0xc8
0000            325   _TF5H           BIT 0xcf
0000            326   _TF5L           BIT 0xce
0000            327   _TF5LEN         BIT 0xcd
0000            328   _TMR5CN_4       BIT 0xcc
0000            329   _T5SPLIT        BIT 0xcb
0000            330   _TR5            BIT 0xca
0000            331   _TMR5CN_1       BIT 0xc9
0000            332   _T5XCLK         BIT 0xc8
0000            333   _CY             BIT 0xd7
0000            334   _AC             BIT 0xd6
0000            335   _F0             BIT 0xd5
0000            336   _RS1            BIT 0xd4
0000            337   _RS0            BIT 0xd3
0000            338   _OV             BIT 0xd2
0000            339   _F1             BIT 0xd1
0000            340   _PARITY         BIT 0xd0
0000            341   _CF             BIT 0xdf
0000            342   _CR             BIT 0xde
0000            343   _PCA0CN_5       BIT 0xde
0000            344   _CCF4           BIT 0xdc
0000            345   _CCF3           BIT 0xdb
0000            346   _CCF2           BIT 0xda
0000            347   _CCF1           BIT 0xd9
0000            348   _CCF0           BIT 0xd8
0000            349   _ACC_7          BIT 0xe7
0000            350   _ACC_6          BIT 0xe6
0000            351   _ACC_5          BIT 0xe5
0000            352   _ACC_4          BIT 0xe4
0000            353   _ACC_3          BIT 0xe3
0000            354   _ACC_2          BIT 0xe2
0000            355   _ACC_1          BIT 0xe1
0000            356   _ACC_0          BIT 0xe0
0000            357   _AD0EN          BIT 0xef
0000            358   _AD0TM          BIT 0xee
0000            359   _AD0INT         BIT 0xed
0000            360   _AD0BUSY        BIT 0xec
0000            361   _AD0WINT        BIT 0xeb
0000            362   _AD0CM2         BIT 0xea
0000            363   _AD0CM1         BIT 0xe9
0000            364   _AD0CM0         BIT 0xe8
0000            365   _B_7            BIT 0xf7
0000            366   _B_6            BIT 0xf6
0000            367   _B_5            BIT 0xf5
0000            368   _B_4            BIT 0xf4
0000            369   _B_3            BIT 0xf3
0000            370   _B_2            BIT 0xf2
0000            371   _B_1            BIT 0xf1
0000            372   _B_0            BIT 0xf0
0000            373   _SPIF           BIT 0xff
0000            374   _WCOL           BIT 0xfe
0000            375   _MODF           BIT 0xfd
0000            376   _RXOVRN         BIT 0xfc
0000            377   _NSSMD1         BIT 0xfb
0000            378   _NSSMD0         BIT 0xfa
0000            379   _TXBMT          BIT 0xf9
0000            380   _SPIEN          BIT 0xf8
0000            381   ;--------------------------------------------------------
0000            382   ; overlayable register banks
0000            383   ;--------------------------------------------------------
0000            384            rbank0 segment data overlay
0000            385   ;--------------------------------------------------------
0000            386   ; internal ram data
0000            387   ;--------------------------------------------------------
0000            388            rseg R_DSEG
0000            389   _pwm_count:
0000            390            ds 1
0001            391   _power:
0001            392            ds 1
0002            393   _pwm_BLU0:
0002            394            ds 1
0003            395   _pwm_BLU1:
0003            396            ds 1
0004            397   _pwm_RED0:
0004            398            ds 1
0005            399   _pwm_RED1:
0005            400            ds 1
0006            401   _dirout:
0006            402            ds 1
0007            403   _overflow_count:
0007            404            ds 1
0008            405   _frequency:
0008            406            ds 4
000C            407   _mode:
000C            408            ds 2
000E            409   _FreqBuffer:
000E            410            ds 16
001E            411   _WriteCount:
001E            412            ds 1
001F            413   _ForwardSigCount:
001F            414            ds 1
0020            415   _StopSigCount:
0020            416            ds 1
0021            417   _millisecond:
0021            418            ds 2
0023            419   _MotorControl_IndVolts_1_80:
0023            420            ds 3
0026            421   _MotorControl_sloc0_1_0:
0026            422            ds 3
0029            423   _MotorControl_sloc1_1_0:
0029            424            ds 4
002D            425   _MotorControl_sloc2_1_0:
002D            426            ds 4
0031            427   _MotorControl_sloc3_1_0:
0031            428            ds 4
0035            429   _DebuggingFctn_IndVolts_1_97:
0035            430            ds 3
0038            431   _main_IndVolts_1_100:
0038            432            ds 12
0044            433   ;--------------------------------------------------------
0044            434   ; overlayable items in internal ram 
0044            435   ;--------------------------------------------------------
0000            436            rseg    R_OSEG
0000            437            rseg    R_OSEG
0000            438   _InitPinADC_PARM_2:
0000            439            ds 1
0001            440            rseg    R_OSEG
0001            441   ;--------------------------------------------------------
0001            442   ; indirectly addressable internal ram data
0001            443   ;--------------------------------------------------------
0000            444            rseg R_ISEG
0000            445   ;--------------------------------------------------------
0000            446   ; absolute internal ram data
0000            447   ;--------------------------------------------------------
0000            448            DSEG
0000            449   ;--------------------------------------------------------
0000            450   ; bit data
0000            451   ;--------------------------------------------------------
0000            452            rseg R_BSEG
0000            453   _Timer2_ISR_sloc0_1_0:
0000            454            DBIT    1
0001            455   ;--------------------------------------------------------
0001            456   ; paged external ram data
0001            457   ;--------------------------------------------------------
0000            458            rseg R_PSEG
0000            459   ;--------------------------------------------------------
0000            460   ; external ram data
0000            461   ;--------------------------------------------------------
0000            462            rseg R_XSEG
0000            463   ;--------------------------------------------------------
0000            464   ; absolute external ram data
0000            465   ;--------------------------------------------------------
0000            466            XSEG
0000            467   ;--------------------------------------------------------
0000            468   ; external initialized ram data
0000            469   ;--------------------------------------------------------
0000            470            rseg R_IXSEG
0000            471            rseg R_HOME
0000            472            rseg R_GSINIT
0000            473            rseg R_CSEG
0000            474   ;--------------------------------------------------------
0000            475   ; Reset entry point and interrupt vectors
0000            476   ;--------------------------------------------------------
0000            477            CSEG at 0x0000
0000 020100     478            ljmp    _crt0
002B            479            CSEG at 0x002b
002B 020100     480            ljmp    _Timer2_ISR
002E            481   ;--------------------------------------------------------
002E            482   ; global & static initialisations
002E            483   ;--------------------------------------------------------
0000            484            rseg R_HOME
0000            485            rseg R_GSINIT
0000            486            rseg R_GSINIT
0000            487   ;--------------------------------------------------------
0000            488   ; data variables initialization
0000            489   ;--------------------------------------------------------
0000            490            rseg R_DINIT
0000            491   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:46: volatile unsigned char pwm_count=0;
0000 75B800     492            mov     _pwm_count,#0x00
0003            493   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:47: volatile unsigned char power=30;
0003 75781E     494            mov     _power,#0x1E
0006            495   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:48: volatile unsigned char pwm_BLU0=0;
0006 757000     496            mov     _pwm_BLU0,#0x00
0009            497   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:49: volatile unsigned char pwm_BLU1=0;
0009 753000     498            mov     _pwm_BLU1,#0x00
000C            499   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:50: volatile unsigned char pwm_RED0=0;
000C 75F000     500            mov     _pwm_RED0,#0x00
000F            501   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:51: volatile unsigned char pwm_RED1=0;
000F 75B000     502            mov     _pwm_RED1,#0x00
0012            503   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:52: volatile unsigned char dirout=0;
0012 757000     504            mov     _dirout,#0x00
0015            505   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:53: volatile unsigned char overflow_count=0;
0015 753000     506            mov     _overflow_count,#0x00
0018            507   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:54: volatile float frequency=0;
0018 75F000     508            mov     _frequency,#0x00
001B 75F100     509            mov     (_frequency + 1),#0x00
001E 75F200     510            mov     (_frequency + 2),#0x00
0021 75F300     511            mov     (_frequency + 3),#0x00
0024            512   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:55: unsigned int mode=STOP;
0024 E4         513            clr     a
0025 F5B0       514            mov     _mode,a
0027 F5B1       515            mov     (_mode + 1),a
0029            516   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:56: volatile float FreqBuffer[4]={0,0,0,0};
0029 757000     517            mov     _FreqBuffer,#0x00
002C 757100     518            mov     (_FreqBuffer + 1),#0x00
002F 757200     519            mov     (_FreqBuffer + 2),#0x00
0032 757300     520            mov     (_FreqBuffer + 3),#0x00
0035 757400     521            mov     (_FreqBuffer + 0x0004),#0x00
0038 757500     522            mov     ((_FreqBuffer + 0x0004) + 1),#0x00
003B 757600     523            mov     ((_FreqBuffer + 0x0004) + 2),#0x00
003E 757700     524            mov     ((_FreqBuffer + 0x0004) + 3),#0x00
0041 757800     525            mov     (_FreqBuffer + 0x0008),#0x00
0044 757900     526            mov     ((_FreqBuffer + 0x0008) + 1),#0x00
0047 757A00     527            mov     ((_FreqBuffer + 0x0008) + 2),#0x00
004A 757B00     528            mov     ((_FreqBuffer + 0x0008) + 3),#0x00
004D 757C00     529            mov     (_FreqBuffer + 0x000c),#0x00
0050 757D00     530            mov     ((_FreqBuffer + 0x000c) + 1),#0x00
0053 757E00     531            mov     ((_FreqBuffer + 0x000c) + 2),#0x00
0056 757F00     532            mov     ((_FreqBuffer + 0x000c) + 3),#0x00
0059            533   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:57: unsigned char WriteCount = 0;
0059 753000     534            mov     _WriteCount,#0x00
005C            535   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:58: unsigned char ForwardSigCount=0;
005C 75F000     536            mov     _ForwardSigCount,#0x00
005F            537   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:59: unsigned char StopSigCount=0;
005F 75A000     538            mov     _StopSigCount,#0x00
0062            539   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:60: unsigned int millisecond=0;
0062 E4         540            clr     a
0063 F560       541            mov     _millisecond,a
0065 F561       542            mov     (_millisecond + 1),a
0067            543            ; The linker places a 'ret' at the end of segment R_DINIT.
0067            544   ;--------------------------------------------------------
0067            545   ; code
0067            546   ;--------------------------------------------------------
0000            547            rseg R_CSEG
0000            548   ;------------------------------------------------------------
0000            549   ;Allocation info for local variables in function '_c51_external_startup'
0000            550   ;------------------------------------------------------------
0000            551   ;------------------------------------------------------------
0000            552   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:66: char _c51_external_startup (void)
0000            553   ;        -----------------------------------------
0000            554   ;         function _c51_external_startup
0000            555   ;        -----------------------------------------
0000            556   __c51_external_startup:
0000            557            using   0
0000            558   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:68: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     559            anl     _PCA0MD,#0xBF
0003            560   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:69: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     561            mov     _VDM0CN,#0x80
0006            562   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:70: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     563            mov     _RSTSRC,#0x06
0009            564   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:78: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     565            orl     _CLKSEL,#0x03
000C            566   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:82: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     567            orl     _OSCICN,#0x03
000F            568   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:85: SCON0 = 0x10;
000F 759810     569            mov     _SCON0,#0x10
0012            570   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:87: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     571            mov     _TH1,#0x30
0015            572   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:88: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     573            anl     _CKCON,#0xF4
0018            574   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:89: CKCON |=  0x08;
0018 438E08     575            orl     _CKCON,#0x08
001B            576   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:102: TL1 = TH1;      // Init Timer1
001B 858D8B     577            mov     _TL1,_TH1
001E            578   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:103: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     579            anl     _TMOD,#0x0F
0021            580   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:104: TMOD |=  0x20;
0021 438920     581            orl     _TMOD,#0x20
0024            582   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:105: TR1 = 1; // START Timer1
0024 D28E       583            setb    _TR1
0026            584   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:106: TI = 1;  // Indicate TX0 ready
0026 D299       585            setb    _TI
0028            586   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:109: P2MDOUT|=0b_0000_0011;
0028 43A603     587            orl     _P2MDOUT,#0x03
002B            588   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:110: P0MDOUT |= 0x01;  // set P0.0 and P0.4 as push-pull outputs
002B 43A401     589            orl     _P0MDOUT,#0x01
002E            590   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:111: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)
002E 75E101     591            mov     _XBR0,#0x01
0031            592   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:112: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     593            mov     _XBR1,#0x40
0034            594   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:114: return 0;
0034 758200     595            mov     dpl,#0x00
0037 22         596            ret
0038            597   ;------------------------------------------------------------
0038            598   ;Allocation info for local variables in function 'Timer3us'
0038            599   ;------------------------------------------------------------
0038            600   ;us                        Allocated to registers r2 
0038            601   ;i                         Allocated to registers r3 
0038            602   ;------------------------------------------------------------
0038            603   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:121: void Timer3us(unsigned char us)
0038            604   ;        -----------------------------------------
0038            605   ;         function Timer3us
0038            606   ;        -----------------------------------------
0038            607   _Timer3us:
0038 AA82       608            mov     r2,dpl
003A            609   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:126: CKCON|=0b_0100_0000;
003A 438E40     610            orl     _CKCON,#0x40
003D            611   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:128: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
003D 7592D0     612            mov     _TMR3RL,#0xD0
0040 7593FF     613            mov     (_TMR3RL >> 8),#0xFF
0043            614   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:129: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0043 859294     615            mov     _TMR3,_TMR3RL
0046 859395     616            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0049            617   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:131: TMR3CN = 0x04;                 // Sart Timer3 and clear overflow flag
0049 759104     618            mov     _TMR3CN,#0x04
004C            619   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:132: for (i = 0; i < us; i++)       // Count <us> overflows
004C 7B00       620            mov     r3,#0x00
004E            621   L003004?:
004E C3         622            clr     c
004F EB         623            mov     a,r3
0050 9A         624            subb    a,r2
0051 5001       625            jnc     L003007?
0053            626   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:134: while (!(TMR3CN & 0x80));  // Wait for overflow
0053            627   L003001?:
0053 E591       628            mov     a,_TMR3CN
0055 30E700     629            jnb     acc.7,L003001?
0058            630   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:135: TMR3CN &= ~(0x80);         // Clear overflow indicator
0058 53917F     631            anl     _TMR3CN,#0x7F
005B            632   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:132: for (i = 0; i < us; i++)       // Count <us> overflows
005B 0B         633            inc     r3
005C 8001       634            sjmp    L003004?
005E            635   L003007?:
005E            636   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:137: TMR3CN = 0 ;                   // Stop Timer3 and clear overflow flag
005E 759100     637            mov     _TMR3CN,#0x00
0061 22         638            ret
0062            639   ;------------------------------------------------------------
0062            640   ;Allocation info for local variables in function 'waitms'
0062            641   ;------------------------------------------------------------
0062            642   ;ms                        Allocated to registers r2 r3 
0062            643   ;j                         Allocated to registers r2 r3 
0062            644   ;------------------------------------------------------------
0062            645   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:144: void waitms (unsigned int ms)
0062            646   ;        -----------------------------------------
0062            647   ;         function waitms
0062            648   ;        -----------------------------------------
0062            649   _waitms:
0062 AA82       650            mov     r2,dpl
0064 AB83       651            mov     r3,dph
0066            652   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:147: for(j=ms; j!=0; j--)
0066            653   L004001?:
0066 BA0000     654            cjne    r2,#0x00,L004010?
0069 BB0000     655            cjne    r3,#0x00,L004010?
006C 22         656            ret
006D            657   L004010?:
006D            658   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:149: Timer3us(249);
006D 7582F9     659            mov     dpl,#0xF9
0070 C002       660            push    ar2
0072 C003       661            push    ar3
0074 120100     662            lcall   _Timer3us
0077            663   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:150: Timer3us(249);
0077 7582F9     664            mov     dpl,#0xF9
007A 120100     665            lcall   _Timer3us
007D            666   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:151: Timer3us(249);
007D 7582F9     667            mov     dpl,#0xF9
0080 120100     668            lcall   _Timer3us
0083            669   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:152: Timer3us(250);
0083 7582FA     670            mov     dpl,#0xFA
0086 120100     671            lcall   _Timer3us
0089 D003       672            pop     ar3
008B D002       673            pop     ar2
008D            674   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:147: for(j=ms; j!=0; j--)
008D 1A         675            dec     r2
008E BAFF40     676            cjne    r2,#0xff,L004011?
0091 1B         677            dec     r3
0092            678   L004011?:
0092 8001       679            sjmp    L004001?
0094            680   ;------------------------------------------------------------
0094            681   ;Allocation info for local variables in function 'TIMER0_Init'
0094            682   ;------------------------------------------------------------
0094            683   ;------------------------------------------------------------
0094            684   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:158: void TIMER0_Init(void)
0094            685   ;        -----------------------------------------
0094            686   ;         function TIMER0_Init
0094            687   ;        -----------------------------------------
0094            688   _TIMER0_Init:
0094            689   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:160: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
0094 5389F0     690            anl     _TMOD,#0xF0
0097            691   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:161: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
0097 438901     692            orl     _TMOD,#0x01
009A            693   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:162: TR0=0; // Stop Timer/Counter 0
009A C28C       694            clr     _TR0
009C 22         695            ret
009D            696   ;------------------------------------------------------------
009D            697   ;Allocation info for local variables in function 'TIMER2_Init'
009D            698   ;------------------------------------------------------------
009D            699   ;------------------------------------------------------------
009D            700   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:168: void TIMER2_Init(void)
009D            701   ;        -----------------------------------------
009D            702   ;         function TIMER2_Init
009D            703   ;        -----------------------------------------
009D            704   _TIMER2_Init:
009D            705   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:170: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
009D 75C800     706            mov     _TMR2CN,#0x00
00A0            707   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:171: CKCON|=0b_0001_0000;
00A0 438E10     708            orl     _CKCON,#0x10
00A3            709   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:172: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
00A3 75CA78     710            mov     _TMR2RL,#0x78
00A6 75CBEC     711            mov     (_TMR2RL >> 8),#0xEC
00A9            712   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:173: TMR2=0xffff;   // Set to reload immediately
00A9 75CCFF     713            mov     _TMR2,#0xFF
00AC 75CDFF     714            mov     (_TMR2 >> 8),#0xFF
00AF            715   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:174: ET2=1;         // Enable Timer2 interrupts
00AF D2AD       716            setb    _ET2
00B1            717   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:175: TR2=1;         // Start Timer2
00B1 D2CA       718            setb    _TR2
00B3 22         719            ret
00B4            720   ;------------------------------------------------------------
00B4            721   ;Allocation info for local variables in function 'InitADC'
00B4            722   ;------------------------------------------------------------
00B4            723   ;------------------------------------------------------------
00B4            724   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:181: void InitADC (void)
00B4            725   ;        -----------------------------------------
00B4            726   ;         function InitADC
00B4            727   ;        -----------------------------------------
00B4            728   _InitADC:
00B4            729   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:184: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
00B4 75BCF8     730            mov     _ADC0CF,#0xF8
00B7            731   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:185: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
00B7 75E880     732            mov     _ADC0CN,#0x80
00BA            733   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:186: REF0CN = 0b_0000_1000; //Select VDD as the voltage reference for the converter
00BA 75D108     734            mov     _REF0CN,#0x08
00BD 22         735            ret
00BE            736   ;------------------------------------------------------------
00BE            737   ;Allocation info for local variables in function 'InitPinADC'
00BE            738   ;------------------------------------------------------------
00BE            739   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00BE            740   ;portno                    Allocated to registers r2 
00BE            741   ;mask                      Allocated to registers r3 
00BE            742   ;------------------------------------------------------------
00BE            743   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:193: void InitPinADC (unsigned char portno, unsigned char pinno)
00BE            744   ;        -----------------------------------------
00BE            745   ;         function InitPinADC
00BE            746   ;        -----------------------------------------
00BE            747   _InitPinADC:
00BE AA82       748            mov     r2,dpl
00C0            749   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:197: mask=1<<pinno;
00C0 8550F0     750            mov     b,_InitPinADC_PARM_2
00C3 05F0       751            inc     b
00C5 7401       752            mov     a,#0x01
00C7 8001       753            sjmp    L008012?
00C9            754   L008010?:
00C9 25E0       755            add     a,acc
00CB            756   L008012?:
00CB D5F000     757            djnz    b,L008010?
00CE FB         758            mov     r3,a
00CF            759   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:199: switch (portno)
00CF EA         760            mov     a,r2
00D0 24FC       761            add     a,#0xff - 0x03
00D2 4001       762            jc      L008007?
00D4 EA         763            mov     a,r2
00D5 2A         764            add     a,r2
00D6 2A         765            add     a,r2
00D7 909F80     766            mov     dptr,#L008014?
00DA 73         767            jmp     @a+dptr
00DB            768   L008014?:
00DB 020100     769            ljmp    L008001?
00DE 020100     770            ljmp    L008002?
00E1 020100     771            ljmp    L008003?
00E4 020100     772            ljmp    L008004?
00E7            773   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:201: case 0:
00E7            774   L008001?:
00E7            775   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:202: P0MDIN &= (~mask); // Set pin as analog input
00E7 EB         776            mov     a,r3
00E8 F4         777            cpl     a
00E9 52F1       778            anl     _P0MDIN,a
00EB            779   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:203: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00EB EB         780            mov     a,r3
00EC 42D4       781            orl     _P0SKIP,a
00EE            782   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:204: break;
00EE            783   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:205: case 1:
00EE 22         784            ret
00EF            785   L008002?:
00EF            786   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:206: P1MDIN &= (~mask); // Set pin as analog input
00EF EB         787            mov     a,r3
00F0 F4         788            cpl     a
00F1 52F2       789            anl     _P1MDIN,a
00F3            790   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:207: P1SKIP |= mask; // Skip Crossbar decoding for this pin
00F3 EB         791            mov     a,r3
00F4 42D5       792            orl     _P1SKIP,a
00F6            793   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:208: break;
00F6            794   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:209: case 2:
00F6 22         795            ret
00F7            796   L008003?:
00F7            797   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:210: P2MDIN &= (~mask); // Set pin as analog input
00F7 EB         798            mov     a,r3
00F8 F4         799            cpl     a
00F9 52F3       800            anl     _P2MDIN,a
00FB            801   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:211: P2SKIP |= mask; // Skip Crossbar decoding for this pin
00FB EB         802            mov     a,r3
00FC 42D6       803            orl     _P2SKIP,a
00FE            804   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:212: break;
00FE            805   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:213: case 3:
00FE 22         806            ret
00FF            807   L008004?:
00FF            808   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:214: P3MDIN &= (~mask); // Set pin as analog input
00FF EB         809            mov     a,r3
0100 F4         810            cpl     a
0101 FA         811            mov     r2,a
0102 52F4       812            anl     _P3MDIN,a
0104            813   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:215: P3SKIP |= mask; // Skip Crossbar decoding for this pin
0104 EB         814            mov     a,r3
0105 42DF       815            orl     _P3SKIP,a
0107            816   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:219: }
0107            817   L008007?:
0107 22         818            ret
0108            819   ;------------------------------------------------------------
0108            820   ;Allocation info for local variables in function 'ADC_at_Pin'
0108            821   ;------------------------------------------------------------
0108            822   ;pin                       Allocated to registers 
0108            823   ;------------------------------------------------------------
0108            824   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:226: unsigned int ADC_at_Pin(unsigned char pin)
0108            825   ;        -----------------------------------------
0108            826   ;         function ADC_at_Pin
0108            827   ;        -----------------------------------------
0108            828   _ADC_at_Pin:
0108 8582BB     829            mov     _AMX0P,dpl
010B            830   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:229: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
010B 75BA1F     831            mov     _AMX0N,#0x1F
010E            832   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:231: AD0BUSY=1;
010E D2EC       833            setb    _AD0BUSY
0110            834   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:232: while (AD0BUSY); // Wait for dummy conversion to finish
0110            835   L009001?:
0110 20ECC0     836            jb      _AD0BUSY,L009001?
0113            837   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:234: AD0BUSY = 1;
0113 D2EC       838            setb    _AD0BUSY
0115            839   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:235: while (AD0BUSY); // Wait for conversion to complete
0115            840   L009004?:
0115 20EC00     841            jb      _AD0BUSY,L009004?
0118            842   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:236: return (ADC0L+(ADC0H*0x100));
0118 AABD       843            mov     r2,_ADC0L
011A 7B00       844            mov     r3,#0x00
011C ADBE       845            mov     r5,_ADC0H
011E 7C00       846            mov     r4,#0x00
0120 EC         847            mov     a,r4
0121 2A         848            add     a,r2
0122 F582       849            mov     dpl,a
0124 ED         850            mov     a,r5
0125 3B         851            addc    a,r3
0126 F583       852            mov     dph,a
0128 22         853            ret
0129            854   ;------------------------------------------------------------
0129            855   ;Allocation info for local variables in function 'Volts_at_Pin'
0129            856   ;------------------------------------------------------------
0129            857   ;pin                       Allocated to registers r2 
0129            858   ;------------------------------------------------------------
0129            859   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:243: float Volts_at_Pin(unsigned char pin)
0129            860   ;        -----------------------------------------
0129            861   ;         function Volts_at_Pin
0129            862   ;        -----------------------------------------
0129            863   _Volts_at_Pin:
0129            864   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:245: return ((ADC_at_Pin(pin)*VDD_onboard)/1024.0);
0129 120100     865            lcall   _ADC_at_Pin
012C 120100     866            lcall   ___uint2fs
012F AA82       867            mov     r2,dpl
0131 AB83       868            mov     r3,dph
0133 ACF0       869            mov     r4,b
0135 FD         870            mov     r5,a
0136 C002       871            push    ar2
0138 C003       872            push    ar3
013A C004       873            push    ar4
013C C005       874            push    ar5
013E 90DD2F     875            mov     dptr,#0xDD2F
0141 75F054     876            mov     b,#0x54
0144 7440       877            mov     a,#0x40
0146 120100     878            lcall   ___fsmul
0149 AA82       879            mov     r2,dpl
014B AB83       880            mov     r3,dph
014D ACF0       881            mov     r4,b
014F FD         882            mov     r5,a
0150 E581       883            mov     a,sp
0152 24FC       884            add     a,#0xfc
0154 F581       885            mov     sp,a
0156 E4         886            clr     a
0157 C0E0       887            push    acc
0159 C0E0       888            push    acc
015B 7480       889            mov     a,#0x80
015D C0E0       890            push    acc
015F 7444       891            mov     a,#0x44
0161 C0E0       892            push    acc
0163 8A82       893            mov     dpl,r2
0165 8B83       894            mov     dph,r3
0167 8CF0       895            mov     b,r4
0169 ED         896            mov     a,r5
016A 120100     897            lcall   ___fsdiv
016D AA82       898            mov     r2,dpl
016F AB83       899            mov     r3,dph
0171 ACF0       900            mov     r4,b
0173 FD         901            mov     r5,a
0174 E581       902            mov     a,sp
0176 24FC       903            add     a,#0xfc
0178 F581       904            mov     sp,a
017A 8A82       905            mov     dpl,r2
017C 8B83       906            mov     dph,r3
017E 8CF0       907            mov     b,r4
0180 ED         908            mov     a,r5
0181 22         909            ret
0182            910   ;------------------------------------------------------------
0182            911   ;Allocation info for local variables in function 'Timer2_ISR'
0182            912   ;------------------------------------------------------------
0182            913   ;------------------------------------------------------------
0182            914   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:252: void Timer2_ISR (void) interrupt 5
0182            915   ;        -----------------------------------------
0182            916   ;         function Timer2_ISR
0182            917   ;        -----------------------------------------
0182            918   _Timer2_ISR:
0182 C0E0       919            push    acc
0184 C0D0       920            push    psw
0186 75D000     921            mov     psw,#0x00
0189            922   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:254: TF2H = 0; // Clear Timer2 interrupt flag
0189 C2CF       923            clr     _TF2H
018B            924   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:256: pwm_count++;
018B 05B8       925            inc     _pwm_count
018D            926   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:257: if(pwm_count>100) pwm_count=0;
018D E5B8       927            mov     a,_pwm_count
018F 249B       928            add     a,#0xff - 0x64
0191 5001       929            jnc     L011002?
0193 75B800     930            mov     _pwm_count,#0x00
0196            931   L011002?:
0196            932   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:259: BLU0=pwm_count>pwm_BLU0?0:1;
0196 C3         933            clr     c
0197 E570       934            mov     a,_pwm_BLU0
0199 95B8       935            subb    a,_pwm_count
019B 92C0       936            mov  _Timer2_ISR_sloc0_1_0,c
019D B3         937            cpl     c
019E 92A5       938            mov     _P2_5,c
01A0            939   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:260: BLU1=pwm_count>pwm_BLU1?0:1;
01A0 C3         940            clr     c
01A1 E530       941            mov     a,_pwm_BLU1
01A3 95B8       942            subb    a,_pwm_count
01A5 92C0       943            mov  _Timer2_ISR_sloc0_1_0,c
01A7 B3         944            cpl     c
01A8 92A2       945            mov     _P2_2,c
01AA            946   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:262: RED0=pwm_count>pwm_RED0?0:1;
01AA C3         947            clr     c
01AB E5F0       948            mov     a,_pwm_RED0
01AD 95B8       949            subb    a,_pwm_count
01AF 92C0       950            mov  _Timer2_ISR_sloc0_1_0,c
01B1 B3         951            cpl     c
01B2 92A3       952            mov     _P2_3,c
01B4            953   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:263: RED1=pwm_count>pwm_RED1?0:1;
01B4 C3         954            clr     c
01B5 E5B0       955            mov     a,_pwm_RED1
01B7 95B8       956            subb    a,_pwm_count
01B9 92C0       957            mov  _Timer2_ISR_sloc0_1_0,c
01BB B3         958            cpl     c
01BC 92A4       959            mov     _P2_4,c
01BE D0D0       960            pop     psw
01C0 D0E0       961            pop     acc
01C2 32         962            reti
01C3            963   ;        eliminated unneeded push/pop dpl
01C3            964   ;        eliminated unneeded push/pop dph
01C3            965   ;        eliminated unneeded push/pop b
01C3            966   ;------------------------------------------------------------
01C3            967   ;Allocation info for local variables in function 'ReadFrequency'
01C3            968   ;------------------------------------------------------------
01C3            969   ;------------------------------------------------------------
01C3            970   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:270: void ReadFrequency (void)
01C3            971   ;        -----------------------------------------
01C3            972   ;         function ReadFrequency
01C3            973   ;        -----------------------------------------
01C3            974   _ReadFrequency:
01C3            975   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:274: TL0=0;
01C3 758A00     976            mov     _TL0,#0x00
01C6            977   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:275: TH0=0;
01C6 758C00     978            mov     _TH0,#0x00
01C9            979   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:276: TF0=0;
01C9 C28D       980            clr     _TF0
01CB            981   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:277: overflow_count=0;
01CB 753000     982            mov     _overflow_count,#0x00
01CE            983   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:279: while(FRQIN!=0); // Wait for the signal to be zero
01CE            984   L012001?:
01CE 2096C0     985            jb      _P1_6,L012001?
01D1            986   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:280: while(FRQIN!=1); // Wait for the signal to be one
01D1            987   L012004?:
01D1 309600     988            jnb     _P1_6,L012004?
01D4            989   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:281: TR0=1; // Start the timer
01D4 D28C       990            setb    _TR0
01D6            991   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:282: while(FRQIN!=0) // Wait for the signal to be zero
01D6            992   L012009?:
01D6 309680     993            jnb     _P1_6,L012014?
01D9            994   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:284: if(TF0==1) // Did the 16-bit timer overflow?
01D9            995   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:286: TF0=0;
01D9 108DC0     996            jbc     _TF0,L012031?
01DC 8001       997            sjmp    L012009?
01DE            998   L012031?:
01DE            999   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:287: overflow_count++;
01DE 0530      1000            inc     _overflow_count
01E0           1001   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:290: while(FRQIN!=1) // Wait for the signal to be one
01E0 8001      1002            sjmp    L012009?
01E2           1003   L012014?:
01E2 209600    1004            jb      _P1_6,L012016?
01E5           1005   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:292: if(TF0==1) // Did the 16-bit timer overflow?
01E5           1006   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:294: TF0=0;
01E5 108D40    1007            jbc     _TF0,L012033?
01E8 8001      1008            sjmp    L012014?
01EA           1009   L012033?:
01EA           1010   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:295: overflow_count++;
01EA 0530      1011            inc     _overflow_count
01EC 8001      1012            sjmp    L012014?
01EE           1013   L012016?:
01EE           1014   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:299: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period. Then convert it to frequency
01EE C28C      1015            clr     _TR0
01F0           1016   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:301: frequency=1.0/((overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK)); // Compute frequency
01F0 853082    1017            mov     dpl,_overflow_count
01F3 120100    1018            lcall   ___uchar2fs
01F6 AA82      1019            mov     r2,dpl
01F8 AB83      1020            mov     r3,dph
01FA ACF0      1021            mov     r4,b
01FC FD        1022            mov     r5,a
01FD C002      1023            push    ar2
01FF C003      1024            push    ar3
0201 C004      1025            push    ar4
0203 C005      1026            push    ar5
0205 900000    1027            mov     dptr,#0x0000
0208 75F080    1028            mov     b,#0x80
020B 7447      1029            mov     a,#0x47
020D 120100    1030            lcall   ___fsmul
0210 AA82      1031            mov     r2,dpl
0212 AB83      1032            mov     r3,dph
0214 ACF0      1033            mov     r4,b
0216 FD        1034            mov     r5,a
0217 E581      1035            mov     a,sp
0219 24FC      1036            add     a,#0xfc
021B F581      1037            mov     sp,a
021D 858C82    1038            mov     dpl,_TH0
0220 C002      1039            push    ar2
0222 C003      1040            push    ar3
0224 C004      1041            push    ar4
0226 C005      1042            push    ar5
0228 120100    1043            lcall   ___uchar2fs
022B AE82      1044            mov     r6,dpl
022D AF83      1045            mov     r7,dph
022F A8F0      1046            mov     r0,b
0231 F9        1047            mov     r1,a
0232 C006      1048            push    ar6
0234 C007      1049            push    ar7
0236 C000      1050            push    ar0
0238 C001      1051            push    ar1
023A 900000    1052            mov     dptr,#0x0000
023D 75F080    1053            mov     b,#0x80
0240 7443      1054            mov     a,#0x43
0242 120100    1055            lcall   ___fsmul
0245 AE82      1056            mov     r6,dpl
0247 AF83      1057            mov     r7,dph
0249 A8F0      1058            mov     r0,b
024B F9        1059            mov     r1,a
024C E581      1060            mov     a,sp
024E 24FC      1061            add     a,#0xfc
0250 F581      1062            mov     sp,a
0252 D005      1063            pop     ar5
0254 D004      1064            pop     ar4
0256 D003      1065            pop     ar3
0258 D002      1066            pop     ar2
025A C006      1067            push    ar6
025C C007      1068            push    ar7
025E C000      1069            push    ar0
0260 C001      1070            push    ar1
0262 8A82      1071            mov     dpl,r2
0264 8B83      1072            mov     dph,r3
0266 8CF0      1073            mov     b,r4
0268 ED        1074            mov     a,r5
0269 120100    1075            lcall   ___fsadd
026C AA82      1076            mov     r2,dpl
026E AB83      1077            mov     r3,dph
0270 ACF0      1078            mov     r4,b
0272 FD        1079            mov     r5,a
0273 E581      1080            mov     a,sp
0275 24FC      1081            add     a,#0xfc
0277 F581      1082            mov     sp,a
0279 AE8A      1083            mov     r6,_TL0
027B 7F00      1084            mov     r7,#0x00
027D 8E82      1085            mov     dpl,r6
027F 8F83      1086            mov     dph,r7
0281 C002      1087            push    ar2
0283 C003      1088            push    ar3
0285 C004      1089            push    ar4
0287 C005      1090            push    ar5
0289 120100    1091            lcall   ___sint2fs
028C AE82      1092            mov     r6,dpl
028E AF83      1093            mov     r7,dph
0290 A8F0      1094            mov     r0,b
0292 F9        1095            mov     r1,a
0293 D005      1096            pop     ar5
0295 D004      1097            pop     ar4
0297 D003      1098            pop     ar3
0299 D002      1099            pop     ar2
029B C006      1100            push    ar6
029D C007      1101            push    ar7
029F C000      1102            push    ar0
02A1 C001      1103            push    ar1
02A3 8A82      1104            mov     dpl,r2
02A5 8B83      1105            mov     dph,r3
02A7 8CF0      1106            mov     b,r4
02A9 ED        1107            mov     a,r5
02AA 120100    1108            lcall   ___fsadd
02AD AA82      1109            mov     r2,dpl
02AF AB83      1110            mov     r3,dph
02B1 ACF0      1111            mov     r4,b
02B3 FD        1112            mov     r5,a
02B4 E581      1113            mov     a,sp
02B6 24FC      1114            add     a,#0xfc
02B8 F581      1115            mov     sp,a
02BA C002      1116            push    ar2
02BC C003      1117            push    ar3
02BE C004      1118            push    ar4
02C0 C005      1119            push    ar5
02C2 9037BD    1120            mov     dptr,#0x37BD
02C5 75F086    1121            mov     b,#0x86
02C8 7434      1122            mov     a,#0x34
02CA 120100    1123            lcall   ___fsmul
02CD AA82      1124            mov     r2,dpl
02CF AB83      1125            mov     r3,dph
02D1 ACF0      1126            mov     r4,b
02D3 FD        1127            mov     r5,a
02D4 E581      1128            mov     a,sp
02D6 24FC      1129            add     a,#0xfc
02D8 F581      1130            mov     sp,a
02DA C002      1131            push    ar2
02DC C003      1132            push    ar3
02DE C004      1133            push    ar4
02E0 C005      1134            push    ar5
02E2 900000    1135            mov     dptr,#0x0000
02E5 75F080    1136            mov     b,#0x80
02E8 743F      1137            mov     a,#0x3F
02EA 120100    1138            lcall   ___fsdiv
02ED 8582F0    1139            mov     _frequency,dpl
02F0 8583F1    1140            mov     (_frequency + 1),dph
02F3 85F0F2    1141            mov     (_frequency + 2),b
02F6 F5F3      1142            mov     (_frequency + 3),a
02F8 E581      1143            mov     a,sp
02FA 24FC      1144            add     a,#0xfc
02FC F581      1145            mov     sp,a
02FE 22        1146            ret
02FF           1147   ;------------------------------------------------------------
02FF           1148   ;Allocation info for local variables in function 'DetermineMode'
02FF           1149   ;------------------------------------------------------------
02FF           1150   ;ReadCount                 Allocated to registers r2 
02FF           1151   ;------------------------------------------------------------
02FF           1152   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:307: void DetermineMode (void) {
02FF           1153   ;        -----------------------------------------
02FF           1154   ;         function DetermineMode
02FF           1155   ;        -----------------------------------------
02FF           1156   _DetermineMode:
02FF           1157   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:309: ReadFrequency();
02FF 120100    1158            lcall   _ReadFrequency
0302           1159   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:313: if (millisecond%600==0){
0302 750058    1160            mov     __moduint_PARM_2,#0x58
0305 750102    1161            mov     (__moduint_PARM_2 + 1),#0x02
0308 856082    1162            mov     dpl,_millisecond
030B 856183    1163            mov     dph,(_millisecond + 1)
030E 120100    1164            lcall   __moduint
0311 E582      1165            mov     a,dpl
0313 8583F0    1166            mov     b,dph
0316 45F0      1167            orl     a,b
0318 6001      1168            jz      L013038?
031A 22        1169            ret
031B           1170   L013038?:
031B           1171   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:315: FreqBuffer[WriteCount]=frequency;
031B E530      1172            mov     a,_WriteCount
031D 2530      1173            add     a,_WriteCount
031F 25E0      1174            add     a,acc
0321 FA        1175            mov     r2,a
0322 2470      1176            add     a,#_FreqBuffer
0324 F8        1177            mov     r0,a
0325 A6F0      1178            mov     @r0,_frequency
0327 08        1179            inc     r0
0328 A6F1      1180            mov     @r0,(_frequency + 1)
032A 08        1181            inc     r0
032B A6F2      1182            mov     @r0,(_frequency + 2)
032D 08        1183            inc     r0
032E A6F3      1184            mov     @r0,(_frequency + 3)
0330           1185   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:316: WriteCount++;
0330 0530      1186            inc     _WriteCount
0332           1187   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:317: if (WriteCount==4)
0332 7404      1188            mov     a,#0x04
0334 B53010    1189            cjne    a,_WriteCount,L013032?
0337           1190   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:318: WriteCount=0;
0337 753000    1191            mov     _WriteCount,#0x00
033A           1192   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:322: for (ReadCount=0; ReadCount<4; ReadCount++){
033A           1193   L013032?:
033A 7A00      1194            mov     r2,#0x00
033C           1195   L013019?:
033C BA0490    1196            cjne    r2,#0x04,L013041?
033F           1197   L013041?:
033F 4001      1198            jc      L013042?
0341 020100    1199            ljmp    L013022?
0344           1200   L013042?:
0344           1201   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:323: if (FreqBuffer[ReadCount]>0.99*FRQFORWARD && FreqBuffer[ReadCount]<1.01*FRQFORWARD){
0344 EA        1202            mov     a,r2
0345 2A        1203            add     a,r2
0346 25E0      1204            add     a,acc
0348 FB        1205            mov     r3,a
0349 2470      1206            add     a,#_FreqBuffer
034B F8        1207            mov     r0,a
034C 8604      1208            mov     ar4,@r0
034E 08        1209            inc     r0
034F 8605      1210            mov     ar5,@r0
0351 08        1211            inc     r0
0352 8606      1212            mov     ar6,@r0
0354 08        1213            inc     r0
0355 8607      1214            mov     ar7,@r0
0357 18        1215            dec     r0
0358 18        1216            dec     r0
0359 18        1217            dec     r0
035A C002      1218            push    ar2
035C C003      1219            push    ar3
035E E4        1220            clr     a
035F C0E0      1221            push    acc
0361 7453      1222            mov     a,#0x53
0363 C0E0      1223            push    acc
0365 7482      1224            mov     a,#0x82
0367 C0E0      1225            push    acc
0369 7446      1226            mov     a,#0x46
036B C0E0      1227            push    acc
036D 8C82      1228            mov     dpl,r4
036F 8D83      1229            mov     dph,r5
0371 8EF0      1230            mov     b,r6
0373 EF        1231            mov     a,r7
0374 120100    1232            lcall   ___fsgt
0377 AC82      1233            mov     r4,dpl
0379 E581      1234            mov     a,sp
037B 24FC      1235            add     a,#0xfc
037D F581      1236            mov     sp,a
037F D003      1237            pop     ar3
0381 D002      1238            pop     ar2
0383 EC        1239            mov     a,r4
0384 6001      1240            jz      L013004?
0386 EB        1241            mov     a,r3
0387 2470      1242            add     a,#_FreqBuffer
0389 F8        1243            mov     r0,a
038A 8603      1244            mov     ar3,@r0
038C 08        1245            inc     r0
038D 8604      1246            mov     ar4,@r0
038F 08        1247            inc     r0
0390 8605      1248            mov     ar5,@r0
0392 08        1249            inc     r0
0393 8606      1250            mov     ar6,@r0
0395 18        1251            dec     r0
0396 18        1252            dec     r0
0397 18        1253            dec     r0
0398 C002      1254            push    ar2
039A E4        1255            clr     a
039B C0E0      1256            push    acc
039D 74F5      1257            mov     a,#0xF5
039F C0E0      1258            push    acc
03A1 7484      1259            mov     a,#0x84
03A3 C0E0      1260            push    acc
03A5 7446      1261            mov     a,#0x46
03A7 C0E0      1262            push    acc
03A9 8B82      1263            mov     dpl,r3
03AB 8C83      1264            mov     dph,r4
03AD 8DF0      1265            mov     b,r5
03AF EE        1266            mov     a,r6
03B0 120100    1267            lcall   ___fslt
03B3 AB82      1268            mov     r3,dpl
03B5 E581      1269            mov     a,sp
03B7 24FC      1270            add     a,#0xfc
03B9 F581      1271            mov     sp,a
03BB D002      1272            pop     ar2
03BD EB        1273            mov     a,r3
03BE 6001      1274            jz      L013004?
03C0           1275   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:324: ForwardSigCount++;
03C0 05F0      1276            inc     _ForwardSigCount
03C2           1277   L013004?:
03C2           1278   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:326: if (FreqBuffer[ReadCount]>0.98*FRQSTOP && FreqBuffer[ReadCount]<1.02*FRQSTOP){
03C2 EA        1279            mov     a,r2
03C3 2A        1280            add     a,r2
03C4 25E0      1281            add     a,acc
03C6 FB        1282            mov     r3,a
03C7 2470      1283            add     a,#_FreqBuffer
03C9 F8        1284            mov     r0,a
03CA 8604      1285            mov     ar4,@r0
03CC 08        1286            inc     r0
03CD 8605      1287            mov     ar5,@r0
03CF 08        1288            inc     r0
03D0 8606      1289            mov     ar6,@r0
03D2 08        1290            inc     r0
03D3 8607      1291            mov     ar7,@r0
03D5 18        1292            dec     r0
03D6 18        1293            dec     r0
03D7 18        1294            dec     r0
03D8 C002      1295            push    ar2
03DA C003      1296            push    ar3
03DC 740A      1297            mov     a,#0x0A
03DE C0E0      1298            push    acc
03E0 7441      1299            mov     a,#0x41
03E2 C0E0      1300            push    acc
03E4 7466      1301            mov     a,#0x66
03E6 C0E0      1302            push    acc
03E8 7446      1303            mov     a,#0x46
03EA C0E0      1304            push    acc
03EC 8C82      1305            mov     dpl,r4
03EE 8D83      1306            mov     dph,r5
03F0 8EF0      1307            mov     b,r6
03F2 EF        1308            mov     a,r7
03F3 120100    1309            lcall   ___fsgt
03F6 AC82      1310            mov     r4,dpl
03F8 E581      1311            mov     a,sp
03FA 24FC      1312            add     a,#0xfc
03FC F581      1313            mov     sp,a
03FE D003      1314            pop     ar3
0400 D002      1315            pop     ar2
0402 EC        1316            mov     a,r4
0403 6001      1317            jz      L013021?
0405 EB        1318            mov     a,r3
0406 2470      1319            add     a,#_FreqBuffer
0408 F8        1320            mov     r0,a
0409 8603      1321            mov     ar3,@r0
040B 08        1322            inc     r0
040C 8604      1323            mov     ar4,@r0
040E 08        1324            inc     r0
040F 8605      1325            mov     ar5,@r0
0411 08        1326            inc     r0
0412 8606      1327            mov     ar6,@r0
0414 18        1328            dec     r0
0415 18        1329            dec     r0
0416 18        1330            dec     r0
0417 C002      1331            push    ar2
0419 74F6      1332            mov     a,#0xF6
041B C0E0      1333            push    acc
041D 74A6      1334            mov     a,#0xA6
041F C0E0      1335            push    acc
0421 746F      1336            mov     a,#0x6F
0423 C0E0      1337            push    acc
0425 7446      1338            mov     a,#0x46
0427 C0E0      1339            push    acc
0429 8B82      1340            mov     dpl,r3
042B 8C83      1341            mov     dph,r4
042D 8DF0      1342            mov     b,r5
042F EE        1343            mov     a,r6
0430 120100    1344            lcall   ___fslt
0433 AB82      1345            mov     r3,dpl
0435 E581      1346            mov     a,sp
0437 24FC      1347            add     a,#0xfc
0439 F581      1348            mov     sp,a
043B D002      1349            pop     ar2
043D EB        1350            mov     a,r3
043E 6001      1351            jz      L013021?
0440           1352   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:327: StopSigCount++;  
0440 05A0      1353            inc     _StopSigCount
0442           1354   L013021?:
0442           1355   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:322: for (ReadCount=0; ReadCount<4; ReadCount++){
0442 0A        1356            inc     r2
0443 020100    1357            ljmp    L013019?
0446           1358   L013022?:
0446           1359   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:332: if (StopSigCount > 2){
0446 E5A0      1360            mov     a,_StopSigCount
0448 24FD      1361            add     a,#0xff - 0x02
044A 5001      1362            jnc     L013010?
044C           1363   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:333: mode = STOP;
044C           1364   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:334: StopSigCount = 0;
044C E4        1365            clr     a
044D F5B0      1366            mov     _mode,a
044F F5B1      1367            mov     (_mode + 1),a
0451 F5A0      1368            mov     _StopSigCount,a
0453           1369   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:335: return;
0453 22        1370            ret
0454           1371   L013010?:
0454           1372   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:339: if (ForwardSigCount > 2){
0454 E5F0      1373            mov     a,_ForwardSigCount
0456 24FD      1374            add     a,#0xff - 0x02
0458 5001      1375            jnc     L013023?
045A           1376   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:340: mode = FORWARD;
045A 75B003    1377            mov     _mode,#0x03
045D E4        1378            clr     a
045E F5B1      1379            mov     (_mode + 1),a
0460           1380   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:342: while (frequency< FRQLOW || frequency>FRQHIGH){
0460           1381   L013012?:
0460 E4        1382            clr     a
0461 C0E0      1383            push    acc
0463 74E0      1384            mov     a,#0xE0
0465 C0E0      1385            push    acc
0467 7476      1386            mov     a,#0x76
0469 C0E0      1387            push    acc
046B 7446      1388            mov     a,#0x46
046D C0E0      1389            push    acc
046F 85F082    1390            mov     dpl,_frequency
0472 85F183    1391            mov     dph,(_frequency + 1)
0475 85F2F0    1392            mov     b,(_frequency + 2)
0478 E5F3      1393            mov     a,(_frequency + 3)
047A 120100    1394            lcall   ___fslt
047D AA82      1395            mov     r2,dpl
047F E581      1396            mov     a,sp
0481 24FC      1397            add     a,#0xfc
0483 F581      1398            mov     sp,a
0485 EA        1399            mov     a,r2
0486 7001      1400            jnz     L013013?
0488 C0E0      1401            push    acc
048A 7420      1402            mov     a,#0x20
048C C0E0      1403            push    acc
048E 747D      1404            mov     a,#0x7D
0490 C0E0      1405            push    acc
0492 7446      1406            mov     a,#0x46
0494 C0E0      1407            push    acc
0496 85F082    1408            mov     dpl,_frequency
0499 85F183    1409            mov     dph,(_frequency + 1)
049C 85F2F0    1410            mov     b,(_frequency + 2)
049F E5F3      1411            mov     a,(_frequency + 3)
04A1 120100    1412            lcall   ___fsgt
04A4 AA82      1413            mov     r2,dpl
04A6 E581      1414            mov     a,sp
04A8 24FC      1415            add     a,#0xfc
04AA F581      1416            mov     sp,a
04AC EA        1417            mov     a,r2
04AD 6001      1418            jz      L013014?
04AF           1419   L013013?:
04AF           1420   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:343: power=0;
04AF 757800    1421            mov     _power,#0x00
04B2           1422   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:344: ReadFrequency();                   
04B2 120100    1423            lcall   _ReadFrequency
04B5 8001      1424            sjmp    L013012?
04B7           1425   L013014?:
04B7           1426   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:347: power=30;
04B7 75781E    1427            mov     _power,#0x1E
04BA           1428   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:348: ForwardSigCount = 0;
04BA 75F000    1429            mov     _ForwardSigCount,#0x00
04BD           1430   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:349: return;
04BD           1431   L013023?:
04BD 22        1432            ret
04BE           1433   ;------------------------------------------------------------
04BE           1434   ;Allocation info for local variables in function 'MotorControl'
04BE           1435   ;------------------------------------------------------------
04BE           1436   ;IndVolts                  Allocated with name '_MotorControl_IndVolts_1_80'
04BE           1437   ;sloc0                     Allocated with name '_MotorControl_sloc0_1_0'
04BE           1438   ;sloc1                     Allocated with name '_MotorControl_sloc1_1_0'
04BE           1439   ;sloc2                     Allocated with name '_MotorControl_sloc2_1_0'
04BE           1440   ;sloc3                     Allocated with name '_MotorControl_sloc3_1_0'
04BE           1441   ;------------------------------------------------------------
04BE           1442   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:362: void MotorControl (volatile float IndVolts[])
04BE           1443   ;        -----------------------------------------
04BE           1444   ;         function MotorControl
04BE           1445   ;        -----------------------------------------
04BE           1446   _MotorControl:
04BE 858290    1447            mov     _MotorControl_IndVolts_1_80,dpl
04C1 858391    1448            mov     (_MotorControl_IndVolts_1_80 + 1),dph
04C4 85F092    1449            mov     (_MotorControl_IndVolts_1_80 + 2),b
04C7           1450   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:365: switch (mode){
04C7 E4        1451            clr     a
04C8 B5B090    1452            cjne    a,_mode,L014047?
04CB E4        1453            clr     a
04CC B5B190    1454            cjne    a,(_mode + 1),L014047?
04CF 020100    1455            ljmp    L014031?
04D2           1456   L014047?:
04D2 7403      1457            mov     a,#0x03
04D4 B5B010    1458            cjne    a,_mode,L014048?
04D7 E4        1459            clr     a
04D8 B5B110    1460            cjne    a,(_mode + 1),L014048?
04DB 8001      1461            sjmp    L014001?
04DD           1462   L014048?:
04DD 7404      1463            mov     a,#0x04
04DF B5B090    1464            cjne    a,_mode,L014049?
04E2 E4        1465            clr     a
04E3 B5B190    1466            cjne    a,(_mode + 1),L014049?
04E6 020100    1467            ljmp    L014016?
04E9           1468   L014049?:
04E9 22        1469            ret
04EA           1470   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:367: case FORWARD:
04EA           1471   L014001?:
04EA           1472   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:368: if(IndVolts[0] > Vblue_thresh + 0.1 || IndVolts[0]/IndVolts[1] > 1){
04EA 8590E0    1473            mov     _MotorControl_sloc0_1_0,_MotorControl_IndVolts_1_80
04ED 8591E1    1474            mov     (_MotorControl_sloc0_1_0 + 1),(_MotorControl_IndVolts_1_80 + 1)
04F0 8592E2    1475            mov     (_MotorControl_sloc0_1_0 + 2),(_MotorControl_IndVolts_1_80 + 2)
04F3 85E082    1476            mov     dpl,_MotorControl_sloc0_1_0
04F6 85E183    1477            mov     dph,(_MotorControl_sloc0_1_0 + 1)
04F9 85E2F0    1478            mov     b,(_MotorControl_sloc0_1_0 + 2)
04FC 120100    1479            lcall   __gptrget
04FF FD        1480            mov     r5,a
0500 A3        1481            inc     dptr
0501 120100    1482            lcall   __gptrget
0504 FE        1483            mov     r6,a
0505 A3        1484            inc     dptr
0506 120100    1485            lcall   __gptrget
0509 FF        1486            mov     r7,a
050A A3        1487            inc     dptr
050B 120100    1488            lcall   __gptrget
050E F8        1489            mov     r0,a
050F C005      1490            push    ar5
0511 C006      1491            push    ar6
0513 C007      1492            push    ar7
0515 C000      1493            push    ar0
0517 E4        1494            clr     a
0518 C0E0      1495            push    acc
051A C0E0      1496            push    acc
051C 7480      1497            mov     a,#0x80
051E C0E0      1498            push    acc
0520 743F      1499            mov     a,#0x3F
0522 C0E0      1500            push    acc
0524 8D82      1501            mov     dpl,r5
0526 8E83      1502            mov     dph,r6
0528 8FF0      1503            mov     b,r7
052A E8        1504            mov     a,r0
052B 120100    1505            lcall   ___fsgt
052E A982      1506            mov     r1,dpl
0530 E581      1507            mov     a,sp
0532 24FC      1508            add     a,#0xfc
0534 F581      1509            mov     sp,a
0536 D000      1510            pop     ar0
0538 D007      1511            pop     ar7
053A D006      1512            pop     ar6
053C D005      1513            pop     ar5
053E E9        1514            mov     a,r1
053F 6001      1515            jz      L014050?
0541 020100    1516            ljmp    L014012?
0544           1517   L014050?:
0544 7404      1518            mov     a,#0x04
0546 25E0      1519            add     a,_MotorControl_sloc0_1_0
0548 F9        1520            mov     r1,a
0549 E4        1521            clr     a
054A 35E1      1522            addc    a,(_MotorControl_sloc0_1_0 + 1)
054C FA        1523            mov     r2,a
054D ABE2      1524            mov     r3,(_MotorControl_sloc0_1_0 + 2)
054F 8982      1525            mov     dpl,r1
0551 8A83      1526            mov     dph,r2
0553 8BF0      1527            mov     b,r3
0555 120100    1528            lcall   __gptrget
0558 F580      1529            mov     _MotorControl_sloc2_1_0,a
055A A3        1530            inc     dptr
055B 120100    1531            lcall   __gptrget
055E F581      1532            mov     (_MotorControl_sloc2_1_0 + 1),a
0560 A3        1533            inc     dptr
0561 120100    1534            lcall   __gptrget
0564 F582      1535            mov     (_MotorControl_sloc2_1_0 + 2),a
0566 A3        1536            inc     dptr
0567 120100    1537            lcall   __gptrget
056A F583      1538            mov     (_MotorControl_sloc2_1_0 + 3),a
056C C005      1539            push    ar5
056E C006      1540            push    ar6
0570 C007      1541            push    ar7
0572 C000      1542            push    ar0
0574 C080      1543            push    _MotorControl_sloc2_1_0
0576 C081      1544            push    (_MotorControl_sloc2_1_0 + 1)
0578 C082      1545            push    (_MotorControl_sloc2_1_0 + 2)
057A C083      1546            push    (_MotorControl_sloc2_1_0 + 3)
057C 8D82      1547            mov     dpl,r5
057E 8E83      1548            mov     dph,r6
0580 8FF0      1549            mov     b,r7
0582 E8        1550            mov     a,r0
0583 120100    1551            lcall   ___fsdiv
0586 858230    1552            mov     _MotorControl_sloc1_1_0,dpl
0589 858331    1553            mov     (_MotorControl_sloc1_1_0 + 1),dph
058C 85F032    1554            mov     (_MotorControl_sloc1_1_0 + 2),b
058F F533      1555            mov     (_MotorControl_sloc1_1_0 + 3),a
0591 E581      1556            mov     a,sp
0593 24FC      1557            add     a,#0xfc
0595 F581      1558            mov     sp,a
0597 E4        1559            clr     a
0598 C0E0      1560            push    acc
059A C0E0      1561            push    acc
059C 7480      1562            mov     a,#0x80
059E C0E0      1563            push    acc
05A0 743F      1564            mov     a,#0x3F
05A2 C0E0      1565            push    acc
05A4 853082    1566            mov     dpl,_MotorControl_sloc1_1_0
05A7 853183    1567            mov     dph,(_MotorControl_sloc1_1_0 + 1)
05AA 8532F0    1568            mov     b,(_MotorControl_sloc1_1_0 + 2)
05AD E533      1569            mov     a,(_MotorControl_sloc1_1_0 + 3)
05AF 120100    1570            lcall   ___fsgt
05B2 AA82      1571            mov     r2,dpl
05B4 E581      1572            mov     a,sp
05B6 24FC      1573            add     a,#0xfc
05B8 F581      1574            mov     sp,a
05BA D000      1575            pop     ar0
05BC D007      1576            pop     ar7
05BE D006      1577            pop     ar6
05C0 D005      1578            pop     ar5
05C2 EA        1579            mov     a,r2
05C3 7001      1580            jnz     L014051?
05C5 020100    1581            ljmp    L014013?
05C8           1582   L014051?:
05C8           1583   L014012?:
05C8           1584   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:369: if (IndVolts[0]/IndVolts[1]>1.3){
05C8 7404      1585            mov     a,#0x04
05CA 25E0      1586            add     a,_MotorControl_sloc0_1_0
05CC FA        1587            mov     r2,a
05CD E4        1588            clr     a
05CE 35E1      1589            addc    a,(_MotorControl_sloc0_1_0 + 1)
05D0 FB        1590            mov     r3,a
05D1 ACE2      1591            mov     r4,(_MotorControl_sloc0_1_0 + 2)
05D3 8A82      1592            mov     dpl,r2
05D5 8B83      1593            mov     dph,r3
05D7 8CF0      1594            mov     b,r4
05D9 120100    1595            lcall   __gptrget
05DC FA        1596            mov     r2,a
05DD A3        1597            inc     dptr
05DE 120100    1598            lcall   __gptrget
05E1 FB        1599            mov     r3,a
05E2 A3        1600            inc     dptr
05E3 120100    1601            lcall   __gptrget
05E6 FC        1602            mov     r4,a
05E7 A3        1603            inc     dptr
05E8 120100    1604            lcall   __gptrget
05EB F9        1605            mov     r1,a
05EC C002      1606            push    ar2
05EE C003      1607            push    ar3
05F0 C004      1608            push    ar4
05F2 C001      1609            push    ar1
05F4 8D82      1610            mov     dpl,r5
05F6 8E83      1611            mov     dph,r6
05F8 8FF0      1612            mov     b,r7
05FA E8        1613            mov     a,r0
05FB 120100    1614            lcall   ___fsdiv
05FE AA82      1615            mov     r2,dpl
0600 AB83      1616            mov     r3,dph
0602 ACF0      1617            mov     r4,b
0604 FD        1618            mov     r5,a
0605 E581      1619            mov     a,sp
0607 24FC      1620            add     a,#0xfc
0609 F581      1621            mov     sp,a
060B 7466      1622            mov     a,#0x66
060D C0E0      1623            push    acc
060F C0E0      1624            push    acc
0611 74A6      1625            mov     a,#0xA6
0613 C0E0      1626            push    acc
0615 743F      1627            mov     a,#0x3F
0617 C0E0      1628            push    acc
0619 8A82      1629            mov     dpl,r2
061B 8B83      1630            mov     dph,r3
061D 8CF0      1631            mov     b,r4
061F ED        1632            mov     a,r5
0620 120100    1633            lcall   ___fsgt
0623 AA82      1634            mov     r2,dpl
0625 E581      1635            mov     a,sp
0627 24FC      1636            add     a,#0xfc
0629 F581      1637            mov     sp,a
062B EA        1638            mov     a,r2
062C 6001      1639            jz      L014003?
062E           1640   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:370: pwm_RED1=0;
062E           1641   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:371: pwm_RED0=0;
062E           1642   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:372: pwm_BLU1=2*power;
062E E4        1643            clr     a
062F F5B0      1644            mov     _pwm_RED1,a
0631 F5F0      1645            mov     _pwm_RED0,a
0633 E578      1646            mov     a,_power
0635 25E0      1647            add     a,acc
0637 F530      1648            mov     _pwm_BLU1,a
0639           1649   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:373: pwm_BLU0=0;
0639 757000    1650            mov     _pwm_BLU0,#0x00
063C 22        1651            ret
063D           1652   L014003?:
063D           1653   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:377: pwm_BLU1= 0;
063D 753000    1654            mov     _pwm_BLU1,#0x00
0640           1655   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:378: pwm_BLU0 = 0;
0640 757000    1656            mov     _pwm_BLU0,#0x00
0643           1657   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:379: pwm_RED1 = power;
0643 8578B0    1658            mov     _pwm_RED1,_power
0646           1659   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:380: pwm_RED0 = 0; 
0646 75F000    1660            mov     _pwm_RED0,#0x00
0649 22        1661            ret
064A           1662   L014013?:
064A           1663   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:384: else if(IndVolts[1] > Vred_thresh + 0.1 || IndVolts[0]/IndVolts[1] < 1){
064A 74CD      1664            mov     a,#0xCD
064C C0E0      1665            push    acc
064E 74CC      1666            mov     a,#0xCC
0650 C0E0      1667            push    acc
0652 748C      1668            mov     a,#0x8C
0654 C0E0      1669            push    acc
0656 743F      1670            mov     a,#0x3F
0658 C0E0      1671            push    acc
065A 858082    1672            mov     dpl,_MotorControl_sloc2_1_0
065D 858183    1673            mov     dph,(_MotorControl_sloc2_1_0 + 1)
0660 8582F0    1674            mov     b,(_MotorControl_sloc2_1_0 + 2)
0663 E583      1675            mov     a,(_MotorControl_sloc2_1_0 + 3)
0665 120100    1676            lcall   ___fsgt
0668 AA82      1677            mov     r2,dpl
066A E581      1678            mov     a,sp
066C 24FC      1679            add     a,#0xfc
066E F581      1680            mov     sp,a
0670 EA        1681            mov     a,r2
0671 7001      1682            jnz     L014008?
0673 C0E0      1683            push    acc
0675 C0E0      1684            push    acc
0677 7480      1685            mov     a,#0x80
0679 C0E0      1686            push    acc
067B 743F      1687            mov     a,#0x3F
067D C0E0      1688            push    acc
067F 853082    1689            mov     dpl,_MotorControl_sloc1_1_0
0682 853183    1690            mov     dph,(_MotorControl_sloc1_1_0 + 1)
0685 8532F0    1691            mov     b,(_MotorControl_sloc1_1_0 + 2)
0688 E533      1692            mov     a,(_MotorControl_sloc1_1_0 + 3)
068A 120100    1693            lcall   ___fslt
068D AA82      1694            mov     r2,dpl
068F E581      1695            mov     a,sp
0691 24FC      1696            add     a,#0xfc
0693 F581      1697            mov     sp,a
0695 EA        1698            mov     a,r2
0696 6001      1699            jz      L014009?
0698           1700   L014008?:
0698           1701   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:385: if (IndVolts[0]/IndVolts[1]<0.5){
0698 E4        1702            clr     a
0699 C0E0      1703            push    acc
069B C0E0      1704            push    acc
069D C0E0      1705            push    acc
069F 743F      1706            mov     a,#0x3F
06A1 C0E0      1707            push    acc
06A3 853082    1708            mov     dpl,_MotorControl_sloc1_1_0
06A6 853183    1709            mov     dph,(_MotorControl_sloc1_1_0 + 1)
06A9 8532F0    1710            mov     b,(_MotorControl_sloc1_1_0 + 2)
06AC E533      1711            mov     a,(_MotorControl_sloc1_1_0 + 3)
06AE 120100    1712            lcall   ___fslt
06B1 AA82      1713            mov     r2,dpl
06B3 E581      1714            mov     a,sp
06B5 24FC      1715            add     a,#0xfc
06B7 F581      1716            mov     sp,a
06B9 EA        1717            mov     a,r2
06BA 6001      1718            jz      L014006?
06BC           1719   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:386: pwm_RED1=2*power;
06BC E578      1720            mov     a,_power
06BE 25E0      1721            add     a,acc
06C0 F5B0      1722            mov     _pwm_RED1,a
06C2           1723   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:387: pwm_RED0=0;
06C2 75F000    1724            mov     _pwm_RED0,#0x00
06C5           1725   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:388: pwm_BLU1=0;
06C5 753000    1726            mov     _pwm_BLU1,#0x00
06C8           1727   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:389: pwm_BLU0=0;
06C8 757000    1728            mov     _pwm_BLU0,#0x00
06CB 22        1729            ret
06CC           1730   L014006?:
06CC           1731   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:393: pwm_BLU1=power;
06CC 857830    1732            mov     _pwm_BLU1,_power
06CF           1733   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:394: pwm_BLU0=0;
06CF 757000    1734            mov     _pwm_BLU0,#0x00
06D2           1735   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:395: pwm_RED1=0;
06D2 75B000    1736            mov     _pwm_RED1,#0x00
06D5           1737   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:396: pwm_RED0=0;
06D5 75F000    1738            mov     _pwm_RED0,#0x00
06D8 22        1739            ret
06D9           1740   L014009?:
06D9           1741   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:400: pwm_BLU1 = power;
06D9 857830    1742            mov     _pwm_BLU1,_power
06DC           1743   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:401: pwm_BLU0 = 0;
06DC 757000    1744            mov     _pwm_BLU0,#0x00
06DF           1745   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:402: pwm_RED1 = power;
06DF 8578B0    1746            mov     _pwm_RED1,_power
06E2           1747   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:403: pwm_RED0 = 0;
06E2 75F000    1748            mov     _pwm_RED0,#0x00
06E5           1749   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:405: break;
06E5 22        1750            ret
06E6           1751   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:408: case BACKWARD:
06E6           1752   L014016?:
06E6           1753   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:409: if(IndVolts[0] > Vblue_thresh + 0.1 || IndVolts[0]/IndVolts[1] > 1){
06E6 859080    1754            mov     _MotorControl_sloc2_1_0,_MotorControl_IndVolts_1_80
06E9 859181    1755            mov     (_MotorControl_sloc2_1_0 + 1),(_MotorControl_IndVolts_1_80 + 1)
06EC 859282    1756            mov     (_MotorControl_sloc2_1_0 + 2),(_MotorControl_IndVolts_1_80 + 2)
06EF 858082    1757            mov     dpl,_MotorControl_sloc2_1_0
06F2 858183    1758            mov     dph,(_MotorControl_sloc2_1_0 + 1)
06F5 8582F0    1759            mov     b,(_MotorControl_sloc2_1_0 + 2)
06F8 120100    1760            lcall   __gptrget
06FB FD        1761            mov     r5,a
06FC A3        1762            inc     dptr
06FD 120100    1763            lcall   __gptrget
0700 FE        1764            mov     r6,a
0701 A3        1765            inc     dptr
0702 120100    1766            lcall   __gptrget
0705 FF        1767            mov     r7,a
0706 A3        1768            inc     dptr
0707 120100    1769            lcall   __gptrget
070A F8        1770            mov     r0,a
070B C005      1771            push    ar5
070D C006      1772            push    ar6
070F C007      1773            push    ar7
0711 C000      1774            push    ar0
0713 E4        1775            clr     a
0714 C0E0      1776            push    acc
0716 C0E0      1777            push    acc
0718 7480      1778            mov     a,#0x80
071A C0E0      1779            push    acc
071C 743F      1780            mov     a,#0x3F
071E C0E0      1781            push    acc
0720 8D82      1782            mov     dpl,r5
0722 8E83      1783            mov     dph,r6
0724 8FF0      1784            mov     b,r7
0726 E8        1785            mov     a,r0
0727 120100    1786            lcall   ___fsgt
072A A982      1787            mov     r1,dpl
072C E581      1788            mov     a,sp
072E 24FC      1789            add     a,#0xfc
0730 F581      1790            mov     sp,a
0732 D000      1791            pop     ar0
0734 D007      1792            pop     ar7
0736 D006      1793            pop     ar6
0738 D005      1794            pop     ar5
073A E9        1795            mov     a,r1
073B 6001      1796            jz      L014056?
073D 020100    1797            ljmp    L014027?
0740           1798   L014056?:
0740 7404      1799            mov     a,#0x04
0742 2580      1800            add     a,_MotorControl_sloc2_1_0
0744 F9        1801            mov     r1,a
0745 E4        1802            clr     a
0746 3581      1803            addc    a,(_MotorControl_sloc2_1_0 + 1)
0748 FA        1804            mov     r2,a
0749 AB82      1805            mov     r3,(_MotorControl_sloc2_1_0 + 2)
074B 8982      1806            mov     dpl,r1
074D 8A83      1807            mov     dph,r2
074F 8BF0      1808            mov     b,r3
0751 120100    1809            lcall   __gptrget
0754 F5D0      1810            mov     _MotorControl_sloc3_1_0,a
0756 A3        1811            inc     dptr
0757 120100    1812            lcall   __gptrget
075A F5D1      1813            mov     (_MotorControl_sloc3_1_0 + 1),a
075C A3        1814            inc     dptr
075D 120100    1815            lcall   __gptrget
0760 F5D2      1816            mov     (_MotorControl_sloc3_1_0 + 2),a
0762 A3        1817            inc     dptr
0763 120100    1818            lcall   __gptrget
0766 F5D3      1819            mov     (_MotorControl_sloc3_1_0 + 3),a
0768 C005      1820            push    ar5
076A C006      1821            push    ar6
076C C007      1822            push    ar7
076E C000      1823            push    ar0
0770 C0D0      1824            push    _MotorControl_sloc3_1_0
0772 C0D1      1825            push    (_MotorControl_sloc3_1_0 + 1)
0774 C0D2      1826            push    (_MotorControl_sloc3_1_0 + 2)
0776 C0D3      1827            push    (_MotorControl_sloc3_1_0 + 3)
0778 8D82      1828            mov     dpl,r5
077A 8E83      1829            mov     dph,r6
077C 8FF0      1830            mov     b,r7
077E E8        1831            mov     a,r0
077F 120100    1832            lcall   ___fsdiv
0782 858230    1833            mov     _MotorControl_sloc1_1_0,dpl
0785 858331    1834            mov     (_MotorControl_sloc1_1_0 + 1),dph
0788 85F032    1835            mov     (_MotorControl_sloc1_1_0 + 2),b
078B F533      1836            mov     (_MotorControl_sloc1_1_0 + 3),a
078D E581      1837            mov     a,sp
078F 24FC      1838            add     a,#0xfc
0791 F581      1839            mov     sp,a
0793 E4        1840            clr     a
0794 C0E0      1841            push    acc
0796 C0E0      1842            push    acc
0798 7480      1843            mov     a,#0x80
079A C0E0      1844            push    acc
079C 743F      1845            mov     a,#0x3F
079E C0E0      1846            push    acc
07A0 853082    1847            mov     dpl,_MotorControl_sloc1_1_0
07A3 853183    1848            mov     dph,(_MotorControl_sloc1_1_0 + 1)
07A6 8532F0    1849            mov     b,(_MotorControl_sloc1_1_0 + 2)
07A9 E533      1850            mov     a,(_MotorControl_sloc1_1_0 + 3)
07AB 120100    1851            lcall   ___fsgt
07AE AA82      1852            mov     r2,dpl
07B0 E581      1853            mov     a,sp
07B2 24FC      1854            add     a,#0xfc
07B4 F581      1855            mov     sp,a
07B6 D000      1856            pop     ar0
07B8 D007      1857            pop     ar7
07BA D006      1858            pop     ar6
07BC D005      1859            pop     ar5
07BE EA        1860            mov     a,r2
07BF 7001      1861            jnz     L014057?
07C1 020100    1862            ljmp    L014028?
07C4           1863   L014057?:
07C4           1864   L014027?:
07C4           1865   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:410: if (IndVolts[0]/IndVolts[1]>1.1){
07C4 7404      1866            mov     a,#0x04
07C6 2580      1867            add     a,_MotorControl_sloc2_1_0
07C8 FA        1868            mov     r2,a
07C9 E4        1869            clr     a
07CA 3581      1870            addc    a,(_MotorControl_sloc2_1_0 + 1)
07CC FB        1871            mov     r3,a
07CD AC82      1872            mov     r4,(_MotorControl_sloc2_1_0 + 2)
07CF 8A82      1873            mov     dpl,r2
07D1 8B83      1874            mov     dph,r3
07D3 8CF0      1875            mov     b,r4
07D5 120100    1876            lcall   __gptrget
07D8 FA        1877            mov     r2,a
07D9 A3        1878            inc     dptr
07DA 120100    1879            lcall   __gptrget
07DD FB        1880            mov     r3,a
07DE A3        1881            inc     dptr
07DF 120100    1882            lcall   __gptrget
07E2 FC        1883            mov     r4,a
07E3 A3        1884            inc     dptr
07E4 120100    1885            lcall   __gptrget
07E7 F9        1886            mov     r1,a
07E8 C002      1887            push    ar2
07EA C003      1888            push    ar3
07EC C004      1889            push    ar4
07EE C001      1890            push    ar1
07F0 8D82      1891            mov     dpl,r5
07F2 8E83      1892            mov     dph,r6
07F4 8FF0      1893            mov     b,r7
07F6 E8        1894            mov     a,r0
07F7 120100    1895            lcall   ___fsdiv
07FA AA82      1896            mov     r2,dpl
07FC AB83      1897            mov     r3,dph
07FE ACF0      1898            mov     r4,b
0800 FD        1899            mov     r5,a
0801 E581      1900            mov     a,sp
0803 24FC      1901            add     a,#0xfc
0805 F581      1902            mov     sp,a
0807 74CD      1903            mov     a,#0xCD
0809 C0E0      1904            push    acc
080B 74CC      1905            mov     a,#0xCC
080D C0E0      1906            push    acc
080F 748C      1907            mov     a,#0x8C
0811 C0E0      1908            push    acc
0813 743F      1909            mov     a,#0x3F
0815 C0E0      1910            push    acc
0817 8A82      1911            mov     dpl,r2
0819 8B83      1912            mov     dph,r3
081B 8CF0      1913            mov     b,r4
081D ED        1914            mov     a,r5
081E 120100    1915            lcall   ___fsgt
0821 AA82      1916            mov     r2,dpl
0823 E581      1917            mov     a,sp
0825 24FC      1918            add     a,#0xfc
0827 F581      1919            mov     sp,a
0829 EA        1920            mov     a,r2
082A 6001      1921            jz      L014018?
082C           1922   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:411: pwm_RED0=2*power;
082C E578      1923            mov     a,_power
082E 25E0      1924            add     a,acc
0830 F5F0      1925            mov     _pwm_RED0,a
0832           1926   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:412: pwm_RED1=0;
0832 75B000    1927            mov     _pwm_RED1,#0x00
0835           1928   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:413: pwm_BLU0=0;
0835 757000    1929            mov     _pwm_BLU0,#0x00
0838           1930   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:414: pwm_BLU1=0;
0838 753000    1931            mov     _pwm_BLU1,#0x00
083B 22        1932            ret
083C           1933   L014018?:
083C           1934   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:418: pwm_BLU0= power;
083C 857870    1935            mov     _pwm_BLU0,_power
083F           1936   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:419: pwm_BLU1 = 0;
083F 753000    1937            mov     _pwm_BLU1,#0x00
0842           1938   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:420: pwm_RED0 = 0;
0842 75F000    1939            mov     _pwm_RED0,#0x00
0845           1940   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:421: pwm_RED1 = 0; 
0845 75B000    1941            mov     _pwm_RED1,#0x00
0848 22        1942            ret
0849           1943   L014028?:
0849           1944   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:425: else if(IndVolts[1] > Vred_thresh + 0.1 || IndVolts[0]/IndVolts[1] < 1){
0849 74CD      1945            mov     a,#0xCD
084B C0E0      1946            push    acc
084D 74CC      1947            mov     a,#0xCC
084F C0E0      1948            push    acc
0851 748C      1949            mov     a,#0x8C
0853 C0E0      1950            push    acc
0855 743F      1951            mov     a,#0x3F
0857 C0E0      1952            push    acc
0859 85D082    1953            mov     dpl,_MotorControl_sloc3_1_0
085C 85D183    1954            mov     dph,(_MotorControl_sloc3_1_0 + 1)
085F 85D2F0    1955            mov     b,(_MotorControl_sloc3_1_0 + 2)
0862 E5D3      1956            mov     a,(_MotorControl_sloc3_1_0 + 3)
0864 120100    1957            lcall   ___fsgt
0867 AA82      1958            mov     r2,dpl
0869 E581      1959            mov     a,sp
086B 24FC      1960            add     a,#0xfc
086D F581      1961            mov     sp,a
086F EA        1962            mov     a,r2
0870 7001      1963            jnz     L014023?
0872 C0E0      1964            push    acc
0874 C0E0      1965            push    acc
0876 7480      1966            mov     a,#0x80
0878 C0E0      1967            push    acc
087A 743F      1968            mov     a,#0x3F
087C C0E0      1969            push    acc
087E 853082    1970            mov     dpl,_MotorControl_sloc1_1_0
0881 853183    1971            mov     dph,(_MotorControl_sloc1_1_0 + 1)
0884 8532F0    1972            mov     b,(_MotorControl_sloc1_1_0 + 2)
0887 E533      1973            mov     a,(_MotorControl_sloc1_1_0 + 3)
0889 120100    1974            lcall   ___fslt
088C AA82      1975            mov     r2,dpl
088E E581      1976            mov     a,sp
0890 24FC      1977            add     a,#0xfc
0892 F581      1978            mov     sp,a
0894 EA        1979            mov     a,r2
0895 6001      1980            jz      L014024?
0897           1981   L014023?:
0897           1982   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:426: if (IndVolts[0]/IndVolts[1]<0.8){
0897 74CD      1983            mov     a,#0xCD
0899 C0E0      1984            push    acc
089B 74CC      1985            mov     a,#0xCC
089D C0E0      1986            push    acc
089F 744C      1987            mov     a,#0x4C
08A1 C0E0      1988            push    acc
08A3 743F      1989            mov     a,#0x3F
08A5 C0E0      1990            push    acc
08A7 853082    1991            mov     dpl,_MotorControl_sloc1_1_0
08AA 853183    1992            mov     dph,(_MotorControl_sloc1_1_0 + 1)
08AD 8532F0    1993            mov     b,(_MotorControl_sloc1_1_0 + 2)
08B0 E533      1994            mov     a,(_MotorControl_sloc1_1_0 + 3)
08B2 120100    1995            lcall   ___fslt
08B5 AA82      1996            mov     r2,dpl
08B7 E581      1997            mov     a,sp
08B9 24FC      1998            add     a,#0xfc
08BB F581      1999            mov     sp,a
08BD EA        2000            mov     a,r2
08BE 6001      2001            jz      L014021?
08C0           2002   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:427: pwm_RED0=0;
08C0           2003   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:428: pwm_RED1=0;
08C0           2004   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:429: pwm_BLU0=2*power;
08C0 E4        2005            clr     a
08C1 F5F0      2006            mov     _pwm_RED0,a
08C3 F5B0      2007            mov     _pwm_RED1,a
08C5 E578      2008            mov     a,_power
08C7 25E0      2009            add     a,acc
08C9 F570      2010            mov     _pwm_BLU0,a
08CB           2011   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:430: pwm_BLU1=0;
08CB 753000    2012            mov     _pwm_BLU1,#0x00
08CE 22        2013            ret
08CF           2014   L014021?:
08CF           2015   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:434: pwm_BLU0=0;
08CF 757000    2016            mov     _pwm_BLU0,#0x00
08D2           2017   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:435: pwm_BLU1=0;
08D2 753000    2018            mov     _pwm_BLU1,#0x00
08D5           2019   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:436: pwm_RED0=power;
08D5 8578F0    2020            mov     _pwm_RED0,_power
08D8           2021   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:437: pwm_RED1=0;
08D8 75B000    2022            mov     _pwm_RED1,#0x00
08DB 22        2023            ret
08DC           2024   L014024?:
08DC           2025   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:441: pwm_BLU0 = power;
08DC 857870    2026            mov     _pwm_BLU0,_power
08DF           2027   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:442: pwm_BLU1 = 0;
08DF 753000    2028            mov     _pwm_BLU1,#0x00
08E2           2029   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:443: pwm_RED0 = power;
08E2 8578F0    2030            mov     _pwm_RED0,_power
08E5           2031   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:444: pwm_RED1 = 0;
08E5 75B000    2032            mov     _pwm_RED1,#0x00
08E8           2033   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:446: break;
08E8           2034   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:450: case STOP:
08E8 22        2035            ret
08E9           2036   L014031?:
08E9           2037   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:451: pwm_BLU1 = 0;
08E9 753000    2038            mov     _pwm_BLU1,#0x00
08EC           2039   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:452: pwm_BLU0 = 0;
08EC 757000    2040            mov     _pwm_BLU0,#0x00
08EF           2041   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:453: pwm_RED1 = 0;
08EF 75B000    2042            mov     _pwm_RED1,#0x00
08F2           2043   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:454: pwm_RED0 = 0;
08F2 75F000    2044            mov     _pwm_RED0,#0x00
08F5           2045   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:461: }
08F5 22        2046            ret
08F6           2047   ;------------------------------------------------------------
08F6           2048   ;Allocation info for local variables in function 'DebuggingFctn'
08F6           2049   ;------------------------------------------------------------
08F6           2050   ;IndVolts                  Allocated with name '_DebuggingFctn_IndVolts_1_97'
08F6           2051   ;------------------------------------------------------------
08F6           2052   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:472: void DebuggingFctn (volatile float IndVolts[])
08F6           2053   ;        -----------------------------------------
08F6           2054   ;         function DebuggingFctn
08F6           2055   ;        -----------------------------------------
08F6           2056   _DebuggingFctn:
08F6 858220    2057            mov     _DebuggingFctn_IndVolts_1_97,dpl
08F9 858321    2058            mov     (_DebuggingFctn_IndVolts_1_97 + 1),dph
08FC 85F022    2059            mov     (_DebuggingFctn_IndVolts_1_97 + 2),b
08FF           2060   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:474: printf("Freq = %5.3f HZ, Mode = %d, Ratio = %5.3f\r", frequency, mode, IndVolts[0], IndVolts[0]/IndVolts[1]);
08FF AA20      2061            mov     r2,_DebuggingFctn_IndVolts_1_97
0901 AB21      2062            mov     r3,(_DebuggingFctn_IndVolts_1_97 + 1)
0903 AC22      2063            mov     r4,(_DebuggingFctn_IndVolts_1_97 + 2)
0905 8A82      2064            mov     dpl,r2
0907 8B83      2065            mov     dph,r3
0909 8CF0      2066            mov     b,r4
090B 120100    2067            lcall   __gptrget
090E FD        2068            mov     r5,a
090F A3        2069            inc     dptr
0910 120100    2070            lcall   __gptrget
0913 FE        2071            mov     r6,a
0914 A3        2072            inc     dptr
0915 120100    2073            lcall   __gptrget
0918 FF        2074            mov     r7,a
0919 A3        2075            inc     dptr
091A 120100    2076            lcall   __gptrget
091D F8        2077            mov     r0,a
091E 7404      2078            mov     a,#0x04
0920 2A        2079            add     a,r2
0921 FA        2080            mov     r2,a
0922 E4        2081            clr     a
0923 3B        2082            addc    a,r3
0924 FB        2083            mov     r3,a
0925 8A82      2084            mov     dpl,r2
0927 8B83      2085            mov     dph,r3
0929 8CF0      2086            mov     b,r4
092B 120100    2087            lcall   __gptrget
092E FA        2088            mov     r2,a
092F A3        2089            inc     dptr
0930 120100    2090            lcall   __gptrget
0933 FB        2091            mov     r3,a
0934 A3        2092            inc     dptr
0935 120100    2093            lcall   __gptrget
0938 FC        2094            mov     r4,a
0939 A3        2095            inc     dptr
093A 120100    2096            lcall   __gptrget
093D F9        2097            mov     r1,a
093E C005      2098            push    ar5
0940 C006      2099            push    ar6
0942 C007      2100            push    ar7
0944 C000      2101            push    ar0
0946 C002      2102            push    ar2
0948 C003      2103            push    ar3
094A C004      2104            push    ar4
094C C001      2105            push    ar1
094E 8D82      2106            mov     dpl,r5
0950 8E83      2107            mov     dph,r6
0952 8FF0      2108            mov     b,r7
0954 E8        2109            mov     a,r0
0955 120100    2110            lcall   ___fsdiv
0958 AA82      2111            mov     r2,dpl
095A AB83      2112            mov     r3,dph
095C ACF0      2113            mov     r4,b
095E F9        2114            mov     r1,a
095F E581      2115            mov     a,sp
0961 24FC      2116            add     a,#0xfc
0963 F581      2117            mov     sp,a
0965 D000      2118            pop     ar0
0967 D007      2119            pop     ar7
0969 D006      2120            pop     ar6
096B D005      2121            pop     ar5
096D C002      2122            push    ar2
096F C003      2123            push    ar3
0971 C004      2124            push    ar4
0973 C001      2125            push    ar1
0975 C005      2126            push    ar5
0977 C006      2127            push    ar6
0979 C007      2128            push    ar7
097B C000      2129            push    ar0
097D C0B0      2130            push    _mode
097F C0B1      2131            push    (_mode + 1)
0981 C0F0      2132            push    _frequency
0983 C0F1      2133            push    (_frequency + 1)
0985 C0F2      2134            push    (_frequency + 2)
0987 C0F3      2135            push    (_frequency + 3)
0989 7450      2136            mov     a,#__str_0
098B C0E0      2137            push    acc
098D 74AF      2138            mov     a,#(__str_0 >> 8)
098F C0E0      2139            push    acc
0991 7480      2140            mov     a,#0x80
0993 C0E0      2141            push    acc
0995 120100    2142            lcall   _printf
0998 E581      2143            mov     a,sp
099A 24EF      2144            add     a,#0xef
099C F581      2145            mov     sp,a
099E 22        2146            ret
099F           2147   ;------------------------------------------------------------
099F           2148   ;Allocation info for local variables in function 'main'
099F           2149   ;------------------------------------------------------------
099F           2150   ;IndVolts                  Allocated with name '_main_IndVolts_1_100'
099F           2151   ;------------------------------------------------------------
099F           2152   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:484: void main (void)
099F           2153   ;        -----------------------------------------
099F           2154   ;         function main
099F           2155   ;        -----------------------------------------
099F           2156   _main:
099F           2157   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:491: TIMER0_Init(); // Initialize timer 0 to read the frequency of the fm signal
099F 120100    2158            lcall   _TIMER0_Init
09A2           2159   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:492: TIMER2_Init(); // Initialize timer 2 for periodic interrupts used for motor control
09A2 120100    2160            lcall   _TIMER2_Init
09A5           2161   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:493: EA=1; // Enable interrupts
09A5 D2AF      2162            setb    _EA
09A7           2163   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:495: InitPinADC(1, 7); // Configure P1.7 as analog input
09A7 755007    2164            mov     _InitPinADC_PARM_2,#0x07
09AA 758201    2165            mov     dpl,#0x01
09AD 120100    2166            lcall   _InitPinADC
09B0           2167   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:496: InitPinADC(2, 0); // Configure P2.0 as analog input
09B0 755000    2168            mov     _InitPinADC_PARM_2,#0x00
09B3 758202    2169            mov     dpl,#0x02
09B6 120100    2170            lcall   _InitPinADC
09B9           2171   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:497: InitPinADC(2, 7); // Configure P2.7 as analog input
09B9 755007    2172            mov     _InitPinADC_PARM_2,#0x07
09BC 758202    2173            mov     dpl,#0x02
09BF 120100    2174            lcall   _InitPinADC
09C2           2175   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:498: InitADC();
09C2 120100    2176            lcall   _InitADC
09C5           2177   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:499: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
09C5 74D0      2178            mov     a,#__str_1
09C7 C0E0      2179            push    acc
09C9 74AF      2180            mov     a,#(__str_1 >> 8)
09CB C0E0      2181            push    acc
09CD 7480      2182            mov     a,#0x80
09CF C0E0      2183            push    acc
09D1 120100    2184            lcall   _printf
09D4 1581      2185            dec     sp
09D6 1581      2186            dec     sp
09D8 1581      2187            dec     sp
09DA           2188   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:507: while(1)
09DA           2189   L016002?:
09DA           2190   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:510: DetermineMode();
09DA 120100    2191            lcall   _DetermineMode
09DD           2192   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:513: IndVolts[0] = Volts_at_Pin(LQFP32_MUX_P2_7);
09DD 75820F    2193            mov     dpl,#0x0F
09E0 120100    2194            lcall   _Volts_at_Pin
09E3 AA82      2195            mov     r2,dpl
09E5 AB83      2196            mov     r3,dph
09E7 ACF0      2197            mov     r4,b
09E9 FD        2198            mov     r5,a
09EA 8A70      2199            mov     _main_IndVolts_1_100,r2
09EC 8B71      2200            mov     (_main_IndVolts_1_100 + 1),r3
09EE 8C72      2201            mov     (_main_IndVolts_1_100 + 2),r4
09F0 8D73      2202            mov     (_main_IndVolts_1_100 + 3),r5
09F2           2203   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:514: IndVolts[1] = Volts_at_Pin(LQFP32_MUX_P1_7);
09F2 758207    2204            mov     dpl,#0x07
09F5 120100    2205            lcall   _Volts_at_Pin
09F8 AA82      2206            mov     r2,dpl
09FA AB83      2207            mov     r3,dph
09FC ACF0      2208            mov     r4,b
09FE FD        2209            mov     r5,a
09FF 8A74      2210            mov     (_main_IndVolts_1_100 + 0x0004),r2
0A01 8B75      2211            mov     ((_main_IndVolts_1_100 + 0x0004) + 1),r3
0A03 8C76      2212            mov     ((_main_IndVolts_1_100 + 0x0004) + 2),r4
0A05 8D77      2213            mov     ((_main_IndVolts_1_100 + 0x0004) + 3),r5
0A07           2214   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:515: IndVolts[2] = Volts_at_Pin(LQFP32_MUX_P2_0);
0A07 758208    2215            mov     dpl,#0x08
0A0A 120100    2216            lcall   _Volts_at_Pin
0A0D AA82      2217            mov     r2,dpl
0A0F AB83      2218            mov     r3,dph
0A11 ACF0      2219            mov     r4,b
0A13 FD        2220            mov     r5,a
0A14 8A78      2221            mov     (_main_IndVolts_1_100 + 0x0008),r2
0A16 8B79      2222            mov     ((_main_IndVolts_1_100 + 0x0008) + 1),r3
0A18 8C7A      2223            mov     ((_main_IndVolts_1_100 + 0x0008) + 2),r4
0A1A 8D7B      2224            mov     ((_main_IndVolts_1_100 + 0x0008) + 3),r5
0A1C           2225   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:519: MotorControl(IndVolts);
0A1C 909B70    2226            mov     dptr,#_main_IndVolts_1_100
0A1F 75F040    2227            mov     b,#0x40
0A22 120100    2228            lcall   _MotorControl
0A25           2229   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:522: DebuggingFctn(IndVolts);
0A25 909B70    2230            mov     dptr,#_main_IndVolts_1_100
0A28 75F040    2231            mov     b,#0x40
0A2B 120100    2232            lcall   _DebuggingFctn
0A2E           2233   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:525: waitms(20);
0A2E 900014    2234            mov     dptr,#0x0014
0A31 120100    2235            lcall   _waitms
0A34           2236   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:526: millisecond = millisecond + 20;
0A34 7414      2237            mov     a,#0x14
0A36 2560      2238            add     a,_millisecond
0A38 F560      2239            mov     _millisecond,a
0A3A E4        2240            clr     a
0A3B 3561      2241            addc    a,(_millisecond + 1)
0A3D F561      2242            mov     (_millisecond + 1),a
0A3F 8001      2243            sjmp    L016002?
0A41           2244            rseg R_CSEG
0A41           2245   
0000           2246            rseg R_XINIT
0000           2247   
0000           2248            rseg R_CONST
0000           2249   __str_0:
0000 46726571  2250            db 'Freq = %5.3f HZ, Mode = %d, Ratio = %5.3f'
     203D2025
     352E3366
     20485A2C
     204D6F64
     65203D20
     25642C20
     52617469
     6F203D20
     25352E33
     66
0029 0D        2251            db 0x0D
002A 00        2252            db 0x00
002B           2253   __str_1:
002B 1B        2254            db 0x1B
002C 5B324A    2255            db '[2J'
002F 00        2256            db 0x00
0030           2257   
002E           2258            CSEG
002E           2259   
002E           2260   end
