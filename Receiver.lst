0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Mon Apr 03 16:23:21 2017
0000              5   ;--------------------------------------------------------
                  5   $name Receiver
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _DebuggingFctn
0000             30            public _MotorControl
0000             31            public _DetermineMode
0000             32            public _ReadFrequency
0000             33            public _Timer2_ISR
0000             34            public _Volts_at_Pin
0000             35            public _ADC_at_Pin
0000             36            public _InitPinADC
0000             37            public _InitADC
0000             38            public _TIMER2_Init
0000             39            public _TIMER0_Init
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public __c51_external_startup
0000             43            public _mode
0000             44            public _frequency
0000             45            public _i
0000             46            public _overflow_count
0000             47            public _dirout
0000             48            public _pwm_RED1
0000             49            public _pwm_RED0
0000             50            public _pwm_BLU1
0000             51            public _pwm_BLU0
0000             52            public _power
0000             53            public _pwm_count
0000             54   ;--------------------------------------------------------
0000             55   ; Special Function Registers
0000             56   ;--------------------------------------------------------
0000             57   _P0             DATA 0x80
0000             58   _SP             DATA 0x81
0000             59   _DPL            DATA 0x82
0000             60   _DPH            DATA 0x83
0000             61   _EMI0TC         DATA 0x84
0000             62   _EMI0CF         DATA 0x85
0000             63   _OSCLCN         DATA 0x86
0000             64   _PCON           DATA 0x87
0000             65   _TCON           DATA 0x88
0000             66   _TMOD           DATA 0x89
0000             67   _TL0            DATA 0x8a
0000             68   _TL1            DATA 0x8b
0000             69   _TH0            DATA 0x8c
0000             70   _TH1            DATA 0x8d
0000             71   _CKCON          DATA 0x8e
0000             72   _PSCTL          DATA 0x8f
0000             73   _P1             DATA 0x90
0000             74   _TMR3CN         DATA 0x91
0000             75   _TMR4CN         DATA 0x91
0000             76   _TMR3RLL        DATA 0x92
0000             77   _TMR4RLL        DATA 0x92
0000             78   _TMR3RLH        DATA 0x93
0000             79   _TMR4RLH        DATA 0x93
0000             80   _TMR3L          DATA 0x94
0000             81   _TMR4L          DATA 0x94
0000             82   _TMR3H          DATA 0x95
0000             83   _TMR4H          DATA 0x95
0000             84   _USB0ADR        DATA 0x96
0000             85   _USB0DAT        DATA 0x97
0000             86   _SCON           DATA 0x98
0000             87   _SCON0          DATA 0x98
0000             88   _SBUF           DATA 0x99
0000             89   _SBUF0          DATA 0x99
0000             90   _CPT1CN         DATA 0x9a
0000             91   _CPT0CN         DATA 0x9b
0000             92   _CPT1MD         DATA 0x9c
0000             93   _CPT0MD         DATA 0x9d
0000             94   _CPT1MX         DATA 0x9e
0000             95   _CPT0MX         DATA 0x9f
0000             96   _P2             DATA 0xa0
0000             97   _SPI0CFG        DATA 0xa1
0000             98   _SPI0CKR        DATA 0xa2
0000             99   _SPI0DAT        DATA 0xa3
0000            100   _P0MDOUT        DATA 0xa4
0000            101   _P1MDOUT        DATA 0xa5
0000            102   _P2MDOUT        DATA 0xa6
0000            103   _P3MDOUT        DATA 0xa7
0000            104   _IE             DATA 0xa8
0000            105   _CLKSEL         DATA 0xa9
0000            106   _EMI0CN         DATA 0xaa
0000            107   __XPAGE         DATA 0xaa
0000            108   _SBCON1         DATA 0xac
0000            109   _P4MDOUT        DATA 0xae
0000            110   _PFE0CN         DATA 0xaf
0000            111   _P3             DATA 0xb0
0000            112   _OSCXCN         DATA 0xb1
0000            113   _OSCICN         DATA 0xb2
0000            114   _OSCICL         DATA 0xb3
0000            115   _SBRLL1         DATA 0xb4
0000            116   _SBRLH1         DATA 0xb5
0000            117   _FLSCL          DATA 0xb6
0000            118   _FLKEY          DATA 0xb7
0000            119   _IP             DATA 0xb8
0000            120   _CLKMUL         DATA 0xb9
0000            121   _SMBTC          DATA 0xb9
0000            122   _AMX0N          DATA 0xba
0000            123   _AMX0P          DATA 0xbb
0000            124   _ADC0CF         DATA 0xbc
0000            125   _ADC0L          DATA 0xbd
0000            126   _ADC0H          DATA 0xbe
0000            127   _SFRPAGE        DATA 0xbf
0000            128   _SMB0CN         DATA 0xc0
0000            129   _SMB1CN         DATA 0xc0
0000            130   _SMB0CF         DATA 0xc1
0000            131   _SMB1CF         DATA 0xc1
0000            132   _SMB0DAT        DATA 0xc2
0000            133   _SMB1DAT        DATA 0xc2
0000            134   _ADC0GTL        DATA 0xc3
0000            135   _ADC0GTH        DATA 0xc4
0000            136   _ADC0LTL        DATA 0xc5
0000            137   _ADC0LTH        DATA 0xc6
0000            138   _P4             DATA 0xc7
0000            139   _TMR2CN         DATA 0xc8
0000            140   _TMR5CN         DATA 0xc8
0000            141   _REG01CN        DATA 0xc9
0000            142   _TMR2RLL        DATA 0xca
0000            143   _TMR5RLL        DATA 0xca
0000            144   _TMR2RLH        DATA 0xcb
0000            145   _TMR5RLH        DATA 0xcb
0000            146   _TMR2L          DATA 0xcc
0000            147   _TMR5L          DATA 0xcc
0000            148   _TMR2H          DATA 0xcd
0000            149   _TMR5H          DATA 0xcd
0000            150   _SMB0ADM        DATA 0xce
0000            151   _SMB1ADM        DATA 0xce
0000            152   _SMB0ADR        DATA 0xcf
0000            153   _SMB1ADR        DATA 0xcf
0000            154   _PSW            DATA 0xd0
0000            155   _REF0CN         DATA 0xd1
0000            156   _SCON1          DATA 0xd2
0000            157   _SBUF1          DATA 0xd3
0000            158   _P0SKIP         DATA 0xd4
0000            159   _P1SKIP         DATA 0xd5
0000            160   _P2SKIP         DATA 0xd6
0000            161   _USB0XCN        DATA 0xd7
0000            162   _PCA0CN         DATA 0xd8
0000            163   _PCA0MD         DATA 0xd9
0000            164   _PCA0CPM0       DATA 0xda
0000            165   _PCA0CPM1       DATA 0xdb
0000            166   _PCA0CPM2       DATA 0xdc
0000            167   _PCA0CPM3       DATA 0xdd
0000            168   _PCA0CPM4       DATA 0xde
0000            169   _P3SKIP         DATA 0xdf
0000            170   _ACC            DATA 0xe0
0000            171   _XBR0           DATA 0xe1
0000            172   _XBR1           DATA 0xe2
0000            173   _XBR2           DATA 0xe3
0000            174   _IT01CF         DATA 0xe4
0000            175   _CKCON1         DATA 0xe4
0000            176   _SMOD1          DATA 0xe5
0000            177   _EIE1           DATA 0xe6
0000            178   _EIE2           DATA 0xe7
0000            179   _ADC0CN         DATA 0xe8
0000            180   _PCA0CPL1       DATA 0xe9
0000            181   _PCA0CPH1       DATA 0xea
0000            182   _PCA0CPL2       DATA 0xeb
0000            183   _PCA0CPH2       DATA 0xec
0000            184   _PCA0CPL3       DATA 0xed
0000            185   _PCA0CPH3       DATA 0xee
0000            186   _RSTSRC         DATA 0xef
0000            187   _B              DATA 0xf0
0000            188   _P0MDIN         DATA 0xf1
0000            189   _P1MDIN         DATA 0xf2
0000            190   _P2MDIN         DATA 0xf3
0000            191   _P3MDIN         DATA 0xf4
0000            192   _P4MDIN         DATA 0xf5
0000            193   _EIP1           DATA 0xf6
0000            194   _EIP2           DATA 0xf7
0000            195   _SPI0CN         DATA 0xf8
0000            196   _PCA0L          DATA 0xf9
0000            197   _PCA0H          DATA 0xfa
0000            198   _PCA0CPL0       DATA 0xfb
0000            199   _PCA0CPH0       DATA 0xfc
0000            200   _PCA0CPL4       DATA 0xfd
0000            201   _PCA0CPH4       DATA 0xfe
0000            202   _VDM0CN         DATA 0xff
0000            203   _DPTR           DATA 0x8382
0000            204   _TMR2RL         DATA 0xcbca
0000            205   _TMR3RL         DATA 0x9392
0000            206   _TMR4RL         DATA 0x9392
0000            207   _TMR5RL         DATA 0xcbca
0000            208   _TMR2           DATA 0xcdcc
0000            209   _TMR3           DATA 0x9594
0000            210   _TMR4           DATA 0x9594
0000            211   _TMR5           DATA 0xcdcc
0000            212   _SBRL1          DATA 0xb5b4
0000            213   _ADC0           DATA 0xbebd
0000            214   _ADC0GT         DATA 0xc4c3
0000            215   _ADC0LT         DATA 0xc6c5
0000            216   _PCA0           DATA 0xfaf9
0000            217   _PCA0CP1        DATA 0xeae9
0000            218   _PCA0CP2        DATA 0xeceb
0000            219   _PCA0CP3        DATA 0xeeed
0000            220   _PCA0CP0        DATA 0xfcfb
0000            221   _PCA0CP4        DATA 0xfefd
0000            222   ;--------------------------------------------------------
0000            223   ; special function bits
0000            224   ;--------------------------------------------------------
0000            225   _P0_0           BIT 0x80
0000            226   _P0_1           BIT 0x81
0000            227   _P0_2           BIT 0x82
0000            228   _P0_3           BIT 0x83
0000            229   _P0_4           BIT 0x84
0000            230   _P0_5           BIT 0x85
0000            231   _P0_6           BIT 0x86
0000            232   _P0_7           BIT 0x87
0000            233   _TF1            BIT 0x8f
0000            234   _TR1            BIT 0x8e
0000            235   _TF0            BIT 0x8d
0000            236   _TR0            BIT 0x8c
0000            237   _IE1            BIT 0x8b
0000            238   _IT1            BIT 0x8a
0000            239   _IE0            BIT 0x89
0000            240   _IT0            BIT 0x88
0000            241   _P1_0           BIT 0x90
0000            242   _P1_1           BIT 0x91
0000            243   _P1_2           BIT 0x92
0000            244   _P1_3           BIT 0x93
0000            245   _P1_4           BIT 0x94
0000            246   _P1_5           BIT 0x95
0000            247   _P1_6           BIT 0x96
0000            248   _P1_7           BIT 0x97
0000            249   _S0MODE         BIT 0x9f
0000            250   _SCON0_6        BIT 0x9e
0000            251   _MCE0           BIT 0x9d
0000            252   _REN0           BIT 0x9c
0000            253   _TB80           BIT 0x9b
0000            254   _RB80           BIT 0x9a
0000            255   _TI0            BIT 0x99
0000            256   _RI0            BIT 0x98
0000            257   _SCON_6         BIT 0x9e
0000            258   _MCE            BIT 0x9d
0000            259   _REN            BIT 0x9c
0000            260   _TB8            BIT 0x9b
0000            261   _RB8            BIT 0x9a
0000            262   _TI             BIT 0x99
0000            263   _RI             BIT 0x98
0000            264   _P2_0           BIT 0xa0
0000            265   _P2_1           BIT 0xa1
0000            266   _P2_2           BIT 0xa2
0000            267   _P2_3           BIT 0xa3
0000            268   _P2_4           BIT 0xa4
0000            269   _P2_5           BIT 0xa5
0000            270   _P2_6           BIT 0xa6
0000            271   _P2_7           BIT 0xa7
0000            272   _EA             BIT 0xaf
0000            273   _ESPI0          BIT 0xae
0000            274   _ET2            BIT 0xad
0000            275   _ES0            BIT 0xac
0000            276   _ET1            BIT 0xab
0000            277   _EX1            BIT 0xaa
0000            278   _ET0            BIT 0xa9
0000            279   _EX0            BIT 0xa8
0000            280   _P3_0           BIT 0xb0
0000            281   _P3_1           BIT 0xb1
0000            282   _P3_2           BIT 0xb2
0000            283   _P3_3           BIT 0xb3
0000            284   _P3_4           BIT 0xb4
0000            285   _P3_5           BIT 0xb5
0000            286   _P3_6           BIT 0xb6
0000            287   _P3_7           BIT 0xb7
0000            288   _IP_7           BIT 0xbf
0000            289   _PSPI0          BIT 0xbe
0000            290   _PT2            BIT 0xbd
0000            291   _PS0            BIT 0xbc
0000            292   _PT1            BIT 0xbb
0000            293   _PX1            BIT 0xba
0000            294   _PT0            BIT 0xb9
0000            295   _PX0            BIT 0xb8
0000            296   _MASTER0        BIT 0xc7
0000            297   _TXMODE0        BIT 0xc6
0000            298   _STA0           BIT 0xc5
0000            299   _STO0           BIT 0xc4
0000            300   _ACKRQ0         BIT 0xc3
0000            301   _ARBLOST0       BIT 0xc2
0000            302   _ACK0           BIT 0xc1
0000            303   _SI0            BIT 0xc0
0000            304   _MASTER1        BIT 0xc7
0000            305   _TXMODE1        BIT 0xc6
0000            306   _STA1           BIT 0xc5
0000            307   _STO1           BIT 0xc4
0000            308   _ACKRQ1         BIT 0xc3
0000            309   _ARBLOST1       BIT 0xc2
0000            310   _ACK1           BIT 0xc1
0000            311   _SI1            BIT 0xc0
0000            312   _TF2            BIT 0xcf
0000            313   _TF2H           BIT 0xcf
0000            314   _TF2L           BIT 0xce
0000            315   _TF2LEN         BIT 0xcd
0000            316   _TF2CEN         BIT 0xcc
0000            317   _T2SPLIT        BIT 0xcb
0000            318   _TR2            BIT 0xca
0000            319   _T2CSS          BIT 0xc9
0000            320   _T2XCLK         BIT 0xc8
0000            321   _TF5H           BIT 0xcf
0000            322   _TF5L           BIT 0xce
0000            323   _TF5LEN         BIT 0xcd
0000            324   _TMR5CN_4       BIT 0xcc
0000            325   _T5SPLIT        BIT 0xcb
0000            326   _TR5            BIT 0xca
0000            327   _TMR5CN_1       BIT 0xc9
0000            328   _T5XCLK         BIT 0xc8
0000            329   _CY             BIT 0xd7
0000            330   _AC             BIT 0xd6
0000            331   _F0             BIT 0xd5
0000            332   _RS1            BIT 0xd4
0000            333   _RS0            BIT 0xd3
0000            334   _OV             BIT 0xd2
0000            335   _F1             BIT 0xd1
0000            336   _PARITY         BIT 0xd0
0000            337   _CF             BIT 0xdf
0000            338   _CR             BIT 0xde
0000            339   _PCA0CN_5       BIT 0xde
0000            340   _CCF4           BIT 0xdc
0000            341   _CCF3           BIT 0xdb
0000            342   _CCF2           BIT 0xda
0000            343   _CCF1           BIT 0xd9
0000            344   _CCF0           BIT 0xd8
0000            345   _ACC_7          BIT 0xe7
0000            346   _ACC_6          BIT 0xe6
0000            347   _ACC_5          BIT 0xe5
0000            348   _ACC_4          BIT 0xe4
0000            349   _ACC_3          BIT 0xe3
0000            350   _ACC_2          BIT 0xe2
0000            351   _ACC_1          BIT 0xe1
0000            352   _ACC_0          BIT 0xe0
0000            353   _AD0EN          BIT 0xef
0000            354   _AD0TM          BIT 0xee
0000            355   _AD0INT         BIT 0xed
0000            356   _AD0BUSY        BIT 0xec
0000            357   _AD0WINT        BIT 0xeb
0000            358   _AD0CM2         BIT 0xea
0000            359   _AD0CM1         BIT 0xe9
0000            360   _AD0CM0         BIT 0xe8
0000            361   _B_7            BIT 0xf7
0000            362   _B_6            BIT 0xf6
0000            363   _B_5            BIT 0xf5
0000            364   _B_4            BIT 0xf4
0000            365   _B_3            BIT 0xf3
0000            366   _B_2            BIT 0xf2
0000            367   _B_1            BIT 0xf1
0000            368   _B_0            BIT 0xf0
0000            369   _SPIF           BIT 0xff
0000            370   _WCOL           BIT 0xfe
0000            371   _MODF           BIT 0xfd
0000            372   _RXOVRN         BIT 0xfc
0000            373   _NSSMD1         BIT 0xfb
0000            374   _NSSMD0         BIT 0xfa
0000            375   _TXBMT          BIT 0xf9
0000            376   _SPIEN          BIT 0xf8
0000            377   ;--------------------------------------------------------
0000            378   ; overlayable register banks
0000            379   ;--------------------------------------------------------
0000            380            rbank0 segment data overlay
0000            381   ;--------------------------------------------------------
0000            382   ; internal ram data
0000            383   ;--------------------------------------------------------
0000            384            rseg R_DSEG
0000            385   _pwm_count:
0000            386            ds 1
0001            387   _power:
0001            388            ds 1
0002            389   _pwm_BLU0:
0002            390            ds 1
0003            391   _pwm_BLU1:
0003            392            ds 1
0004            393   _pwm_RED0:
0004            394            ds 1
0005            395   _pwm_RED1:
0005            396            ds 1
0006            397   _dirout:
0006            398            ds 1
0007            399   _overflow_count:
0007            400            ds 1
0008            401   _i:
0008            402            ds 2
000A            403   _frequency:
000A            404            ds 4
000E            405   _mode:
000E            406            ds 1
000F            407   _MotorControl_IndVolts_1_73:
000F            408            ds 3
0012            409   _DebuggingFctn_IndVolts_1_79:
0012            410            ds 3
0015            411   _DebuggingFctn_sloc0_1_0:
0015            412            ds 4
0019            413   _main_IndVolts_1_82:
0019            414            ds 12
0025            415   ;--------------------------------------------------------
0025            416   ; overlayable items in internal ram 
0025            417   ;--------------------------------------------------------
0000            418            rseg    R_OSEG
0000            419            rseg    R_OSEG
0000            420   _InitPinADC_PARM_2:
0000            421            ds 1
0001            422            rseg    R_OSEG
0001            423   ;--------------------------------------------------------
0001            424   ; indirectly addressable internal ram data
0001            425   ;--------------------------------------------------------
0000            426            rseg R_ISEG
0000            427   ;--------------------------------------------------------
0000            428   ; absolute internal ram data
0000            429   ;--------------------------------------------------------
0000            430            DSEG
0000            431   ;--------------------------------------------------------
0000            432   ; bit data
0000            433   ;--------------------------------------------------------
0000            434            rseg R_BSEG
0000            435   _Timer2_ISR_sloc0_1_0:
0000            436            DBIT    1
0001            437   ;--------------------------------------------------------
0001            438   ; paged external ram data
0001            439   ;--------------------------------------------------------
0000            440            rseg R_PSEG
0000            441   ;--------------------------------------------------------
0000            442   ; external ram data
0000            443   ;--------------------------------------------------------
0000            444            rseg R_XSEG
0000            445   ;--------------------------------------------------------
0000            446   ; absolute external ram data
0000            447   ;--------------------------------------------------------
0000            448            XSEG
0000            449   ;--------------------------------------------------------
0000            450   ; external initialized ram data
0000            451   ;--------------------------------------------------------
0000            452            rseg R_IXSEG
0000            453            rseg R_HOME
0000            454            rseg R_GSINIT
0000            455            rseg R_CSEG
0000            456   ;--------------------------------------------------------
0000            457   ; Reset entry point and interrupt vectors
0000            458   ;--------------------------------------------------------
0000            459            CSEG at 0x0000
0000 020100     460            ljmp    _crt0
002B            461            CSEG at 0x002b
002B 020100     462            ljmp    _Timer2_ISR
002E            463   ;--------------------------------------------------------
002E            464   ; global & static initialisations
002E            465   ;--------------------------------------------------------
0000            466            rseg R_HOME
0000            467            rseg R_GSINIT
0000            468            rseg R_GSINIT
0000            469   ;--------------------------------------------------------
0000            470   ; data variables initialization
0000            471   ;--------------------------------------------------------
0000            472            rseg R_DINIT
0000            473   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:48: volatile unsigned char pwm_count=0;
0000 75E000     474            mov     _pwm_count,#0x00
0003            475   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:49: volatile unsigned char power=30;
0003 75A01E     476            mov     _power,#0x1E
0006            477   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:50: volatile unsigned char pwm_BLU0=0;
0006 756000     478            mov     _pwm_BLU0,#0x00
0009            479   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:51: volatile unsigned char pwm_BLU1=0;
0009 752000     480            mov     _pwm_BLU1,#0x00
000C            481   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:52: volatile unsigned char pwm_RED0=0;
000C 75E000     482            mov     _pwm_RED0,#0x00
000F            483   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:53: volatile unsigned char pwm_RED1=0;
000F 75A000     484            mov     _pwm_RED1,#0x00
0012            485   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:54: volatile unsigned char dirout=0;
0012 756000     486            mov     _dirout,#0x00
0015            487   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:55: volatile unsigned char overflow_count=0;
0015 752000     488            mov     _overflow_count,#0x00
0018            489   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:56: int i = 0;
0018 E4         490            clr     a
0019 F5E0       491            mov     _i,a
001B F5E1       492            mov     (_i + 1),a
001D            493   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:57: float frequency=0;
001D 75A000     494            mov     _frequency,#0x00
0020 75A100     495            mov     (_frequency + 1),#0x00
0023 75A200     496            mov     (_frequency + 2),#0x00
0026 75A300     497            mov     (_frequency + 3),#0x00
0029            498   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:58: unsigned char mode=FORWARD;
0029 756003     499            mov     _mode,#0x03
002C            500            ; The linker places a 'ret' at the end of segment R_DINIT.
002C            501   ;--------------------------------------------------------
002C            502   ; code
002C            503   ;--------------------------------------------------------
0000            504            rseg R_CSEG
0000            505   ;------------------------------------------------------------
0000            506   ;Allocation info for local variables in function '_c51_external_startup'
0000            507   ;------------------------------------------------------------
0000            508   ;------------------------------------------------------------
0000            509   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:66: char _c51_external_startup (void)
0000            510   ;        -----------------------------------------
0000            511   ;         function _c51_external_startup
0000            512   ;        -----------------------------------------
0000            513   __c51_external_startup:
0000            514            using   0
0000            515   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:68: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     516            anl     _PCA0MD,#0xBF
0003            517   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:69: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     518            mov     _VDM0CN,#0x80
0006            519   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:70: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     520            mov     _RSTSRC,#0x06
0009            521   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:78: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     522            orl     _CLKSEL,#0x03
000C            523   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:82: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     524            orl     _OSCICN,#0x03
000F            525   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:85: SCON0 = 0x10;
000F 759810     526            mov     _SCON0,#0x10
0012            527   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:87: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     528            mov     _TH1,#0x30
0015            529   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:88: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     530            anl     _CKCON,#0xF4
0018            531   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:89: CKCON |=  0x08;
0018 438E08     532            orl     _CKCON,#0x08
001B            533   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:102: TL1 = TH1;      // Init Timer1
001B 858D8B     534            mov     _TL1,_TH1
001E            535   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:103: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     536            anl     _TMOD,#0x0F
0021            537   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:104: TMOD |=  0x20;
0021 438920     538            orl     _TMOD,#0x20
0024            539   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:105: TR1 = 1; // START Timer1
0024 D28E       540            setb    _TR1
0026            541   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:106: TI = 1;  // Indicate TX0 ready
0026 D299       542            setb    _TI
0028            543   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:109: P2MDOUT|=0b_0000_0011;
0028 43A603     544            orl     _P2MDOUT,#0x03
002B            545   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:110: P0MDOUT |= 0x01;  // set P0.0 and P0.4 as push-pull outputs
002B 43A401     546            orl     _P0MDOUT,#0x01
002E            547   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:111: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)
002E 75E101     548            mov     _XBR0,#0x01
0031            549   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:112: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     550            mov     _XBR1,#0x40
0034            551   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:114: return 0;
0034 758200     552            mov     dpl,#0x00
0037 22         553            ret
0038            554   ;------------------------------------------------------------
0038            555   ;Allocation info for local variables in function 'Timer3us'
0038            556   ;------------------------------------------------------------
0038            557   ;us                        Allocated to registers r2 
0038            558   ;i                         Allocated to registers r3 
0038            559   ;------------------------------------------------------------
0038            560   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:121: void Timer3us(unsigned char us)
0038            561   ;        -----------------------------------------
0038            562   ;         function Timer3us
0038            563   ;        -----------------------------------------
0038            564   _Timer3us:
0038 AA82       565            mov     r2,dpl
003A            566   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:126: CKCON|=0b_0100_0000;
003A 438E40     567            orl     _CKCON,#0x40
003D            568   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:128: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
003D 7592D0     569            mov     _TMR3RL,#0xD0
0040 7593FF     570            mov     (_TMR3RL >> 8),#0xFF
0043            571   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:129: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0043 859294     572            mov     _TMR3,_TMR3RL
0046 859395     573            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0049            574   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:131: TMR3CN = 0x04;                 // Sart Timer3 and clear overflow flag
0049 759104     575            mov     _TMR3CN,#0x04
004C            576   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:132: for (i = 0; i < us; i++)       // Count <us> overflows
004C 7B00       577            mov     r3,#0x00
004E            578   L003004?:
004E C3         579            clr     c
004F EB         580            mov     a,r3
0050 9A         581            subb    a,r2
0051 5001       582            jnc     L003007?
0053            583   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:134: while (!(TMR3CN & 0x80));  // Wait for overflow
0053            584   L003001?:
0053 E591       585            mov     a,_TMR3CN
0055 30E710     586            jnb     acc.7,L003001?
0058            587   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:135: TMR3CN &= ~(0x80);         // Clear overflow indicator
0058 53917F     588            anl     _TMR3CN,#0x7F
005B            589   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:132: for (i = 0; i < us; i++)       // Count <us> overflows
005B 0B         590            inc     r3
005C 8001       591            sjmp    L003004?
005E            592   L003007?:
005E            593   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:137: TMR3CN = 0 ;                   // Stop Timer3 and clear overflow flag
005E 759100     594            mov     _TMR3CN,#0x00
0061 22         595            ret
0062            596   ;------------------------------------------------------------
0062            597   ;Allocation info for local variables in function 'waitms'
0062            598   ;------------------------------------------------------------
0062            599   ;ms                        Allocated to registers r2 r3 
0062            600   ;j                         Allocated to registers r2 r3 
0062            601   ;------------------------------------------------------------
0062            602   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:144: void waitms (unsigned int ms)
0062            603   ;        -----------------------------------------
0062            604   ;         function waitms
0062            605   ;        -----------------------------------------
0062            606   _waitms:
0062 AA82       607            mov     r2,dpl
0064 AB83       608            mov     r3,dph
0066            609   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:147: for(j=ms; j!=0; j--)
0066            610   L004001?:
0066 BA0010     611            cjne    r2,#0x00,L004010?
0069 BB0010     612            cjne    r3,#0x00,L004010?
006C 22         613            ret
006D            614   L004010?:
006D            615   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:149: Timer3us(249);
006D 7582F9     616            mov     dpl,#0xF9
0070 C002       617            push    ar2
0072 C003       618            push    ar3
0074 120100     619            lcall   _Timer3us
0077            620   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:150: Timer3us(249);
0077 7582F9     621            mov     dpl,#0xF9
007A 120100     622            lcall   _Timer3us
007D            623   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:151: Timer3us(249);
007D 7582F9     624            mov     dpl,#0xF9
0080 120100     625            lcall   _Timer3us
0083            626   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:152: Timer3us(250);
0083 7582FA     627            mov     dpl,#0xFA
0086 120100     628            lcall   _Timer3us
0089 D003       629            pop     ar3
008B D002       630            pop     ar2
008D            631   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:147: for(j=ms; j!=0; j--)
008D 1A         632            dec     r2
008E BAFF50     633            cjne    r2,#0xff,L004011?
0091 1B         634            dec     r3
0092            635   L004011?:
0092 8001       636            sjmp    L004001?
0094            637   ;------------------------------------------------------------
0094            638   ;Allocation info for local variables in function 'TIMER0_Init'
0094            639   ;------------------------------------------------------------
0094            640   ;------------------------------------------------------------
0094            641   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:158: void TIMER0_Init(void)
0094            642   ;        -----------------------------------------
0094            643   ;         function TIMER0_Init
0094            644   ;        -----------------------------------------
0094            645   _TIMER0_Init:
0094            646   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:160: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
0094 5389F0     647            anl     _TMOD,#0xF0
0097            648   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:161: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
0097 438901     649            orl     _TMOD,#0x01
009A            650   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:162: TR0=0; // Stop Timer/Counter 0
009A C28C       651            clr     _TR0
009C 22         652            ret
009D            653   ;------------------------------------------------------------
009D            654   ;Allocation info for local variables in function 'TIMER2_Init'
009D            655   ;------------------------------------------------------------
009D            656   ;------------------------------------------------------------
009D            657   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:168: void TIMER2_Init(void)
009D            658   ;        -----------------------------------------
009D            659   ;         function TIMER2_Init
009D            660   ;        -----------------------------------------
009D            661   _TIMER2_Init:
009D            662   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:170: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
009D 75C800     663            mov     _TMR2CN,#0x00
00A0            664   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:171: CKCON|=0b_0001_0000;
00A0 438E10     665            orl     _CKCON,#0x10
00A3            666   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:172: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
00A3 75CA78     667            mov     _TMR2RL,#0x78
00A6 75CBEC     668            mov     (_TMR2RL >> 8),#0xEC
00A9            669   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:173: TMR2=0xffff;   // Set to reload immediately
00A9 75CCFF     670            mov     _TMR2,#0xFF
00AC 75CDFF     671            mov     (_TMR2 >> 8),#0xFF
00AF            672   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:174: ET2=1;         // Enable Timer2 interrupts
00AF D2AD       673            setb    _ET2
00B1            674   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:175: TR2=1;         // Start Timer2
00B1 D2CA       675            setb    _TR2
00B3 22         676            ret
00B4            677   ;------------------------------------------------------------
00B4            678   ;Allocation info for local variables in function 'InitADC'
00B4            679   ;------------------------------------------------------------
00B4            680   ;------------------------------------------------------------
00B4            681   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:181: void InitADC (void)
00B4            682   ;        -----------------------------------------
00B4            683   ;         function InitADC
00B4            684   ;        -----------------------------------------
00B4            685   _InitADC:
00B4            686   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:184: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
00B4 75BCF8     687            mov     _ADC0CF,#0xF8
00B7            688   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:185: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
00B7 75E880     689            mov     _ADC0CN,#0x80
00BA            690   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:186: REF0CN = 0b_0000_1000; //Select VDD as the voltage reference for the converter
00BA 75D108     691            mov     _REF0CN,#0x08
00BD 22         692            ret
00BE            693   ;------------------------------------------------------------
00BE            694   ;Allocation info for local variables in function 'InitPinADC'
00BE            695   ;------------------------------------------------------------
00BE            696   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00BE            697   ;portno                    Allocated to registers r2 
00BE            698   ;mask                      Allocated to registers r3 
00BE            699   ;------------------------------------------------------------
00BE            700   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:193: void InitPinADC (unsigned char portno, unsigned char pinno)
00BE            701   ;        -----------------------------------------
00BE            702   ;         function InitPinADC
00BE            703   ;        -----------------------------------------
00BE            704   _InitPinADC:
00BE AA82       705            mov     r2,dpl
00C0            706   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:197: mask=1<<pinno;
00C0 8550F0     707            mov     b,_InitPinADC_PARM_2
00C3 05F0       708            inc     b
00C5 7401       709            mov     a,#0x01
00C7 8001       710            sjmp    L008012?
00C9            711   L008010?:
00C9 25E0       712            add     a,acc
00CB            713   L008012?:
00CB D5F010     714            djnz    b,L008010?
00CE FB         715            mov     r3,a
00CF            716   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:199: switch (portno)
00CF EA         717            mov     a,r2
00D0 24FC       718            add     a,#0xff - 0x03
00D2 4001       719            jc      L008007?
00D4 EA         720            mov     a,r2
00D5 2A         721            add     a,r2
00D6 2A         722            add     a,r2
00D7 909D90     723            mov     dptr,#L008014?
00DA 73         724            jmp     @a+dptr
00DB            725   L008014?:
00DB 020100     726            ljmp    L008001?
00DE 020100     727            ljmp    L008002?
00E1 020100     728            ljmp    L008003?
00E4 020100     729            ljmp    L008004?
00E7            730   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:201: case 0:
00E7            731   L008001?:
00E7            732   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:202: P0MDIN &= (~mask); // Set pin as analog input
00E7 EB         733            mov     a,r3
00E8 F4         734            cpl     a
00E9 52F1       735            anl     _P0MDIN,a
00EB            736   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:203: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00EB EB         737            mov     a,r3
00EC 42D4       738            orl     _P0SKIP,a
00EE            739   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:204: break;
00EE            740   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:205: case 1:
00EE 22         741            ret
00EF            742   L008002?:
00EF            743   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:206: P1MDIN &= (~mask); // Set pin as analog input
00EF EB         744            mov     a,r3
00F0 F4         745            cpl     a
00F1 52F2       746            anl     _P1MDIN,a
00F3            747   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:207: P1SKIP |= mask; // Skip Crossbar decoding for this pin
00F3 EB         748            mov     a,r3
00F4 42D5       749            orl     _P1SKIP,a
00F6            750   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:208: break;
00F6            751   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:209: case 2:
00F6 22         752            ret
00F7            753   L008003?:
00F7            754   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:210: P2MDIN &= (~mask); // Set pin as analog input
00F7 EB         755            mov     a,r3
00F8 F4         756            cpl     a
00F9 52F3       757            anl     _P2MDIN,a
00FB            758   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:211: P2SKIP |= mask; // Skip Crossbar decoding for this pin
00FB EB         759            mov     a,r3
00FC 42D6       760            orl     _P2SKIP,a
00FE            761   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:212: break;
00FE            762   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:213: case 3:
00FE 22         763            ret
00FF            764   L008004?:
00FF            765   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:214: P3MDIN &= (~mask); // Set pin as analog input
00FF EB         766            mov     a,r3
0100 F4         767            cpl     a
0101 FA         768            mov     r2,a
0102 52F4       769            anl     _P3MDIN,a
0104            770   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:215: P3SKIP |= mask; // Skip Crossbar decoding for this pin
0104 EB         771            mov     a,r3
0105 42DF       772            orl     _P3SKIP,a
0107            773   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:219: }
0107            774   L008007?:
0107 22         775            ret
0108            776   ;------------------------------------------------------------
0108            777   ;Allocation info for local variables in function 'ADC_at_Pin'
0108            778   ;------------------------------------------------------------
0108            779   ;pin                       Allocated to registers 
0108            780   ;------------------------------------------------------------
0108            781   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:226: unsigned int ADC_at_Pin(unsigned char pin)
0108            782   ;        -----------------------------------------
0108            783   ;         function ADC_at_Pin
0108            784   ;        -----------------------------------------
0108            785   _ADC_at_Pin:
0108 8582BB     786            mov     _AMX0P,dpl
010B            787   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:229: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
010B 75BA1F     788            mov     _AMX0N,#0x1F
010E            789   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:231: AD0BUSY=1;
010E D2EC       790            setb    _AD0BUSY
0110            791   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:232: while (AD0BUSY); // Wait for dummy conversion to finish
0110            792   L009001?:
0110 20ECD0     793            jb      _AD0BUSY,L009001?
0113            794   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:234: AD0BUSY = 1;
0113 D2EC       795            setb    _AD0BUSY
0115            796   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:235: while (AD0BUSY); // Wait for conversion to complete
0115            797   L009004?:
0115 20EC10     798            jb      _AD0BUSY,L009004?
0118            799   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:236: return (ADC0L+(ADC0H*0x100));
0118 AABD       800            mov     r2,_ADC0L
011A 7B00       801            mov     r3,#0x00
011C ADBE       802            mov     r5,_ADC0H
011E 7C00       803            mov     r4,#0x00
0120 EC         804            mov     a,r4
0121 2A         805            add     a,r2
0122 F582       806            mov     dpl,a
0124 ED         807            mov     a,r5
0125 3B         808            addc    a,r3
0126 F583       809            mov     dph,a
0128 22         810            ret
0129            811   ;------------------------------------------------------------
0129            812   ;Allocation info for local variables in function 'Volts_at_Pin'
0129            813   ;------------------------------------------------------------
0129            814   ;pin                       Allocated to registers r2 
0129            815   ;------------------------------------------------------------
0129            816   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:243: float Volts_at_Pin(unsigned char pin)
0129            817   ;        -----------------------------------------
0129            818   ;         function Volts_at_Pin
0129            819   ;        -----------------------------------------
0129            820   _Volts_at_Pin:
0129            821   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:245: return ((ADC_at_Pin(pin)*VDD_onboard)/1024.0);
0129 120100     822            lcall   _ADC_at_Pin
012C 120100     823            lcall   ___uint2fs
012F AA82       824            mov     r2,dpl
0131 AB83       825            mov     r3,dph
0133 ACF0       826            mov     r4,b
0135 FD         827            mov     r5,a
0136 C002       828            push    ar2
0138 C003       829            push    ar3
013A C004       830            push    ar4
013C C005       831            push    ar5
013E 90DD2F     832            mov     dptr,#0xDD2F
0141 75F054     833            mov     b,#0x54
0144 7440       834            mov     a,#0x40
0146 120100     835            lcall   ___fsmul
0149 AA82       836            mov     r2,dpl
014B AB83       837            mov     r3,dph
014D ACF0       838            mov     r4,b
014F FD         839            mov     r5,a
0150 E581       840            mov     a,sp
0152 24FC       841            add     a,#0xfc
0154 F581       842            mov     sp,a
0156 E4         843            clr     a
0157 C0E0       844            push    acc
0159 C0E0       845            push    acc
015B 7480       846            mov     a,#0x80
015D C0E0       847            push    acc
015F 7444       848            mov     a,#0x44
0161 C0E0       849            push    acc
0163 8A82       850            mov     dpl,r2
0165 8B83       851            mov     dph,r3
0167 8CF0       852            mov     b,r4
0169 ED         853            mov     a,r5
016A 120100     854            lcall   ___fsdiv
016D AA82       855            mov     r2,dpl
016F AB83       856            mov     r3,dph
0171 ACF0       857            mov     r4,b
0173 FD         858            mov     r5,a
0174 E581       859            mov     a,sp
0176 24FC       860            add     a,#0xfc
0178 F581       861            mov     sp,a
017A 8A82       862            mov     dpl,r2
017C 8B83       863            mov     dph,r3
017E 8CF0       864            mov     b,r4
0180 ED         865            mov     a,r5
0181 22         866            ret
0182            867   ;------------------------------------------------------------
0182            868   ;Allocation info for local variables in function 'Timer2_ISR'
0182            869   ;------------------------------------------------------------
0182            870   ;------------------------------------------------------------
0182            871   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:252: void Timer2_ISR (void) interrupt 5
0182            872   ;        -----------------------------------------
0182            873   ;         function Timer2_ISR
0182            874   ;        -----------------------------------------
0182            875   _Timer2_ISR:
0182 C0E0       876            push    acc
0184 C0D0       877            push    psw
0186 75D000     878            mov     psw,#0x00
0189            879   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:254: TF2H = 0; // Clear Timer2 interrupt flag
0189 C2CF       880            clr     _TF2H
018B            881   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:256: pwm_count++;
018B 05E0       882            inc     _pwm_count
018D            883   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:257: if(pwm_count>100) pwm_count=0;
018D E5E0       884            mov     a,_pwm_count
018F 249B       885            add     a,#0xff - 0x64
0191 5001       886            jnc     L011002?
0193 75E000     887            mov     _pwm_count,#0x00
0196            888   L011002?:
0196            889   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:259: BLU0=pwm_count>pwm_BLU0?0:1;
0196 C3         890            clr     c
0197 E560       891            mov     a,_pwm_BLU0
0199 95E0       892            subb    a,_pwm_count
019B 92D0       893            mov  _Timer2_ISR_sloc0_1_0,c
019D B3         894            cpl     c
019E 92A5       895            mov     _P2_5,c
01A0            896   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:260: BLU1=pwm_count>pwm_BLU1?0:1;
01A0 C3         897            clr     c
01A1 E520       898            mov     a,_pwm_BLU1
01A3 95E0       899            subb    a,_pwm_count
01A5 92D0       900            mov  _Timer2_ISR_sloc0_1_0,c
01A7 B3         901            cpl     c
01A8 92A2       902            mov     _P2_2,c
01AA            903   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:262: RED0=pwm_count>pwm_RED0?0:1;
01AA C3         904            clr     c
01AB E5E0       905            mov     a,_pwm_RED0
01AD 95E0       906            subb    a,_pwm_count
01AF 92D0       907            mov  _Timer2_ISR_sloc0_1_0,c
01B1 B3         908            cpl     c
01B2 92A3       909            mov     _P2_3,c
01B4            910   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:263: RED1=pwm_count>pwm_RED1?0:1;
01B4 C3         911            clr     c
01B5 E5A0       912            mov     a,_pwm_RED1
01B7 95E0       913            subb    a,_pwm_count
01B9 92D0       914            mov  _Timer2_ISR_sloc0_1_0,c
01BB B3         915            cpl     c
01BC 92A4       916            mov     _P2_4,c
01BE D0D0       917            pop     psw
01C0 D0E0       918            pop     acc
01C2 32         919            reti
01C3            920   ;        eliminated unneeded push/pop dpl
01C3            921   ;        eliminated unneeded push/pop dph
01C3            922   ;        eliminated unneeded push/pop b
01C3            923   ;------------------------------------------------------------
01C3            924   ;Allocation info for local variables in function 'ReadFrequency'
01C3            925   ;------------------------------------------------------------
01C3            926   ;------------------------------------------------------------
01C3            927   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:270: void ReadFrequency (void)
01C3            928   ;        -----------------------------------------
01C3            929   ;         function ReadFrequency
01C3            930   ;        -----------------------------------------
01C3            931   _ReadFrequency:
01C3            932   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:274: TL0=0;
01C3 758A00     933            mov     _TL0,#0x00
01C6            934   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:275: TH0=0;
01C6 758C00     935            mov     _TH0,#0x00
01C9            936   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:276: TF0=0;
01C9 C28D       937            clr     _TF0
01CB            938   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:277: overflow_count=0;
01CB 752000     939            mov     _overflow_count,#0x00
01CE            940   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:279: while(FRQIN!=0); // Wait for the signal to be zero
01CE            941   L012001?:
01CE 2096D0     942            jb      _P1_6,L012001?
01D1            943   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:280: while(FRQIN!=1); // Wait for the signal to be one
01D1            944   L012004?:
01D1 309610     945            jnb     _P1_6,L012004?
01D4            946   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:281: TR0=1; // Start the timer
01D4 D28C       947            setb    _TR0
01D6            948   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:282: while(FRQIN!=0) // Wait for the signal to be zero
01D6            949   L012009?:
01D6 309690     950            jnb     _P1_6,L012014?
01D9            951   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:284: if(TF0==1) // Did the 16-bit timer overflow?
01D9            952   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:286: TF0=0;
01D9 108DD0     953            jbc     _TF0,L012031?
01DC 8001       954            sjmp    L012009?
01DE            955   L012031?:
01DE            956   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:287: overflow_count++;
01DE 0520       957            inc     _overflow_count
01E0            958   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:290: while(FRQIN!=1) // Wait for the signal to be one
01E0 8001       959            sjmp    L012009?
01E2            960   L012014?:
01E2 209610     961            jb      _P1_6,L012016?
01E5            962   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:292: if(TF0==1) // Did the 16-bit timer overflow?
01E5            963   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:294: TF0=0;
01E5 108D50     964            jbc     _TF0,L012033?
01E8 8001       965            sjmp    L012014?
01EA            966   L012033?:
01EA            967   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:295: overflow_count++;
01EA 0520       968            inc     _overflow_count
01EC 8001       969            sjmp    L012014?
01EE            970   L012016?:
01EE            971   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:299: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period. Then convert it to frequency
01EE C28C       972            clr     _TR0
01F0            973   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:301: frequency=1.0/((overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK)); // Compute frequency
01F0 852082     974            mov     dpl,_overflow_count
01F3 120100     975            lcall   ___uchar2fs
01F6 AA82       976            mov     r2,dpl
01F8 AB83       977            mov     r3,dph
01FA ACF0       978            mov     r4,b
01FC FD         979            mov     r5,a
01FD C002       980            push    ar2
01FF C003       981            push    ar3
0201 C004       982            push    ar4
0203 C005       983            push    ar5
0205 900000     984            mov     dptr,#0x0000
0208 75F080     985            mov     b,#0x80
020B 7447       986            mov     a,#0x47
020D 120100     987            lcall   ___fsmul
0210 AA82       988            mov     r2,dpl
0212 AB83       989            mov     r3,dph
0214 ACF0       990            mov     r4,b
0216 FD         991            mov     r5,a
0217 E581       992            mov     a,sp
0219 24FC       993            add     a,#0xfc
021B F581       994            mov     sp,a
021D 858C82     995            mov     dpl,_TH0
0220 C002       996            push    ar2
0222 C003       997            push    ar3
0224 C004       998            push    ar4
0226 C005       999            push    ar5
0228 120100    1000            lcall   ___uchar2fs
022B AE82      1001            mov     r6,dpl
022D AF83      1002            mov     r7,dph
022F A8F0      1003            mov     r0,b
0231 F9        1004            mov     r1,a
0232 C006      1005            push    ar6
0234 C007      1006            push    ar7
0236 C000      1007            push    ar0
0238 C001      1008            push    ar1
023A 900000    1009            mov     dptr,#0x0000
023D 75F080    1010            mov     b,#0x80
0240 7443      1011            mov     a,#0x43
0242 120100    1012            lcall   ___fsmul
0245 AE82      1013            mov     r6,dpl
0247 AF83      1014            mov     r7,dph
0249 A8F0      1015            mov     r0,b
024B F9        1016            mov     r1,a
024C E581      1017            mov     a,sp
024E 24FC      1018            add     a,#0xfc
0250 F581      1019            mov     sp,a
0252 D005      1020            pop     ar5
0254 D004      1021            pop     ar4
0256 D003      1022            pop     ar3
0258 D002      1023            pop     ar2
025A C006      1024            push    ar6
025C C007      1025            push    ar7
025E C000      1026            push    ar0
0260 C001      1027            push    ar1
0262 8A82      1028            mov     dpl,r2
0264 8B83      1029            mov     dph,r3
0266 8CF0      1030            mov     b,r4
0268 ED        1031            mov     a,r5
0269 120100    1032            lcall   ___fsadd
026C AA82      1033            mov     r2,dpl
026E AB83      1034            mov     r3,dph
0270 ACF0      1035            mov     r4,b
0272 FD        1036            mov     r5,a
0273 E581      1037            mov     a,sp
0275 24FC      1038            add     a,#0xfc
0277 F581      1039            mov     sp,a
0279 AE8A      1040            mov     r6,_TL0
027B 7F00      1041            mov     r7,#0x00
027D 8E82      1042            mov     dpl,r6
027F 8F83      1043            mov     dph,r7
0281 C002      1044            push    ar2
0283 C003      1045            push    ar3
0285 C004      1046            push    ar4
0287 C005      1047            push    ar5
0289 120100    1048            lcall   ___sint2fs
028C AE82      1049            mov     r6,dpl
028E AF83      1050            mov     r7,dph
0290 A8F0      1051            mov     r0,b
0292 F9        1052            mov     r1,a
0293 D005      1053            pop     ar5
0295 D004      1054            pop     ar4
0297 D003      1055            pop     ar3
0299 D002      1056            pop     ar2
029B C006      1057            push    ar6
029D C007      1058            push    ar7
029F C000      1059            push    ar0
02A1 C001      1060            push    ar1
02A3 8A82      1061            mov     dpl,r2
02A5 8B83      1062            mov     dph,r3
02A7 8CF0      1063            mov     b,r4
02A9 ED        1064            mov     a,r5
02AA 120100    1065            lcall   ___fsadd
02AD AA82      1066            mov     r2,dpl
02AF AB83      1067            mov     r3,dph
02B1 ACF0      1068            mov     r4,b
02B3 FD        1069            mov     r5,a
02B4 E581      1070            mov     a,sp
02B6 24FC      1071            add     a,#0xfc
02B8 F581      1072            mov     sp,a
02BA C002      1073            push    ar2
02BC C003      1074            push    ar3
02BE C004      1075            push    ar4
02C0 C005      1076            push    ar5
02C2 9037BD    1077            mov     dptr,#0x37BD
02C5 75F086    1078            mov     b,#0x86
02C8 7434      1079            mov     a,#0x34
02CA 120100    1080            lcall   ___fsmul
02CD AA82      1081            mov     r2,dpl
02CF AB83      1082            mov     r3,dph
02D1 ACF0      1083            mov     r4,b
02D3 FD        1084            mov     r5,a
02D4 E581      1085            mov     a,sp
02D6 24FC      1086            add     a,#0xfc
02D8 F581      1087            mov     sp,a
02DA C002      1088            push    ar2
02DC C003      1089            push    ar3
02DE C004      1090            push    ar4
02E0 C005      1091            push    ar5
02E2 900000    1092            mov     dptr,#0x0000
02E5 75F080    1093            mov     b,#0x80
02E8 743F      1094            mov     a,#0x3F
02EA 120100    1095            lcall   ___fsdiv
02ED 8582A0    1096            mov     _frequency,dpl
02F0 8583A1    1097            mov     (_frequency + 1),dph
02F3 85F0A2    1098            mov     (_frequency + 2),b
02F6 F5A3      1099            mov     (_frequency + 3),a
02F8 E581      1100            mov     a,sp
02FA 24FC      1101            add     a,#0xfc
02FC F581      1102            mov     sp,a
02FE 22        1103            ret
02FF           1104   ;------------------------------------------------------------
02FF           1105   ;Allocation info for local variables in function 'DetermineMode'
02FF           1106   ;------------------------------------------------------------
02FF           1107   ;------------------------------------------------------------
02FF           1108   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:307: void DetermineMode (void) {
02FF           1109   ;        -----------------------------------------
02FF           1110   ;         function DetermineMode
02FF           1111   ;        -----------------------------------------
02FF           1112   _DetermineMode:
02FF           1113   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:308: ReadFrequency();
02FF 020100    1114            ljmp    _ReadFrequency
0302           1115   ;------------------------------------------------------------
0302           1116   ;Allocation info for local variables in function 'MotorControl'
0302           1117   ;------------------------------------------------------------
0302           1118   ;IndVolts                  Allocated with name '_MotorControl_IndVolts_1_73'
0302           1119   ;------------------------------------------------------------
0302           1120   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:331: void MotorControl (volatile float IndVolts[])
0302           1121   ;        -----------------------------------------
0302           1122   ;         function MotorControl
0302           1123   ;        -----------------------------------------
0302           1124   _MotorControl:
0302 858290    1125            mov     _MotorControl_IndVolts_1_73,dpl
0305 858391    1126            mov     (_MotorControl_IndVolts_1_73 + 1),dph
0308 85F092    1127            mov     (_MotorControl_IndVolts_1_73 + 2),b
030B           1128   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:334: switch (mode){
030B E4        1129            clr     a
030C B56050    1130            cjne    a,_mode,L014017?
030F 020100    1131            ljmp    L014008?
0312           1132   L014017?:
0312 7403      1133            mov     a,#0x03
0314 B560D0    1134            cjne    a,_mode,L014018?
0317 8001      1135            sjmp    L014019?
0319           1136   L014018?:
0319 22        1137            ret
031A           1138   L014019?:
031A           1139   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:337: if((IndVolts[0] - Vblue_middle) > Vblue_thresh){
031A AA90      1140            mov     r2,_MotorControl_IndVolts_1_73
031C AB91      1141            mov     r3,(_MotorControl_IndVolts_1_73 + 1)
031E AC92      1142            mov     r4,(_MotorControl_IndVolts_1_73 + 2)
0320 8A82      1143            mov     dpl,r2
0322 8B83      1144            mov     dph,r3
0324 8CF0      1145            mov     b,r4
0326 120100    1146            lcall   __gptrget
0329 FD        1147            mov     r5,a
032A A3        1148            inc     dptr
032B 120100    1149            lcall   __gptrget
032E FE        1150            mov     r6,a
032F A3        1151            inc     dptr
0330 120100    1152            lcall   __gptrget
0333 FF        1153            mov     r7,a
0334 A3        1154            inc     dptr
0335 120100    1155            lcall   __gptrget
0338 F8        1156            mov     r0,a
0339 C002      1157            push    ar2
033B C003      1158            push    ar3
033D C004      1159            push    ar4
033F 7462      1160            mov     a,#0x62
0341 C0E0      1161            push    acc
0343 7410      1162            mov     a,#0x10
0345 C0E0      1163            push    acc
0347 74F8      1164            mov     a,#0xF8
0349 C0E0      1165            push    acc
034B 743E      1166            mov     a,#0x3E
034D C0E0      1167            push    acc
034F 8D82      1168            mov     dpl,r5
0351 8E83      1169            mov     dph,r6
0353 8FF0      1170            mov     b,r7
0355 E8        1171            mov     a,r0
0356 120100    1172            lcall   ___fssub
0359 AD82      1173            mov     r5,dpl
035B AE83      1174            mov     r6,dph
035D AFF0      1175            mov     r7,b
035F F8        1176            mov     r0,a
0360 E581      1177            mov     a,sp
0362 24FC      1178            add     a,#0xfc
0364 F581      1179            mov     sp,a
0366 74AC      1180            mov     a,#0xAC
0368 C0E0      1181            push    acc
036A 741C      1182            mov     a,#0x1C
036C C0E0      1183            push    acc
036E 74DA      1184            mov     a,#0xDA
0370 C0E0      1185            push    acc
0372 743D      1186            mov     a,#0x3D
0374 C0E0      1187            push    acc
0376 8D82      1188            mov     dpl,r5
0378 8E83      1189            mov     dph,r6
037A 8FF0      1190            mov     b,r7
037C E8        1191            mov     a,r0
037D 120100    1192            lcall   ___fsgt
0380 AD82      1193            mov     r5,dpl
0382 E581      1194            mov     a,sp
0384 24FC      1195            add     a,#0xfc
0386 F581      1196            mov     sp,a
0388 D004      1197            pop     ar4
038A D003      1198            pop     ar3
038C D002      1199            pop     ar2
038E ED        1200            mov     a,r5
038F 6001      1201            jz      L014006?
0391           1202   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:338: pwm_BLU1= 0;
0391 752000    1203            mov     _pwm_BLU1,#0x00
0394           1204   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:339: pwm_BLU0 = 0;
0394 756000    1205            mov     _pwm_BLU0,#0x00
0397           1206   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:340: pwm_RED1 = power;
0397 85A0A0    1207            mov     _pwm_RED1,_power
039A           1208   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:341: pwm_RED0 = 0; 
039A 75E000    1209            mov     _pwm_RED0,#0x00
039D 22        1210            ret
039E           1211   L014006?:
039E           1212   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:344: else if( (IndVolts[1] - Vred_middle) > Vred_thresh ){
039E 7404      1213            mov     a,#0x04
03A0 2A        1214            add     a,r2
03A1 FA        1215            mov     r2,a
03A2 E4        1216            clr     a
03A3 3B        1217            addc    a,r3
03A4 FB        1218            mov     r3,a
03A5 8A82      1219            mov     dpl,r2
03A7 8B83      1220            mov     dph,r3
03A9 8CF0      1221            mov     b,r4
03AB 120100    1222            lcall   __gptrget
03AE FA        1223            mov     r2,a
03AF A3        1224            inc     dptr
03B0 120100    1225            lcall   __gptrget
03B3 FB        1226            mov     r3,a
03B4 A3        1227            inc     dptr
03B5 120100    1228            lcall   __gptrget
03B8 FC        1229            mov     r4,a
03B9 A3        1230            inc     dptr
03BA 120100    1231            lcall   __gptrget
03BD FD        1232            mov     r5,a
03BE 741B      1233            mov     a,#0x1B
03C0 C0E0      1234            push    acc
03C2 742F      1235            mov     a,#0x2F
03C4 C0E0      1236            push    acc
03C6 74CD      1237            mov     a,#0xCD
03C8 C0E0      1238            push    acc
03CA 743E      1239            mov     a,#0x3E
03CC C0E0      1240            push    acc
03CE 8A82      1241            mov     dpl,r2
03D0 8B83      1242            mov     dph,r3
03D2 8CF0      1243            mov     b,r4
03D4 ED        1244            mov     a,r5
03D5 120100    1245            lcall   ___fssub
03D8 AA82      1246            mov     r2,dpl
03DA AB83      1247            mov     r3,dph
03DC ACF0      1248            mov     r4,b
03DE FD        1249            mov     r5,a
03DF E581      1250            mov     a,sp
03E1 24FC      1251            add     a,#0xfc
03E3 F581      1252            mov     sp,a
03E5 74AC      1253            mov     a,#0xAC
03E7 C0E0      1254            push    acc
03E9 741C      1255            mov     a,#0x1C
03EB C0E0      1256            push    acc
03ED 745A      1257            mov     a,#0x5A
03EF C0E0      1258            push    acc
03F1 743D      1259            mov     a,#0x3D
03F3 C0E0      1260            push    acc
03F5 8A82      1261            mov     dpl,r2
03F7 8B83      1262            mov     dph,r3
03F9 8CF0      1263            mov     b,r4
03FB ED        1264            mov     a,r5
03FC 120100    1265            lcall   ___fsgt
03FF AA82      1266            mov     r2,dpl
0401 E581      1267            mov     a,sp
0403 24FC      1268            add     a,#0xfc
0405 F581      1269            mov     sp,a
0407 EA        1270            mov     a,r2
0408 6001      1271            jz      L014003?
040A           1272   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:345: pwm_BLU1=power;
040A 85A020    1273            mov     _pwm_BLU1,_power
040D           1274   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:346: pwm_BLU0=0;
040D 756000    1275            mov     _pwm_BLU0,#0x00
0410           1276   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:347: pwm_RED1=0;
0410 75A000    1277            mov     _pwm_RED1,#0x00
0413           1278   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:348: pwm_RED0=0;
0413 75E000    1279            mov     _pwm_RED0,#0x00
0416 22        1280            ret
0417           1281   L014003?:
0417           1282   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:351: pwm_BLU1 = power;
0417 85A020    1283            mov     _pwm_BLU1,_power
041A           1284   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:352: pwm_BLU0 = 0;
041A 756000    1285            mov     _pwm_BLU0,#0x00
041D           1286   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:353: pwm_RED1 = power;
041D 85A0A0    1287            mov     _pwm_RED1,_power
0420           1288   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:354: pwm_RED0 = 0;
0420 75E000    1289            mov     _pwm_RED0,#0x00
0423           1290   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:356: break;
0423           1291   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:358: case STOP:
0423 22        1292            ret
0424           1293   L014008?:
0424           1294   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:359: pwm_BLU1 = 0;
0424 752000    1295            mov     _pwm_BLU1,#0x00
0427           1296   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:360: pwm_BLU0 = 0;
0427 756000    1297            mov     _pwm_BLU0,#0x00
042A           1298   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:361: pwm_RED1 = 0;
042A 75A000    1299            mov     _pwm_RED1,#0x00
042D           1300   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:362: pwm_RED0 = 0;
042D 75E000    1301            mov     _pwm_RED0,#0x00
0430           1302   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:369: }
0430 22        1303            ret
0431           1304   ;------------------------------------------------------------
0431           1305   ;Allocation info for local variables in function 'DebuggingFctn'
0431           1306   ;------------------------------------------------------------
0431           1307   ;IndVolts                  Allocated with name '_DebuggingFctn_IndVolts_1_79'
0431           1308   ;sloc0                     Allocated with name '_DebuggingFctn_sloc0_1_0'
0431           1309   ;------------------------------------------------------------
0431           1310   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:380: void DebuggingFctn (volatile float IndVolts[])
0431           1311   ;        -----------------------------------------
0431           1312   ;         function DebuggingFctn
0431           1313   ;        -----------------------------------------
0431           1314   _DebuggingFctn:
0431 8582E0    1315            mov     _DebuggingFctn_IndVolts_1_79,dpl
0434 8583E1    1316            mov     (_DebuggingFctn_IndVolts_1_79 + 1),dph
0437 85F0E2    1317            mov     (_DebuggingFctn_IndVolts_1_79 + 2),b
043A           1318   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:382: printf("Freq = %5.3f HZ, Blue = %5.3f V, Red = %5.3f V, Ratio = %5.3f\r", frequency, IndVolts[0], IndVolts[1], IndVolts[0]/IndVolts[1]);
043A AAE0      1319            mov     r2,_DebuggingFctn_IndVolts_1_79
043C ABE1      1320            mov     r3,(_DebuggingFctn_IndVolts_1_79 + 1)
043E ACE2      1321            mov     r4,(_DebuggingFctn_IndVolts_1_79 + 2)
0440 8A82      1322            mov     dpl,r2
0442 8B83      1323            mov     dph,r3
0444 8CF0      1324            mov     b,r4
0446 120100    1325            lcall   __gptrget
0449 FD        1326            mov     r5,a
044A A3        1327            inc     dptr
044B 120100    1328            lcall   __gptrget
044E FE        1329            mov     r6,a
044F A3        1330            inc     dptr
0450 120100    1331            lcall   __gptrget
0453 FF        1332            mov     r7,a
0454 A3        1333            inc     dptr
0455 120100    1334            lcall   __gptrget
0458 F8        1335            mov     r0,a
0459 7404      1336            mov     a,#0x04
045B 2A        1337            add     a,r2
045C FA        1338            mov     r2,a
045D E4        1339            clr     a
045E 3B        1340            addc    a,r3
045F FB        1341            mov     r3,a
0460 8A82      1342            mov     dpl,r2
0462 8B83      1343            mov     dph,r3
0464 8CF0      1344            mov     b,r4
0466 120100    1345            lcall   __gptrget
0469 F530      1346            mov     _DebuggingFctn_sloc0_1_0,a
046B A3        1347            inc     dptr
046C 120100    1348            lcall   __gptrget
046F F531      1349            mov     (_DebuggingFctn_sloc0_1_0 + 1),a
0471 A3        1350            inc     dptr
0472 120100    1351            lcall   __gptrget
0475 F532      1352            mov     (_DebuggingFctn_sloc0_1_0 + 2),a
0477 A3        1353            inc     dptr
0478 120100    1354            lcall   __gptrget
047B F533      1355            mov     (_DebuggingFctn_sloc0_1_0 + 3),a
047D C005      1356            push    ar5
047F C006      1357            push    ar6
0481 C007      1358            push    ar7
0483 C000      1359            push    ar0
0485 C030      1360            push    _DebuggingFctn_sloc0_1_0
0487 C031      1361            push    (_DebuggingFctn_sloc0_1_0 + 1)
0489 C032      1362            push    (_DebuggingFctn_sloc0_1_0 + 2)
048B C033      1363            push    (_DebuggingFctn_sloc0_1_0 + 3)
048D 8D82      1364            mov     dpl,r5
048F 8E83      1365            mov     dph,r6
0491 8FF0      1366            mov     b,r7
0493 E8        1367            mov     a,r0
0494 120100    1368            lcall   ___fsdiv
0497 AA82      1369            mov     r2,dpl
0499 AB83      1370            mov     r3,dph
049B ACF0      1371            mov     r4,b
049D F9        1372            mov     r1,a
049E E581      1373            mov     a,sp
04A0 24FC      1374            add     a,#0xfc
04A2 F581      1375            mov     sp,a
04A4 D000      1376            pop     ar0
04A6 D007      1377            pop     ar7
04A8 D006      1378            pop     ar6
04AA D005      1379            pop     ar5
04AC C002      1380            push    ar2
04AE C003      1381            push    ar3
04B0 C004      1382            push    ar4
04B2 C001      1383            push    ar1
04B4 C030      1384            push    _DebuggingFctn_sloc0_1_0
04B6 C031      1385            push    (_DebuggingFctn_sloc0_1_0 + 1)
04B8 C032      1386            push    (_DebuggingFctn_sloc0_1_0 + 2)
04BA C033      1387            push    (_DebuggingFctn_sloc0_1_0 + 3)
04BC C005      1388            push    ar5
04BE C006      1389            push    ar6
04C0 C007      1390            push    ar7
04C2 C000      1391            push    ar0
04C4 C0A0      1392            push    _frequency
04C6 C0A1      1393            push    (_frequency + 1)
04C8 C0A2      1394            push    (_frequency + 2)
04CA C0A3      1395            push    (_frequency + 3)
04CC 7490      1396            mov     a,#__str_0
04CE C0E0      1397            push    acc
04D0 74A5      1398            mov     a,#(__str_0 >> 8)
04D2 C0E0      1399            push    acc
04D4 7480      1400            mov     a,#0x80
04D6 C0E0      1401            push    acc
04D8 120100    1402            lcall   _printf
04DB E581      1403            mov     a,sp
04DD 24ED      1404            add     a,#0xed
04DF F581      1405            mov     sp,a
04E1 22        1406            ret
04E2           1407   ;------------------------------------------------------------
04E2           1408   ;Allocation info for local variables in function 'main'
04E2           1409   ;------------------------------------------------------------
04E2           1410   ;IndVolts                  Allocated with name '_main_IndVolts_1_82'
04E2           1411   ;------------------------------------------------------------
04E2           1412   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:392: void main (void)
04E2           1413   ;        -----------------------------------------
04E2           1414   ;         function main
04E2           1415   ;        -----------------------------------------
04E2           1416   _main:
04E2           1417   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:397: TIMER0_Init(); // Initialize timer 0 to read the frequency of the fm signal
04E2 120100    1418            lcall   _TIMER0_Init
04E5           1419   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:398: TIMER2_Init(); // Initialize timer 2 for periodic interrupts used for motor control
04E5 120100    1420            lcall   _TIMER2_Init
04E8           1421   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:399: EA=1; // Enable interrupts
04E8 D2AF      1422            setb    _EA
04EA           1423   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:401: InitPinADC(1, 4); // Configure P1.4 as analog input
04EA 755004    1424            mov     _InitPinADC_PARM_2,#0x04
04ED 758201    1425            mov     dpl,#0x01
04F0 120100    1426            lcall   _InitPinADC
04F3           1427   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:402: InitPinADC(2, 0); // Configure P2.0 as analog input
04F3 755000    1428            mov     _InitPinADC_PARM_2,#0x00
04F6 758202    1429            mov     dpl,#0x02
04F9 120100    1430            lcall   _InitPinADC
04FC           1431   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:403: InitPinADC(2, 7); // Configure P2.7 as analog input
04FC 755007    1432            mov     _InitPinADC_PARM_2,#0x07
04FF 758202    1433            mov     dpl,#0x02
0502 120100    1434            lcall   _InitPinADC
0505           1435   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:404: InitADC();
0505 120100    1436            lcall   _InitADC
0508           1437   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:405: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0508 7410      1438            mov     a,#__str_1
050A C0E0      1439            push    acc
050C 74A6      1440            mov     a,#(__str_1 >> 8)
050E C0E0      1441            push    acc
0510 7480      1442            mov     a,#0x80
0512 C0E0      1443            push    acc
0514 120100    1444            lcall   _printf
0517 1581      1445            dec     sp
0519 1581      1446            dec     sp
051B 1581      1447            dec     sp
051D           1448   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:412: while(1)
051D           1449   L016002?:
051D           1450   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:419: IndVolts[0] = Volts_at_Pin(LQFP32_MUX_P2_7);
051D 75820F    1451            mov     dpl,#0x0F
0520 120100    1452            lcall   _Volts_at_Pin
0523 AA82      1453            mov     r2,dpl
0525 AB83      1454            mov     r3,dph
0527 ACF0      1455            mov     r4,b
0529 FD        1456            mov     r5,a
052A 8A80      1457            mov     _main_IndVolts_1_82,r2
052C 8B81      1458            mov     (_main_IndVolts_1_82 + 1),r3
052E 8C82      1459            mov     (_main_IndVolts_1_82 + 2),r4
0530 8D83      1460            mov     (_main_IndVolts_1_82 + 3),r5
0532           1461   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:420: IndVolts[1] = Volts_at_Pin(LQFP32_MUX_P1_4);
0532 758204    1462            mov     dpl,#0x04
0535 120100    1463            lcall   _Volts_at_Pin
0538 AA82      1464            mov     r2,dpl
053A AB83      1465            mov     r3,dph
053C ACF0      1466            mov     r4,b
053E FD        1467            mov     r5,a
053F 8A84      1468            mov     (_main_IndVolts_1_82 + 0x0004),r2
0541 8B85      1469            mov     ((_main_IndVolts_1_82 + 0x0004) + 1),r3
0543 8C86      1470            mov     ((_main_IndVolts_1_82 + 0x0004) + 2),r4
0545 8D87      1471            mov     ((_main_IndVolts_1_82 + 0x0004) + 3),r5
0547           1472   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:421: IndVolts[2] = Volts_at_Pin(LQFP32_MUX_P2_0);
0547 758208    1473            mov     dpl,#0x08
054A 120100    1474            lcall   _Volts_at_Pin
054D AA82      1475            mov     r2,dpl
054F AB83      1476            mov     r3,dph
0551 ACF0      1477            mov     r4,b
0553 FD        1478            mov     r5,a
0554 8A88      1479            mov     (_main_IndVolts_1_82 + 0x0008),r2
0556 8B89      1480            mov     ((_main_IndVolts_1_82 + 0x0008) + 1),r3
0558 8C8A      1481            mov     ((_main_IndVolts_1_82 + 0x0008) + 2),r4
055A 8D8B      1482            mov     ((_main_IndVolts_1_82 + 0x0008) + 3),r5
055C           1483   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:425: MotorControl(IndVolts);
055C 909980    1484            mov     dptr,#_main_IndVolts_1_82
055F 75F040    1485            mov     b,#0x40
0562 120100    1486            lcall   _MotorControl
0565           1487   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:428: DebuggingFctn(IndVolts);
0565 909980    1488            mov     dptr,#_main_IndVolts_1_82
0568 75F040    1489            mov     b,#0x40
056B 120100    1490            lcall   _DebuggingFctn
056E           1491   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:432: waitms(20);
056E 900014    1492            mov     dptr,#0x0014
0571 120100    1493            lcall   _waitms
0574 8001      1494            sjmp    L016002?
0576           1495            rseg R_CSEG
0576           1496   
0000           1497            rseg R_XINIT
0000           1498   
0000           1499            rseg R_CONST
0000           1500   __str_0:
0000 46726571  1501            db 'Freq = %5.3f HZ, Blue = %5.3f V, Red = %5.3f V, Ratio = %5.3'
     203D2025
     352E3366
     20485A2C
     20426C75
     65203D20
     25352E33
     6620562C
     20526564
     203D2025
     352E3366
     20562C20
     52617469
     6F203D20
     25352E33
003C 66        1502            db 'f'
003D 0D        1503            db 0x0D
003E 00        1504            db 0x00
003F           1505   __str_1:
003F 1B        1506            db 0x1B
0040 5B324A    1507            db '[2J'
0043 00        1508            db 0x00
0044           1509   
002E           1510            CSEG
002E           1511   
002E           1512   end
