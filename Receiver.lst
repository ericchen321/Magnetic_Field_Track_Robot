0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Tue Apr 04 08:26:17 2017
0000              5   ;--------------------------------------------------------
                  5   $name Receiver
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _DebuggingFctn
0000             30            public _MotorControl
0000             31            public _DetermineMode
0000             32            public _ReadPeriod
0000             33            public _Clean_LCD
0000             34            public _LCDprint
0000             35            public _LCD_4BIT
0000             36            public _WriteCommand
0000             37            public _WriteData
0000             38            public _LCD_byte
0000             39            public _LCD_pulse
0000             40            public _Timer2_ISR
0000             41            public _Volts_at_Pin
0000             42            public _ADC_at_Pin
0000             43            public _InitPinADC
0000             44            public _InitADC
0000             45            public _TIMER2_Init
0000             46            public _TIMER0_Init
0000             47            public _waitms
0000             48            public _Timer3us
0000             49            public __c51_external_startup
0000             50            public _LCDprint_PARM_3
0000             51            public _LCDprint_PARM_2
0000             52            public _debugstring
0000             53            public _period
0000             54            public _millisecond
0000             55            public _WriteCount
0000             56            public _mode
0000             57            public _overflow_count
0000             58            public _dirout
0000             59            public _pwm_RED1
0000             60            public _pwm_RED0
0000             61            public _pwm_BLU1
0000             62            public _pwm_BLU0
0000             63            public _power
0000             64            public _pwm_count
0000             65   ;--------------------------------------------------------
0000             66   ; Special Function Registers
0000             67   ;--------------------------------------------------------
0000             68   _P0             DATA 0x80
0000             69   _SP             DATA 0x81
0000             70   _DPL            DATA 0x82
0000             71   _DPH            DATA 0x83
0000             72   _EMI0TC         DATA 0x84
0000             73   _EMI0CF         DATA 0x85
0000             74   _OSCLCN         DATA 0x86
0000             75   _PCON           DATA 0x87
0000             76   _TCON           DATA 0x88
0000             77   _TMOD           DATA 0x89
0000             78   _TL0            DATA 0x8a
0000             79   _TL1            DATA 0x8b
0000             80   _TH0            DATA 0x8c
0000             81   _TH1            DATA 0x8d
0000             82   _CKCON          DATA 0x8e
0000             83   _PSCTL          DATA 0x8f
0000             84   _P1             DATA 0x90
0000             85   _TMR3CN         DATA 0x91
0000             86   _TMR4CN         DATA 0x91
0000             87   _TMR3RLL        DATA 0x92
0000             88   _TMR4RLL        DATA 0x92
0000             89   _TMR3RLH        DATA 0x93
0000             90   _TMR4RLH        DATA 0x93
0000             91   _TMR3L          DATA 0x94
0000             92   _TMR4L          DATA 0x94
0000             93   _TMR3H          DATA 0x95
0000             94   _TMR4H          DATA 0x95
0000             95   _USB0ADR        DATA 0x96
0000             96   _USB0DAT        DATA 0x97
0000             97   _SCON           DATA 0x98
0000             98   _SCON0          DATA 0x98
0000             99   _SBUF           DATA 0x99
0000            100   _SBUF0          DATA 0x99
0000            101   _CPT1CN         DATA 0x9a
0000            102   _CPT0CN         DATA 0x9b
0000            103   _CPT1MD         DATA 0x9c
0000            104   _CPT0MD         DATA 0x9d
0000            105   _CPT1MX         DATA 0x9e
0000            106   _CPT0MX         DATA 0x9f
0000            107   _P2             DATA 0xa0
0000            108   _SPI0CFG        DATA 0xa1
0000            109   _SPI0CKR        DATA 0xa2
0000            110   _SPI0DAT        DATA 0xa3
0000            111   _P0MDOUT        DATA 0xa4
0000            112   _P1MDOUT        DATA 0xa5
0000            113   _P2MDOUT        DATA 0xa6
0000            114   _P3MDOUT        DATA 0xa7
0000            115   _IE             DATA 0xa8
0000            116   _CLKSEL         DATA 0xa9
0000            117   _EMI0CN         DATA 0xaa
0000            118   __XPAGE         DATA 0xaa
0000            119   _SBCON1         DATA 0xac
0000            120   _P4MDOUT        DATA 0xae
0000            121   _PFE0CN         DATA 0xaf
0000            122   _P3             DATA 0xb0
0000            123   _OSCXCN         DATA 0xb1
0000            124   _OSCICN         DATA 0xb2
0000            125   _OSCICL         DATA 0xb3
0000            126   _SBRLL1         DATA 0xb4
0000            127   _SBRLH1         DATA 0xb5
0000            128   _FLSCL          DATA 0xb6
0000            129   _FLKEY          DATA 0xb7
0000            130   _IP             DATA 0xb8
0000            131   _CLKMUL         DATA 0xb9
0000            132   _SMBTC          DATA 0xb9
0000            133   _AMX0N          DATA 0xba
0000            134   _AMX0P          DATA 0xbb
0000            135   _ADC0CF         DATA 0xbc
0000            136   _ADC0L          DATA 0xbd
0000            137   _ADC0H          DATA 0xbe
0000            138   _SFRPAGE        DATA 0xbf
0000            139   _SMB0CN         DATA 0xc0
0000            140   _SMB1CN         DATA 0xc0
0000            141   _SMB0CF         DATA 0xc1
0000            142   _SMB1CF         DATA 0xc1
0000            143   _SMB0DAT        DATA 0xc2
0000            144   _SMB1DAT        DATA 0xc2
0000            145   _ADC0GTL        DATA 0xc3
0000            146   _ADC0GTH        DATA 0xc4
0000            147   _ADC0LTL        DATA 0xc5
0000            148   _ADC0LTH        DATA 0xc6
0000            149   _P4             DATA 0xc7
0000            150   _TMR2CN         DATA 0xc8
0000            151   _TMR5CN         DATA 0xc8
0000            152   _REG01CN        DATA 0xc9
0000            153   _TMR2RLL        DATA 0xca
0000            154   _TMR5RLL        DATA 0xca
0000            155   _TMR2RLH        DATA 0xcb
0000            156   _TMR5RLH        DATA 0xcb
0000            157   _TMR2L          DATA 0xcc
0000            158   _TMR5L          DATA 0xcc
0000            159   _TMR2H          DATA 0xcd
0000            160   _TMR5H          DATA 0xcd
0000            161   _SMB0ADM        DATA 0xce
0000            162   _SMB1ADM        DATA 0xce
0000            163   _SMB0ADR        DATA 0xcf
0000            164   _SMB1ADR        DATA 0xcf
0000            165   _PSW            DATA 0xd0
0000            166   _REF0CN         DATA 0xd1
0000            167   _SCON1          DATA 0xd2
0000            168   _SBUF1          DATA 0xd3
0000            169   _P0SKIP         DATA 0xd4
0000            170   _P1SKIP         DATA 0xd5
0000            171   _P2SKIP         DATA 0xd6
0000            172   _USB0XCN        DATA 0xd7
0000            173   _PCA0CN         DATA 0xd8
0000            174   _PCA0MD         DATA 0xd9
0000            175   _PCA0CPM0       DATA 0xda
0000            176   _PCA0CPM1       DATA 0xdb
0000            177   _PCA0CPM2       DATA 0xdc
0000            178   _PCA0CPM3       DATA 0xdd
0000            179   _PCA0CPM4       DATA 0xde
0000            180   _P3SKIP         DATA 0xdf
0000            181   _ACC            DATA 0xe0
0000            182   _XBR0           DATA 0xe1
0000            183   _XBR1           DATA 0xe2
0000            184   _XBR2           DATA 0xe3
0000            185   _IT01CF         DATA 0xe4
0000            186   _CKCON1         DATA 0xe4
0000            187   _SMOD1          DATA 0xe5
0000            188   _EIE1           DATA 0xe6
0000            189   _EIE2           DATA 0xe7
0000            190   _ADC0CN         DATA 0xe8
0000            191   _PCA0CPL1       DATA 0xe9
0000            192   _PCA0CPH1       DATA 0xea
0000            193   _PCA0CPL2       DATA 0xeb
0000            194   _PCA0CPH2       DATA 0xec
0000            195   _PCA0CPL3       DATA 0xed
0000            196   _PCA0CPH3       DATA 0xee
0000            197   _RSTSRC         DATA 0xef
0000            198   _B              DATA 0xf0
0000            199   _P0MDIN         DATA 0xf1
0000            200   _P1MDIN         DATA 0xf2
0000            201   _P2MDIN         DATA 0xf3
0000            202   _P3MDIN         DATA 0xf4
0000            203   _P4MDIN         DATA 0xf5
0000            204   _EIP1           DATA 0xf6
0000            205   _EIP2           DATA 0xf7
0000            206   _SPI0CN         DATA 0xf8
0000            207   _PCA0L          DATA 0xf9
0000            208   _PCA0H          DATA 0xfa
0000            209   _PCA0CPL0       DATA 0xfb
0000            210   _PCA0CPH0       DATA 0xfc
0000            211   _PCA0CPL4       DATA 0xfd
0000            212   _PCA0CPH4       DATA 0xfe
0000            213   _VDM0CN         DATA 0xff
0000            214   _DPTR           DATA 0x8382
0000            215   _TMR2RL         DATA 0xcbca
0000            216   _TMR3RL         DATA 0x9392
0000            217   _TMR4RL         DATA 0x9392
0000            218   _TMR5RL         DATA 0xcbca
0000            219   _TMR2           DATA 0xcdcc
0000            220   _TMR3           DATA 0x9594
0000            221   _TMR4           DATA 0x9594
0000            222   _TMR5           DATA 0xcdcc
0000            223   _SBRL1          DATA 0xb5b4
0000            224   _ADC0           DATA 0xbebd
0000            225   _ADC0GT         DATA 0xc4c3
0000            226   _ADC0LT         DATA 0xc6c5
0000            227   _PCA0           DATA 0xfaf9
0000            228   _PCA0CP1        DATA 0xeae9
0000            229   _PCA0CP2        DATA 0xeceb
0000            230   _PCA0CP3        DATA 0xeeed
0000            231   _PCA0CP0        DATA 0xfcfb
0000            232   _PCA0CP4        DATA 0xfefd
0000            233   ;--------------------------------------------------------
0000            234   ; special function bits
0000            235   ;--------------------------------------------------------
0000            236   _P0_0           BIT 0x80
0000            237   _P0_1           BIT 0x81
0000            238   _P0_2           BIT 0x82
0000            239   _P0_3           BIT 0x83
0000            240   _P0_4           BIT 0x84
0000            241   _P0_5           BIT 0x85
0000            242   _P0_6           BIT 0x86
0000            243   _P0_7           BIT 0x87
0000            244   _TF1            BIT 0x8f
0000            245   _TR1            BIT 0x8e
0000            246   _TF0            BIT 0x8d
0000            247   _TR0            BIT 0x8c
0000            248   _IE1            BIT 0x8b
0000            249   _IT1            BIT 0x8a
0000            250   _IE0            BIT 0x89
0000            251   _IT0            BIT 0x88
0000            252   _P1_0           BIT 0x90
0000            253   _P1_1           BIT 0x91
0000            254   _P1_2           BIT 0x92
0000            255   _P1_3           BIT 0x93
0000            256   _P1_4           BIT 0x94
0000            257   _P1_5           BIT 0x95
0000            258   _P1_6           BIT 0x96
0000            259   _P1_7           BIT 0x97
0000            260   _S0MODE         BIT 0x9f
0000            261   _SCON0_6        BIT 0x9e
0000            262   _MCE0           BIT 0x9d
0000            263   _REN0           BIT 0x9c
0000            264   _TB80           BIT 0x9b
0000            265   _RB80           BIT 0x9a
0000            266   _TI0            BIT 0x99
0000            267   _RI0            BIT 0x98
0000            268   _SCON_6         BIT 0x9e
0000            269   _MCE            BIT 0x9d
0000            270   _REN            BIT 0x9c
0000            271   _TB8            BIT 0x9b
0000            272   _RB8            BIT 0x9a
0000            273   _TI             BIT 0x99
0000            274   _RI             BIT 0x98
0000            275   _P2_0           BIT 0xa0
0000            276   _P2_1           BIT 0xa1
0000            277   _P2_2           BIT 0xa2
0000            278   _P2_3           BIT 0xa3
0000            279   _P2_4           BIT 0xa4
0000            280   _P2_5           BIT 0xa5
0000            281   _P2_6           BIT 0xa6
0000            282   _P2_7           BIT 0xa7
0000            283   _EA             BIT 0xaf
0000            284   _ESPI0          BIT 0xae
0000            285   _ET2            BIT 0xad
0000            286   _ES0            BIT 0xac
0000            287   _ET1            BIT 0xab
0000            288   _EX1            BIT 0xaa
0000            289   _ET0            BIT 0xa9
0000            290   _EX0            BIT 0xa8
0000            291   _P3_0           BIT 0xb0
0000            292   _P3_1           BIT 0xb1
0000            293   _P3_2           BIT 0xb2
0000            294   _P3_3           BIT 0xb3
0000            295   _P3_4           BIT 0xb4
0000            296   _P3_5           BIT 0xb5
0000            297   _P3_6           BIT 0xb6
0000            298   _P3_7           BIT 0xb7
0000            299   _IP_7           BIT 0xbf
0000            300   _PSPI0          BIT 0xbe
0000            301   _PT2            BIT 0xbd
0000            302   _PS0            BIT 0xbc
0000            303   _PT1            BIT 0xbb
0000            304   _PX1            BIT 0xba
0000            305   _PT0            BIT 0xb9
0000            306   _PX0            BIT 0xb8
0000            307   _MASTER0        BIT 0xc7
0000            308   _TXMODE0        BIT 0xc6
0000            309   _STA0           BIT 0xc5
0000            310   _STO0           BIT 0xc4
0000            311   _ACKRQ0         BIT 0xc3
0000            312   _ARBLOST0       BIT 0xc2
0000            313   _ACK0           BIT 0xc1
0000            314   _SI0            BIT 0xc0
0000            315   _MASTER1        BIT 0xc7
0000            316   _TXMODE1        BIT 0xc6
0000            317   _STA1           BIT 0xc5
0000            318   _STO1           BIT 0xc4
0000            319   _ACKRQ1         BIT 0xc3
0000            320   _ARBLOST1       BIT 0xc2
0000            321   _ACK1           BIT 0xc1
0000            322   _SI1            BIT 0xc0
0000            323   _TF2            BIT 0xcf
0000            324   _TF2H           BIT 0xcf
0000            325   _TF2L           BIT 0xce
0000            326   _TF2LEN         BIT 0xcd
0000            327   _TF2CEN         BIT 0xcc
0000            328   _T2SPLIT        BIT 0xcb
0000            329   _TR2            BIT 0xca
0000            330   _T2CSS          BIT 0xc9
0000            331   _T2XCLK         BIT 0xc8
0000            332   _TF5H           BIT 0xcf
0000            333   _TF5L           BIT 0xce
0000            334   _TF5LEN         BIT 0xcd
0000            335   _TMR5CN_4       BIT 0xcc
0000            336   _T5SPLIT        BIT 0xcb
0000            337   _TR5            BIT 0xca
0000            338   _TMR5CN_1       BIT 0xc9
0000            339   _T5XCLK         BIT 0xc8
0000            340   _CY             BIT 0xd7
0000            341   _AC             BIT 0xd6
0000            342   _F0             BIT 0xd5
0000            343   _RS1            BIT 0xd4
0000            344   _RS0            BIT 0xd3
0000            345   _OV             BIT 0xd2
0000            346   _F1             BIT 0xd1
0000            347   _PARITY         BIT 0xd0
0000            348   _CF             BIT 0xdf
0000            349   _CR             BIT 0xde
0000            350   _PCA0CN_5       BIT 0xde
0000            351   _CCF4           BIT 0xdc
0000            352   _CCF3           BIT 0xdb
0000            353   _CCF2           BIT 0xda
0000            354   _CCF1           BIT 0xd9
0000            355   _CCF0           BIT 0xd8
0000            356   _ACC_7          BIT 0xe7
0000            357   _ACC_6          BIT 0xe6
0000            358   _ACC_5          BIT 0xe5
0000            359   _ACC_4          BIT 0xe4
0000            360   _ACC_3          BIT 0xe3
0000            361   _ACC_2          BIT 0xe2
0000            362   _ACC_1          BIT 0xe1
0000            363   _ACC_0          BIT 0xe0
0000            364   _AD0EN          BIT 0xef
0000            365   _AD0TM          BIT 0xee
0000            366   _AD0INT         BIT 0xed
0000            367   _AD0BUSY        BIT 0xec
0000            368   _AD0WINT        BIT 0xeb
0000            369   _AD0CM2         BIT 0xea
0000            370   _AD0CM1         BIT 0xe9
0000            371   _AD0CM0         BIT 0xe8
0000            372   _B_7            BIT 0xf7
0000            373   _B_6            BIT 0xf6
0000            374   _B_5            BIT 0xf5
0000            375   _B_4            BIT 0xf4
0000            376   _B_3            BIT 0xf3
0000            377   _B_2            BIT 0xf2
0000            378   _B_1            BIT 0xf1
0000            379   _B_0            BIT 0xf0
0000            380   _SPIF           BIT 0xff
0000            381   _WCOL           BIT 0xfe
0000            382   _MODF           BIT 0xfd
0000            383   _RXOVRN         BIT 0xfc
0000            384   _NSSMD1         BIT 0xfb
0000            385   _NSSMD0         BIT 0xfa
0000            386   _TXBMT          BIT 0xf9
0000            387   _SPIEN          BIT 0xf8
0000            388   ;--------------------------------------------------------
0000            389   ; overlayable register banks
0000            390   ;--------------------------------------------------------
0000            391            rbank0 segment data overlay
0000            392   ;--------------------------------------------------------
0000            393   ; internal ram data
0000            394   ;--------------------------------------------------------
0000            395            rseg R_DSEG
0000            396   _pwm_count:
0000            397            ds 1
0001            398   _power:
0001            399            ds 1
0002            400   _pwm_BLU0:
0002            401            ds 1
0003            402   _pwm_BLU1:
0003            403            ds 1
0004            404   _pwm_RED0:
0004            405            ds 1
0005            406   _pwm_RED1:
0005            407            ds 1
0006            408   _dirout:
0006            409            ds 1
0007            410   _overflow_count:
0007            411            ds 1
0008            412   _mode:
0008            413            ds 2
000A            414   _WriteCount:
000A            415            ds 1
000B            416   _millisecond:
000B            417            ds 2
000D            418   _period:
000D            419            ds 4
0011            420   _debugstring:
0011            421            ds 10
001B            422   _LCDprint_PARM_2:
001B            423            ds 1
001C            424   _MotorControl_IndVolts_1_91:
001C            425            ds 3
001F            426   _main_IndVolts_1_103:
001F            427            ds 12
002B            428   _main_sloc0_1_0:
002B            429            ds 4
002F            430   ;--------------------------------------------------------
002F            431   ; overlayable items in internal ram 
002F            432   ;--------------------------------------------------------
0000            433            rseg    R_OSEG
0000            434            rseg    R_OSEG
0000            435   _InitPinADC_PARM_2:
0000            436            ds 1
0001            437            rseg    R_OSEG
0001            438   ;--------------------------------------------------------
0001            439   ; indirectly addressable internal ram data
0001            440   ;--------------------------------------------------------
0000            441            rseg R_ISEG
0000            442   ;--------------------------------------------------------
0000            443   ; absolute internal ram data
0000            444   ;--------------------------------------------------------
0000            445            DSEG
0000            446   ;--------------------------------------------------------
0000            447   ; bit data
0000            448   ;--------------------------------------------------------
0000            449            rseg R_BSEG
0000            450   _Timer2_ISR_sloc0_1_0:
0000            451            DBIT    1
0001            452   _LCDprint_PARM_3:
0001            453            DBIT    1
0002            454   ;--------------------------------------------------------
0002            455   ; paged external ram data
0002            456   ;--------------------------------------------------------
0000            457            rseg R_PSEG
0000            458   ;--------------------------------------------------------
0000            459   ; external ram data
0000            460   ;--------------------------------------------------------
0000            461            rseg R_XSEG
0000            462   ;--------------------------------------------------------
0000            463   ; absolute external ram data
0000            464   ;--------------------------------------------------------
0000            465            XSEG
0000            466   ;--------------------------------------------------------
0000            467   ; external initialized ram data
0000            468   ;--------------------------------------------------------
0000            469            rseg R_IXSEG
0000            470            rseg R_HOME
0000            471            rseg R_GSINIT
0000            472            rseg R_CSEG
0000            473   ;--------------------------------------------------------
0000            474   ; Reset entry point and interrupt vectors
0000            475   ;--------------------------------------------------------
0000            476            CSEG at 0x0000
0000 020100     477            ljmp    _crt0
002B            478            CSEG at 0x002b
002B 020100     479            ljmp    _Timer2_ISR
002E            480   ;--------------------------------------------------------
002E            481   ; global & static initialisations
002E            482   ;--------------------------------------------------------
0000            483            rseg R_HOME
0000            484            rseg R_GSINIT
0000            485            rseg R_GSINIT
0000            486   ;--------------------------------------------------------
0000            487   ; data variables initialization
0000            488   ;--------------------------------------------------------
0000            489            rseg R_DINIT
0000            490   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:56: volatile unsigned char pwm_count=0;
0000 752800     491            mov     _pwm_count,#0x00
0003            492   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:57: volatile unsigned char power=30;
0003 75E81E     493            mov     _power,#0x1E
0006            494   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:58: volatile unsigned char pwm_BLU0=0;
0006 75A800     495            mov     _pwm_BLU0,#0x00
0009            496   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:59: volatile unsigned char pwm_BLU1=0;
0009 756800     497            mov     _pwm_BLU1,#0x00
000C            498   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:60: volatile unsigned char pwm_RED0=0;
000C 752800     499            mov     _pwm_RED0,#0x00
000F            500   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:61: volatile unsigned char pwm_RED1=0;
000F 75E800     501            mov     _pwm_RED1,#0x00
0012            502   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:62: volatile unsigned char dirout=0;
0012 75A800     503            mov     _dirout,#0x00
0015            504   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:63: unsigned char overflow_count=0;
0015 758000     505            mov     _overflow_count,#0x00
0018            506   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:64: unsigned int mode=FORWARD;
0018 75C003     507            mov     _mode,#0x03
001B E4         508            clr     a
001C F5C1       509            mov     (_mode + 1),a
001E            510   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:65: unsigned char WriteCount = 0;
001E 758000     511            mov     _WriteCount,#0x00
0021            512   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:66: unsigned int millisecond=0;
0021 E4         513            clr     a
0022 F540       514            mov     _millisecond,a
0024 F541       515            mov     (_millisecond + 1),a
0026            516   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:67: volatile float period=0;
0026 750000     517            mov     _period,#0x00
0029 750100     518            mov     (_period + 1),#0x00
002C 750200     519            mov     (_period + 2),#0x00
002F 750300     520            mov     (_period + 3),#0x00
0032            521            ; The linker places a 'ret' at the end of segment R_DINIT.
0032            522   ;--------------------------------------------------------
0032            523   ; code
0032            524   ;--------------------------------------------------------
0000            525            rseg R_CSEG
0000            526   ;------------------------------------------------------------
0000            527   ;Allocation info for local variables in function '_c51_external_startup'
0000            528   ;------------------------------------------------------------
0000            529   ;------------------------------------------------------------
0000            530   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:73: char _c51_external_startup (void)
0000            531   ;        -----------------------------------------
0000            532   ;         function _c51_external_startup
0000            533   ;        -----------------------------------------
0000            534   __c51_external_startup:
0000            535            using   0
0000            536   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:75: PCA0MD&=(~0x40) ;    // DISABLE WDT: clear Watchdog Enable bit
0000 53D9BF     537            anl     _PCA0MD,#0xBF
0003            538   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:76: VDM0CN=0x80; // enable VDD monitor
0003 75FF80     539            mov     _VDM0CN,#0x80
0006            540   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:77: RSTSRC=0x02|0x04; // Enable reset on missing clock detector and VDD
0006 75EF06     541            mov     _RSTSRC,#0x06
0009            542   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:85: CLKSEL|=0b_0000_0011; // SYSCLK derived from the Internal High-Frequency Oscillator / 1.
0009 43A903     543            orl     _CLKSEL,#0x03
000C            544   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:89: OSCICN |= 0x03; // Configure internal oscillator for its maximum frequency
000C 43B203     545            orl     _OSCICN,#0x03
000F            546   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:92: SCON0 = 0x10;
000F 759810     547            mov     _SCON0,#0x10
0012            548   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:94: TH1 = 0x10000-((SYSCLK/BAUDRATE)/2L);
0012 758D30     549            mov     _TH1,#0x30
0015            550   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:95: CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
0015 538EF4     551            anl     _CKCON,#0xF4
0018            552   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:96: CKCON |=  0x08;
0018 438E08     553            orl     _CKCON,#0x08
001B            554   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:109: TL1 = TH1;      // Init Timer1
001B 858D8B     555            mov     _TL1,_TH1
001E            556   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:110: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit autoreload
001E 53890F     557            anl     _TMOD,#0x0F
0021            558   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:111: TMOD |=  0x20;
0021 438920     559            orl     _TMOD,#0x20
0024            560   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:112: TR1 = 1; // START Timer1
0024 D28E       561            setb    _TR1
0026            562   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:113: TI = 1;  // Indicate TX0 ready
0026 D299       563            setb    _TI
0028            564   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:116: P2MDOUT|=0b_0000_0011;
0028 43A603     565            orl     _P2MDOUT,#0x03
002B            566   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:117: P0MDOUT |= 0x01;  // set P0.0 and P0.4 as push-pull outputs
002B 43A401     567            orl     _P0MDOUT,#0x01
002E            568   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:118: XBR0     = 0x01; // Enable UART on P0.4(TX) and P0.5(RX)
002E 75E101     569            mov     _XBR0,#0x01
0031            570   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:119: XBR1     = 0x40; // Enable crossbar and weak pull-ups
0031 75E240     571            mov     _XBR1,#0x40
0034            572   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:121: return 0;
0034 758200     573            mov     dpl,#0x00
0037 22         574            ret
0038            575   ;------------------------------------------------------------
0038            576   ;Allocation info for local variables in function 'Timer3us'
0038            577   ;------------------------------------------------------------
0038            578   ;us                        Allocated to registers r2 
0038            579   ;i                         Allocated to registers r3 
0038            580   ;------------------------------------------------------------
0038            581   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:128: void Timer3us(unsigned char us)
0038            582   ;        -----------------------------------------
0038            583   ;         function Timer3us
0038            584   ;        -----------------------------------------
0038            585   _Timer3us:
0038 AA82       586            mov     r2,dpl
003A            587   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:133: CKCON|=0b_0100_0000;
003A 438E40     588            orl     _CKCON,#0x40
003D            589   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:135: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
003D 7592D0     590            mov     _TMR3RL,#0xD0
0040 7593FF     591            mov     (_TMR3RL >> 8),#0xFF
0043            592   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:136: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0043 859294     593            mov     _TMR3,_TMR3RL
0046 859395     594            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0049            595   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:138: TMR3CN = 0x04;                 // Sart Timer3 and clear overflow flag
0049 759104     596            mov     _TMR3CN,#0x04
004C            597   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:139: for (i = 0; i < us; i++)       // Count <us> overflows
004C 7B00       598            mov     r3,#0x00
004E            599   L003004?:
004E C3         600            clr     c
004F EB         601            mov     a,r3
0050 9A         602            subb    a,r2
0051 5001       603            jnc     L003007?
0053            604   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:141: while (!(TMR3CN & 0x80));  // Wait for overflow
0053            605   L003001?:
0053 E591       606            mov     a,_TMR3CN
0055 30E718     607            jnb     acc.7,L003001?
0058            608   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:142: TMR3CN &= ~(0x80);         // Clear overflow indicator
0058 53917F     609            anl     _TMR3CN,#0x7F
005B            610   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:139: for (i = 0; i < us; i++)       // Count <us> overflows
005B 0B         611            inc     r3
005C 8001       612            sjmp    L003004?
005E            613   L003007?:
005E            614   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:144: TMR3CN = 0 ;                   // Stop Timer3 and clear overflow flag
005E 759100     615            mov     _TMR3CN,#0x00
0061 22         616            ret
0062            617   ;------------------------------------------------------------
0062            618   ;Allocation info for local variables in function 'waitms'
0062            619   ;------------------------------------------------------------
0062            620   ;ms                        Allocated to registers r2 r3 
0062            621   ;j                         Allocated to registers r2 r3 
0062            622   ;------------------------------------------------------------
0062            623   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:151: void waitms (unsigned int ms)
0062            624   ;        -----------------------------------------
0062            625   ;         function waitms
0062            626   ;        -----------------------------------------
0062            627   _waitms:
0062 AA82       628            mov     r2,dpl
0064 AB83       629            mov     r3,dph
0066            630   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:154: for(j=ms; j!=0; j--)
0066            631   L004001?:
0066 BA0018     632            cjne    r2,#0x00,L004010?
0069 BB0018     633            cjne    r3,#0x00,L004010?
006C 22         634            ret
006D            635   L004010?:
006D            636   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:156: Timer3us(249);
006D 7582F9     637            mov     dpl,#0xF9
0070 C002       638            push    ar2
0072 C003       639            push    ar3
0074 120100     640            lcall   _Timer3us
0077            641   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:157: Timer3us(249);
0077 7582F9     642            mov     dpl,#0xF9
007A 120100     643            lcall   _Timer3us
007D            644   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:158: Timer3us(249);
007D 7582F9     645            mov     dpl,#0xF9
0080 120100     646            lcall   _Timer3us
0083            647   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:159: Timer3us(250);
0083 7582FA     648            mov     dpl,#0xFA
0086 120100     649            lcall   _Timer3us
0089 D003       650            pop     ar3
008B D002       651            pop     ar2
008D            652   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:154: for(j=ms; j!=0; j--)
008D 1A         653            dec     r2
008E BAFF58     654            cjne    r2,#0xff,L004011?
0091 1B         655            dec     r3
0092            656   L004011?:
0092 8001       657            sjmp    L004001?
0094            658   ;------------------------------------------------------------
0094            659   ;Allocation info for local variables in function 'TIMER0_Init'
0094            660   ;------------------------------------------------------------
0094            661   ;------------------------------------------------------------
0094            662   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:165: void TIMER0_Init(void)
0094            663   ;        -----------------------------------------
0094            664   ;         function TIMER0_Init
0094            665   ;        -----------------------------------------
0094            666   _TIMER0_Init:
0094            667   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:167: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
0094 5389F0     668            anl     _TMOD,#0xF0
0097            669   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:168: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
0097 438901     670            orl     _TMOD,#0x01
009A            671   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:169: TR0=0; // Stop Timer/Counter 0
009A C28C       672            clr     _TR0
009C 22         673            ret
009D            674   ;------------------------------------------------------------
009D            675   ;Allocation info for local variables in function 'TIMER2_Init'
009D            676   ;------------------------------------------------------------
009D            677   ;------------------------------------------------------------
009D            678   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:175: void TIMER2_Init(void)
009D            679   ;        -----------------------------------------
009D            680   ;         function TIMER2_Init
009D            681   ;        -----------------------------------------
009D            682   _TIMER2_Init:
009D            683   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:177: TMR2CN=0x00;   // Stop Timer2; Clear TF2;
009D 75C800     684            mov     _TMR2CN,#0x00
00A0            685   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:178: CKCON|=0b_0001_0000;
00A0 438E10     686            orl     _CKCON,#0x10
00A3            687   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:179: TMR2RL=(-(SYSCLK/(2*48))/(100L)); // Initialize reload value
00A3 75CA78     688            mov     _TMR2RL,#0x78
00A6 75CBEC     689            mov     (_TMR2RL >> 8),#0xEC
00A9            690   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:180: TMR2=0xffff;   // Set to reload immediately
00A9 75CCFF     691            mov     _TMR2,#0xFF
00AC 75CDFF     692            mov     (_TMR2 >> 8),#0xFF
00AF            693   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:181: ET2=1;         // Enable Timer2 interrupts
00AF D2AD       694            setb    _ET2
00B1            695   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:182: TR2=1;         // Start Timer2
00B1 D2CA       696            setb    _TR2
00B3 22         697            ret
00B4            698   ;------------------------------------------------------------
00B4            699   ;Allocation info for local variables in function 'InitADC'
00B4            700   ;------------------------------------------------------------
00B4            701   ;------------------------------------------------------------
00B4            702   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:188: void InitADC (void)
00B4            703   ;        -----------------------------------------
00B4            704   ;         function InitADC
00B4            705   ;        -----------------------------------------
00B4            706   _InitADC:
00B4            707   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:191: ADC0CF = 0xF8; // SAR clock = 31, Right-justified result
00B4 75BCF8     708            mov     _ADC0CF,#0xF8
00B7            709   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:192: ADC0CN = 0b_1000_0000; // AD0EN=1, AD0TM=0
00B7 75E880     710            mov     _ADC0CN,#0x80
00BA            711   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:193: REF0CN = 0b_0000_1000; //Select VDD as the voltage reference for the converter
00BA 75D108     712            mov     _REF0CN,#0x08
00BD 22         713            ret
00BE            714   ;------------------------------------------------------------
00BE            715   ;Allocation info for local variables in function 'InitPinADC'
00BE            716   ;------------------------------------------------------------
00BE            717   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00BE            718   ;portno                    Allocated to registers r2 
00BE            719   ;mask                      Allocated to registers r3 
00BE            720   ;------------------------------------------------------------
00BE            721   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:200: void InitPinADC (unsigned char portno, unsigned char pinno)
00BE            722   ;        -----------------------------------------
00BE            723   ;         function InitPinADC
00BE            724   ;        -----------------------------------------
00BE            725   _InitPinADC:
00BE AA82       726            mov     r2,dpl
00C0            727   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:204: mask=1<<pinno;
00C0 8550F0     728            mov     b,_InitPinADC_PARM_2
00C3 05F0       729            inc     b
00C5 7401       730            mov     a,#0x01
00C7 8001       731            sjmp    L008012?
00C9            732   L008010?:
00C9 25E0       733            add     a,acc
00CB            734   L008012?:
00CB D5F018     735            djnz    b,L008010?
00CE FB         736            mov     r3,a
00CF            737   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:206: switch (portno)
00CF EA         738            mov     a,r2
00D0 24FC       739            add     a,#0xff - 0x03
00D2 4001       740            jc      L008007?
00D4 EA         741            mov     a,r2
00D5 2A         742            add     a,r2
00D6 2A         743            add     a,r2
00D7 90A098     744            mov     dptr,#L008014?
00DA 73         745            jmp     @a+dptr
00DB            746   L008014?:
00DB 020100     747            ljmp    L008001?
00DE 020100     748            ljmp    L008002?
00E1 020100     749            ljmp    L008003?
00E4 020100     750            ljmp    L008004?
00E7            751   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:208: case 0:
00E7            752   L008001?:
00E7            753   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:209: P0MDIN &= (~mask); // Set pin as analog input
00E7 EB         754            mov     a,r3
00E8 F4         755            cpl     a
00E9 52F1       756            anl     _P0MDIN,a
00EB            757   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:210: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00EB EB         758            mov     a,r3
00EC 42D4       759            orl     _P0SKIP,a
00EE            760   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:211: break;
00EE            761   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:212: case 1:
00EE 22         762            ret
00EF            763   L008002?:
00EF            764   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:213: P1MDIN &= (~mask); // Set pin as analog input
00EF EB         765            mov     a,r3
00F0 F4         766            cpl     a
00F1 52F2       767            anl     _P1MDIN,a
00F3            768   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:214: P1SKIP |= mask; // Skip Crossbar decoding for this pin
00F3 EB         769            mov     a,r3
00F4 42D5       770            orl     _P1SKIP,a
00F6            771   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:215: break;
00F6            772   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:216: case 2:
00F6 22         773            ret
00F7            774   L008003?:
00F7            775   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:217: P2MDIN &= (~mask); // Set pin as analog input
00F7 EB         776            mov     a,r3
00F8 F4         777            cpl     a
00F9 52F3       778            anl     _P2MDIN,a
00FB            779   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:218: P2SKIP |= mask; // Skip Crossbar decoding for this pin
00FB EB         780            mov     a,r3
00FC 42D6       781            orl     _P2SKIP,a
00FE            782   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:219: break;
00FE            783   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:220: case 3:
00FE 22         784            ret
00FF            785   L008004?:
00FF            786   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:221: P3MDIN &= (~mask); // Set pin as analog input
00FF EB         787            mov     a,r3
0100 F4         788            cpl     a
0101 FA         789            mov     r2,a
0102 52F4       790            anl     _P3MDIN,a
0104            791   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:222: P3SKIP |= mask; // Skip Crossbar decoding for this pin
0104 EB         792            mov     a,r3
0105 42DF       793            orl     _P3SKIP,a
0107            794   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:226: }
0107            795   L008007?:
0107 22         796            ret
0108            797   ;------------------------------------------------------------
0108            798   ;Allocation info for local variables in function 'ADC_at_Pin'
0108            799   ;------------------------------------------------------------
0108            800   ;pin                       Allocated to registers 
0108            801   ;------------------------------------------------------------
0108            802   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:233: unsigned int ADC_at_Pin(unsigned char pin)
0108            803   ;        -----------------------------------------
0108            804   ;         function ADC_at_Pin
0108            805   ;        -----------------------------------------
0108            806   _ADC_at_Pin:
0108 8582BB     807            mov     _AMX0P,dpl
010B            808   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:236: AMX0N = LQFP32_MUX_GND;  // GND is negative input (Single-ended Mode)
010B 75BA1F     809            mov     _AMX0N,#0x1F
010E            810   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:238: AD0BUSY=1;
010E D2EC       811            setb    _AD0BUSY
0110            812   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:239: while (AD0BUSY); // Wait for dummy conversion to finish
0110            813   L009001?:
0110 20ECD8     814            jb      _AD0BUSY,L009001?
0113            815   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:241: AD0BUSY = 1;
0113 D2EC       816            setb    _AD0BUSY
0115            817   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:242: while (AD0BUSY); // Wait for conversion to complete
0115            818   L009004?:
0115 20EC18     819            jb      _AD0BUSY,L009004?
0118            820   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:243: return (ADC0L+(ADC0H*0x100));
0118 AABD       821            mov     r2,_ADC0L
011A 7B00       822            mov     r3,#0x00
011C ADBE       823            mov     r5,_ADC0H
011E 7C00       824            mov     r4,#0x00
0120 EC         825            mov     a,r4
0121 2A         826            add     a,r2
0122 F582       827            mov     dpl,a
0124 ED         828            mov     a,r5
0125 3B         829            addc    a,r3
0126 F583       830            mov     dph,a
0128 22         831            ret
0129            832   ;------------------------------------------------------------
0129            833   ;Allocation info for local variables in function 'Volts_at_Pin'
0129            834   ;------------------------------------------------------------
0129            835   ;pin                       Allocated to registers r2 
0129            836   ;------------------------------------------------------------
0129            837   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:250: float Volts_at_Pin(unsigned char pin)
0129            838   ;        -----------------------------------------
0129            839   ;         function Volts_at_Pin
0129            840   ;        -----------------------------------------
0129            841   _Volts_at_Pin:
0129            842   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:252: return ((ADC_at_Pin(pin)*VDD_onboard)/1024.0);
0129 120100     843            lcall   _ADC_at_Pin
012C 120100     844            lcall   ___uint2fs
012F AA82       845            mov     r2,dpl
0131 AB83       846            mov     r3,dph
0133 ACF0       847            mov     r4,b
0135 FD         848            mov     r5,a
0136 C002       849            push    ar2
0138 C003       850            push    ar3
013A C004       851            push    ar4
013C C005       852            push    ar5
013E 90DD2F     853            mov     dptr,#0xDD2F
0141 75F054     854            mov     b,#0x54
0144 7440       855            mov     a,#0x40
0146 120100     856            lcall   ___fsmul
0149 AA82       857            mov     r2,dpl
014B AB83       858            mov     r3,dph
014D ACF0       859            mov     r4,b
014F FD         860            mov     r5,a
0150 E581       861            mov     a,sp
0152 24FC       862            add     a,#0xfc
0154 F581       863            mov     sp,a
0156 E4         864            clr     a
0157 C0E0       865            push    acc
0159 C0E0       866            push    acc
015B 7480       867            mov     a,#0x80
015D C0E0       868            push    acc
015F 7444       869            mov     a,#0x44
0161 C0E0       870            push    acc
0163 8A82       871            mov     dpl,r2
0165 8B83       872            mov     dph,r3
0167 8CF0       873            mov     b,r4
0169 ED         874            mov     a,r5
016A 120100     875            lcall   ___fsdiv
016D AA82       876            mov     r2,dpl
016F AB83       877            mov     r3,dph
0171 ACF0       878            mov     r4,b
0173 FD         879            mov     r5,a
0174 E581       880            mov     a,sp
0176 24FC       881            add     a,#0xfc
0178 F581       882            mov     sp,a
017A 8A82       883            mov     dpl,r2
017C 8B83       884            mov     dph,r3
017E 8CF0       885            mov     b,r4
0180 ED         886            mov     a,r5
0181 22         887            ret
0182            888   ;------------------------------------------------------------
0182            889   ;Allocation info for local variables in function 'Timer2_ISR'
0182            890   ;------------------------------------------------------------
0182            891   ;------------------------------------------------------------
0182            892   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:259: void Timer2_ISR (void) interrupt 5
0182            893   ;        -----------------------------------------
0182            894   ;         function Timer2_ISR
0182            895   ;        -----------------------------------------
0182            896   _Timer2_ISR:
0182 C0E0       897            push    acc
0184 C0D0       898            push    psw
0186 75D000     899            mov     psw,#0x00
0189            900   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:261: TF2H = 0; // Clear Timer2 interrupt flag
0189 C2CF       901            clr     _TF2H
018B            902   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:263: pwm_count++;
018B 0528       903            inc     _pwm_count
018D            904   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:264: if(pwm_count>100) pwm_count=0;
018D E528       905            mov     a,_pwm_count
018F 249B       906            add     a,#0xff - 0x64
0191 5001       907            jnc     L011002?
0193 752800     908            mov     _pwm_count,#0x00
0196            909   L011002?:
0196            910   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:266: BLU0=pwm_count>pwm_BLU0?0:1;
0196 C3         911            clr     c
0197 E5A8       912            mov     a,_pwm_BLU0
0199 9528       913            subb    a,_pwm_count
019B 92D8       914            mov  _Timer2_ISR_sloc0_1_0,c
019D B3         915            cpl     c
019E 92A5       916            mov     _P2_5,c
01A0            917   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:267: BLU1=pwm_count>pwm_BLU1?0:1;
01A0 C3         918            clr     c
01A1 E568       919            mov     a,_pwm_BLU1
01A3 9528       920            subb    a,_pwm_count
01A5 92D8       921            mov  _Timer2_ISR_sloc0_1_0,c
01A7 B3         922            cpl     c
01A8 92A2       923            mov     _P2_2,c
01AA            924   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:269: RED0=pwm_count>pwm_RED0?0:1;
01AA C3         925            clr     c
01AB E528       926            mov     a,_pwm_RED0
01AD 9528       927            subb    a,_pwm_count
01AF 92D8       928            mov  _Timer2_ISR_sloc0_1_0,c
01B1 B3         929            cpl     c
01B2 92A3       930            mov     _P2_3,c
01B4            931   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:270: RED1=pwm_count>pwm_RED1?0:1;
01B4 C3         932            clr     c
01B5 E5E8       933            mov     a,_pwm_RED1
01B7 9528       934            subb    a,_pwm_count
01B9 92D8       935            mov  _Timer2_ISR_sloc0_1_0,c
01BB B3         936            cpl     c
01BC 92A4       937            mov     _P2_4,c
01BE D0D0       938            pop     psw
01C0 D0E0       939            pop     acc
01C2 32         940            reti
01C3            941   ;        eliminated unneeded push/pop dpl
01C3            942   ;        eliminated unneeded push/pop dph
01C3            943   ;        eliminated unneeded push/pop b
01C3            944   ;------------------------------------------------------------
01C3            945   ;Allocation info for local variables in function 'LCD_pulse'
01C3            946   ;------------------------------------------------------------
01C3            947   ;------------------------------------------------------------
01C3            948   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:276: void LCD_pulse (void)
01C3            949   ;        -----------------------------------------
01C3            950   ;         function LCD_pulse
01C3            951   ;        -----------------------------------------
01C3            952   _LCD_pulse:
01C3            953   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:278: LCD_E=1;
01C3 D295       954            setb    _P1_5
01C5            955   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:279: Timer3us(40);
01C5 758228     956            mov     dpl,#0x28
01C8 120100     957            lcall   _Timer3us
01CB            958   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:280: LCD_E=0;
01CB C295       959            clr     _P1_5
01CD 22         960            ret
01CE            961   ;------------------------------------------------------------
01CE            962   ;Allocation info for local variables in function 'LCD_byte'
01CE            963   ;------------------------------------------------------------
01CE            964   ;x                         Allocated to registers r2 
01CE            965   ;------------------------------------------------------------
01CE            966   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:283: void LCD_byte (unsigned char x)
01CE            967   ;        -----------------------------------------
01CE            968   ;         function LCD_byte
01CE            969   ;        -----------------------------------------
01CE            970   _LCD_byte:
01CE AA82       971            mov     r2,dpl
01D0            972   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:286: ACC=x; //Send high nible
01D0 8AE0       973            mov     _ACC,r2
01D2            974   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:287: LCD_D7=ACC_7;
01D2 A2E7       975            mov     c,_ACC_7
01D4 9290       976            mov     _P1_0,c
01D6            977   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:288: LCD_D6=ACC_6;
01D6 A2E6       978            mov     c,_ACC_6
01D8 9291       979            mov     _P1_1,c
01DA            980   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:289: LCD_D5=ACC_5;
01DA A2E5       981            mov     c,_ACC_5
01DC 9292       982            mov     _P1_2,c
01DE            983   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:290: LCD_D4=ACC_4;
01DE A2E4       984            mov     c,_ACC_4
01E0 9293       985            mov     _P1_3,c
01E2            986   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:291: LCD_pulse();
01E2 C002       987            push    ar2
01E4 120100     988            lcall   _LCD_pulse
01E7            989   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:292: Timer3us(40);
01E7 758228     990            mov     dpl,#0x28
01EA 120100     991            lcall   _Timer3us
01ED D002       992            pop     ar2
01EF            993   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:293: ACC=x; //Send low nible
01EF 8AE0       994            mov     _ACC,r2
01F1            995   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:294: LCD_D7=ACC_3;
01F1 A2E3       996            mov     c,_ACC_3
01F3 9290       997            mov     _P1_0,c
01F5            998   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:295: LCD_D6=ACC_2;
01F5 A2E2       999            mov     c,_ACC_2
01F7 9291      1000            mov     _P1_1,c
01F9           1001   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:296: LCD_D5=ACC_1;
01F9 A2E1      1002            mov     c,_ACC_1
01FB 9292      1003            mov     _P1_2,c
01FD           1004   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:297: LCD_D4=ACC_0;
01FD A2E0      1005            mov     c,_ACC_0
01FF 9293      1006            mov     _P1_3,c
0201           1007   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:298: LCD_pulse();
0201 020100    1008            ljmp    _LCD_pulse
0204           1009   ;------------------------------------------------------------
0204           1010   ;Allocation info for local variables in function 'WriteData'
0204           1011   ;------------------------------------------------------------
0204           1012   ;x                         Allocated to registers r2 
0204           1013   ;------------------------------------------------------------
0204           1014   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:301: void WriteData (unsigned char x)
0204           1015   ;        -----------------------------------------
0204           1016   ;         function WriteData
0204           1017   ;        -----------------------------------------
0204           1018   _WriteData:
0204 AA82      1019            mov     r2,dpl
0206           1020   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:303: LCD_RS=1;
0206 D2A1      1021            setb    _P2_1
0208           1022   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:304: LCD_byte(x);
0208 8A82      1023            mov     dpl,r2
020A 120100    1024            lcall   _LCD_byte
020D           1025   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:305: waitms(2);
020D 900002    1026            mov     dptr,#0x0002
0210 020100    1027            ljmp    _waitms
0213           1028   ;------------------------------------------------------------
0213           1029   ;Allocation info for local variables in function 'WriteCommand'
0213           1030   ;------------------------------------------------------------
0213           1031   ;x                         Allocated to registers r2 
0213           1032   ;------------------------------------------------------------
0213           1033   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:308: void WriteCommand (unsigned char x)
0213           1034   ;        -----------------------------------------
0213           1035   ;         function WriteCommand
0213           1036   ;        -----------------------------------------
0213           1037   _WriteCommand:
0213 AA82      1038            mov     r2,dpl
0215           1039   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:310: LCD_RS=0;
0215 C2A1      1040            clr     _P2_1
0217           1041   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:311: LCD_byte(x);
0217 8A82      1042            mov     dpl,r2
0219 120100    1043            lcall   _LCD_byte
021C           1044   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:312: waitms(5);
021C 900005    1045            mov     dptr,#0x0005
021F 020100    1046            ljmp    _waitms
0222           1047   ;------------------------------------------------------------
0222           1048   ;Allocation info for local variables in function 'LCD_4BIT'
0222           1049   ;------------------------------------------------------------
0222           1050   ;------------------------------------------------------------
0222           1051   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:315: void LCD_4BIT (void)
0222           1052   ;        -----------------------------------------
0222           1053   ;         function LCD_4BIT
0222           1054   ;        -----------------------------------------
0222           1055   _LCD_4BIT:
0222           1056   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:317: LCD_E=0; // Resting state of LCD's enable is zero
0222 C295      1057            clr     _P1_5
0224           1058   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:318: LCD_RW=0; // We are only writing to the LCD in this program
0224 C297      1059            clr     _P1_7
0226           1060   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:319: waitms(20);
0226 900014    1061            mov     dptr,#0x0014
0229 120100    1062            lcall   _waitms
022C           1063   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:321: WriteCommand(0x33);
022C 758233    1064            mov     dpl,#0x33
022F 120100    1065            lcall   _WriteCommand
0232           1066   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:322: WriteCommand(0x33);
0232 758233    1067            mov     dpl,#0x33
0235 120100    1068            lcall   _WriteCommand
0238           1069   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:323: WriteCommand(0x32); // Change to 4-bit mode
0238 758232    1070            mov     dpl,#0x32
023B 120100    1071            lcall   _WriteCommand
023E           1072   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:326: WriteCommand(0x28);
023E 758228    1073            mov     dpl,#0x28
0241 120100    1074            lcall   _WriteCommand
0244           1075   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:327: WriteCommand(0x0c);
0244 75820C    1076            mov     dpl,#0x0C
0247 120100    1077            lcall   _WriteCommand
024A           1078   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:328: WriteCommand(0x01); // Clear screen command (takes some time)
024A 758201    1079            mov     dpl,#0x01
024D 120100    1080            lcall   _WriteCommand
0250           1081   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:329: waitms(20); // Wait for clear screen command to finsih.
0250 900014    1082            mov     dptr,#0x0014
0253 020100    1083            ljmp    _waitms
0256           1084   ;------------------------------------------------------------
0256           1085   ;Allocation info for local variables in function 'LCDprint'
0256           1086   ;------------------------------------------------------------
0256           1087   ;line                      Allocated with name '_LCDprint_PARM_2'
0256           1088   ;string                    Allocated to registers r2 r3 r4 
0256           1089   ;j                         Allocated to registers r5 r6 
0256           1090   ;------------------------------------------------------------
0256           1091   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:332: void LCDprint(char * string, unsigned char line, bit clear)
0256           1092   ;        -----------------------------------------
0256           1093   ;         function LCDprint
0256           1094   ;        -----------------------------------------
0256           1095   _LCDprint:
0256 AA82      1096            mov     r2,dpl
0258 AB83      1097            mov     r3,dph
025A ACF0      1098            mov     r4,b
025C           1099   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:336: WriteCommand(line==2?0xc0:0x80);
025C 7402      1100            mov     a,#0x02
025E B580D8    1101            cjne    a,_LCDprint_PARM_2,L017013?
0261 7DC0      1102            mov     r5,#0xC0
0263 8001      1103            sjmp    L017014?
0265           1104   L017013?:
0265 7D80      1105            mov     r5,#0x80
0267           1106   L017014?:
0267 8D82      1107            mov     dpl,r5
0269 C002      1108            push    ar2
026B C003      1109            push    ar3
026D C004      1110            push    ar4
026F 120100    1111            lcall   _WriteCommand
0272           1112   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:337: waitms(5);
0272 900005    1113            mov     dptr,#0x0005
0275 120100    1114            lcall   _waitms
0278 D004      1115            pop     ar4
027A D003      1116            pop     ar3
027C D002      1117            pop     ar2
027E           1118   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:338: for(j=0; string[j]!=0; j++)      WriteData(string[j]);// Write the message
027E 7D00      1119            mov     r5,#0x00
0280 7E00      1120            mov     r6,#0x00
0282           1121   L017003?:
0282 ED        1122            mov     a,r5
0283 2A        1123            add     a,r2
0284 FF        1124            mov     r7,a
0285 EE        1125            mov     a,r6
0286 3B        1126            addc    a,r3
0287 F8        1127            mov     r0,a
0288 8C01      1128            mov     ar1,r4
028A 8F82      1129            mov     dpl,r7
028C 8883      1130            mov     dph,r0
028E 89F0      1131            mov     b,r1
0290 120100    1132            lcall   __gptrget
0293 FF        1133            mov     r7,a
0294 6001      1134            jz      L017006?
0296 8F82      1135            mov     dpl,r7
0298 C002      1136            push    ar2
029A C003      1137            push    ar3
029C C004      1138            push    ar4
029E C005      1139            push    ar5
02A0 C006      1140            push    ar6
02A2 120100    1141            lcall   _WriteData
02A5 D006      1142            pop     ar6
02A7 D005      1143            pop     ar5
02A9 D004      1144            pop     ar4
02AB D003      1145            pop     ar3
02AD D002      1146            pop     ar2
02AF 0D        1147            inc     r5
02B0 BD0058    1148            cjne    r5,#0x00,L017003?
02B3 0E        1149            inc     r6
02B4 8001      1150            sjmp    L017003?
02B6           1151   L017006?:
02B6           1152   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:339: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
02B6 303018    1153            jnb     _LCDprint_PARM_3,L017011?
02B9 8D02      1154            mov     ar2,r5
02BB 8E03      1155            mov     ar3,r6
02BD           1156   L017007?:
02BD C3        1157            clr     c
02BE EA        1158            mov     a,r2
02BF 9410      1159            subb    a,#0x10
02C1 EB        1160            mov     a,r3
02C2 6480      1161            xrl     a,#0x80
02C4 9480      1162            subb    a,#0x80
02C6 5001      1163            jnc     L017011?
02C8 758220    1164            mov     dpl,#0x20
02CB C002      1165            push    ar2
02CD C003      1166            push    ar3
02CF 120100    1167            lcall   _WriteData
02D2 D003      1168            pop     ar3
02D4 D002      1169            pop     ar2
02D6 0A        1170            inc     r2
02D7 BA0058    1171            cjne    r2,#0x00,L017007?
02DA 0B        1172            inc     r3
02DB 8001      1173            sjmp    L017007?
02DD           1174   L017011?:
02DD 22        1175            ret
02DE           1176   ;------------------------------------------------------------
02DE           1177   ;Allocation info for local variables in function 'Clean_LCD'
02DE           1178   ;------------------------------------------------------------
02DE           1179   ;------------------------------------------------------------
02DE           1180   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:343: void Clean_LCD(void){
02DE           1181   ;        -----------------------------------------
02DE           1182   ;         function Clean_LCD
02DE           1183   ;        -----------------------------------------
02DE           1184   _Clean_LCD:
02DE           1185   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:344: LCDprint("                ", 1, 1);
02DE 758001    1186            mov     _LCDprint_PARM_2,#0x01
02E1 D230      1187            setb    _LCDprint_PARM_3
02E3 90A598    1188            mov     dptr,#__str_0
02E6 75F080    1189            mov     b,#0x80
02E9 120100    1190            lcall   _LCDprint
02EC           1191   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:345: LCDprint("                ", 2, 1);
02EC 758002    1192            mov     _LCDprint_PARM_2,#0x02
02EF D230      1193            setb    _LCDprint_PARM_3
02F1 90A598    1194            mov     dptr,#__str_0
02F4 75F080    1195            mov     b,#0x80
02F7 020100    1196            ljmp    _LCDprint
02FA           1197   ;------------------------------------------------------------
02FA           1198   ;Allocation info for local variables in function 'ReadPeriod'
02FA           1199   ;------------------------------------------------------------
02FA           1200   ;------------------------------------------------------------
02FA           1201   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:351: void ReadPeriod (void)
02FA           1202   ;        -----------------------------------------
02FA           1203   ;         function ReadPeriod
02FA           1204   ;        -----------------------------------------
02FA           1205   _ReadPeriod:
02FA           1206   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:355: TL0=0;
02FA 758A00    1207            mov     _TL0,#0x00
02FD           1208   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:356: TH0=0;
02FD 758C00    1209            mov     _TH0,#0x00
0300           1210   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:357: TF0=0;
0300 C28D      1211            clr     _TF0
0302           1212   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:358: overflow_count=0;
0302 758000    1213            mov     _overflow_count,#0x00
0305           1214   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:362: while(FRQIN!=1); // Wait for the signal to be one
0305           1215   L019001?:
0305 3096D8    1216            jnb     _P1_6,L019001?
0308           1217   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:363: while(FRQIN!=0); // Wait for the signal to be zero
0308           1218   L019004?:
0308 209618    1219            jb      _P1_6,L019004?
030B           1220   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:364: TR0=1; // Start the timer
030B D28C      1221            setb    _TR0
030D           1222   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:365: while(FRQIN!=1) // Wait for the signal to be one
030D           1223   L019009?:
030D 209698    1224            jb      _P1_6,L019014?
0310           1225   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:367: if(TF0==1) // Did the 16-bit timer overflow?
0310           1226   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:369: TF0=0;
0310 108DD8    1227            jbc     _TF0,L019031?
0313 8001      1228            sjmp    L019009?
0315           1229   L019031?:
0315           1230   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:370: overflow_count++;
0315 0580      1231            inc     _overflow_count
0317           1232   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:373: while(FRQIN!=0) // Wait for the signal to be zero
0317 8001      1233            sjmp    L019009?
0319           1234   L019014?:
0319 309618    1235            jnb     _P1_6,L019016?
031C           1236   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:375: if(TF0==1) // Did the 16-bit timer overflow?
031C           1237   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:377: TF0=0;
031C 108D58    1238            jbc     _TF0,L019033?
031F 8001      1239            sjmp    L019014?
0321           1240   L019033?:
0321           1241   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:378: overflow_count++;
0321 0580      1242            inc     _overflow_count
0323 8001      1243            sjmp    L019014?
0325           1244   L019016?:
0325           1245   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:382: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period. Then convert it to frequency
0325 C28C      1246            clr     _TR0
0327           1247   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:384: period=1000.0*(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK); // Compute period. Unit in ms
0327 858082    1248            mov     dpl,_overflow_count
032A 120100    1249            lcall   ___uchar2fs
032D AA82      1250            mov     r2,dpl
032F AB83      1251            mov     r3,dph
0331 ACF0      1252            mov     r4,b
0333 FD        1253            mov     r5,a
0334 C002      1254            push    ar2
0336 C003      1255            push    ar3
0338 C004      1256            push    ar4
033A C005      1257            push    ar5
033C 900000    1258            mov     dptr,#0x0000
033F 75F080    1259            mov     b,#0x80
0342 7447      1260            mov     a,#0x47
0344 120100    1261            lcall   ___fsmul
0347 AA82      1262            mov     r2,dpl
0349 AB83      1263            mov     r3,dph
034B ACF0      1264            mov     r4,b
034D FD        1265            mov     r5,a
034E E581      1266            mov     a,sp
0350 24FC      1267            add     a,#0xfc
0352 F581      1268            mov     sp,a
0354 858C82    1269            mov     dpl,_TH0
0357 C002      1270            push    ar2
0359 C003      1271            push    ar3
035B C004      1272            push    ar4
035D C005      1273            push    ar5
035F 120100    1274            lcall   ___uchar2fs
0362 AE82      1275            mov     r6,dpl
0364 AF83      1276            mov     r7,dph
0366 A8F0      1277            mov     r0,b
0368 F9        1278            mov     r1,a
0369 C006      1279            push    ar6
036B C007      1280            push    ar7
036D C000      1281            push    ar0
036F C001      1282            push    ar1
0371 900000    1283            mov     dptr,#0x0000
0374 75F080    1284            mov     b,#0x80
0377 7443      1285            mov     a,#0x43
0379 120100    1286            lcall   ___fsmul
037C AE82      1287            mov     r6,dpl
037E AF83      1288            mov     r7,dph
0380 A8F0      1289            mov     r0,b
0382 F9        1290            mov     r1,a
0383 E581      1291            mov     a,sp
0385 24FC      1292            add     a,#0xfc
0387 F581      1293            mov     sp,a
0389 D005      1294            pop     ar5
038B D004      1295            pop     ar4
038D D003      1296            pop     ar3
038F D002      1297            pop     ar2
0391 C006      1298            push    ar6
0393 C007      1299            push    ar7
0395 C000      1300            push    ar0
0397 C001      1301            push    ar1
0399 8A82      1302            mov     dpl,r2
039B 8B83      1303            mov     dph,r3
039D 8CF0      1304            mov     b,r4
039F ED        1305            mov     a,r5
03A0 120100    1306            lcall   ___fsadd
03A3 AA82      1307            mov     r2,dpl
03A5 AB83      1308            mov     r3,dph
03A7 ACF0      1309            mov     r4,b
03A9 FD        1310            mov     r5,a
03AA E581      1311            mov     a,sp
03AC 24FC      1312            add     a,#0xfc
03AE F581      1313            mov     sp,a
03B0 AE8A      1314            mov     r6,_TL0
03B2 7F00      1315            mov     r7,#0x00
03B4 8E82      1316            mov     dpl,r6
03B6 8F83      1317            mov     dph,r7
03B8 C002      1318            push    ar2
03BA C003      1319            push    ar3
03BC C004      1320            push    ar4
03BE C005      1321            push    ar5
03C0 120100    1322            lcall   ___sint2fs
03C3 AE82      1323            mov     r6,dpl
03C5 AF83      1324            mov     r7,dph
03C7 A8F0      1325            mov     r0,b
03C9 F9        1326            mov     r1,a
03CA D005      1327            pop     ar5
03CC D004      1328            pop     ar4
03CE D003      1329            pop     ar3
03D0 D002      1330            pop     ar2
03D2 C006      1331            push    ar6
03D4 C007      1332            push    ar7
03D6 C000      1333            push    ar0
03D8 C001      1334            push    ar1
03DA 8A82      1335            mov     dpl,r2
03DC 8B83      1336            mov     dph,r3
03DE 8CF0      1337            mov     b,r4
03E0 ED        1338            mov     a,r5
03E1 120100    1339            lcall   ___fsadd
03E4 AA82      1340            mov     r2,dpl
03E6 AB83      1341            mov     r3,dph
03E8 ACF0      1342            mov     r4,b
03EA FD        1343            mov     r5,a
03EB E581      1344            mov     a,sp
03ED 24FC      1345            add     a,#0xfc
03EF F581      1346            mov     sp,a
03F1 C002      1347            push    ar2
03F3 C003      1348            push    ar3
03F5 C004      1349            push    ar4
03F7 C005      1350            push    ar5
03F9 90126F    1351            mov     dptr,#0x126F
03FC 75F083    1352            mov     b,#0x83
03FF 7439      1353            mov     a,#0x39
0401 120100    1354            lcall   ___fsmul
0404 858200    1355            mov     _period,dpl
0407 858301    1356            mov     (_period + 1),dph
040A 85F002    1357            mov     (_period + 2),b
040D F503      1358            mov     (_period + 3),a
040F E581      1359            mov     a,sp
0411 24FC      1360            add     a,#0xfc
0413 F581      1361            mov     sp,a
0415 22        1362            ret
0416           1363   ;------------------------------------------------------------
0416           1364   ;Allocation info for local variables in function 'DetermineMode'
0416           1365   ;------------------------------------------------------------
0416           1366   ;------------------------------------------------------------
0416           1367   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:392: void DetermineMode (void) {
0416           1368   ;        -----------------------------------------
0416           1369   ;         function DetermineMode
0416           1370   ;        -----------------------------------------
0416           1371   _DetermineMode:
0416           1372   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:394: if (period>220.0 && period<360.0){
0416 E4        1373            clr     a
0417 C0E0      1374            push    acc
0419 C0E0      1375            push    acc
041B 745C      1376            mov     a,#0x5C
041D C0E0      1377            push    acc
041F 7443      1378            mov     a,#0x43
0421 C0E0      1379            push    acc
0423 850082    1380            mov     dpl,_period
0426 850183    1381            mov     dph,(_period + 1)
0429 8502F0    1382            mov     b,(_period + 2)
042C E503      1383            mov     a,(_period + 3)
042E 120100    1384            lcall   ___fsgt
0431 AA82      1385            mov     r2,dpl
0433 E581      1386            mov     a,sp
0435 24FC      1387            add     a,#0xfc
0437 F581      1388            mov     sp,a
0439 EA        1389            mov     a,r2
043A 6001      1390            jz      L020002?
043C E4        1391            clr     a
043D C0E0      1392            push    acc
043F C0E0      1393            push    acc
0441 74B4      1394            mov     a,#0xB4
0443 C0E0      1395            push    acc
0445 7443      1396            mov     a,#0x43
0447 C0E0      1397            push    acc
0449 850082    1398            mov     dpl,_period
044C 850183    1399            mov     dph,(_period + 1)
044F 8502F0    1400            mov     b,(_period + 2)
0452 E503      1401            mov     a,(_period + 3)
0454 120100    1402            lcall   ___fslt
0457 AA82      1403            mov     r2,dpl
0459 E581      1404            mov     a,sp
045B 24FC      1405            add     a,#0xfc
045D F581      1406            mov     sp,a
045F EA        1407            mov     a,r2
0460 6001      1408            jz      L020002?
0462           1409   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:395: mode = STOP;
0462 E4        1410            clr     a
0463 F5C0      1411            mov     _mode,a
0465 F5C1      1412            mov     (_mode + 1),a
0467           1413   L020002?:
0467           1414   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:399: if (period>360.0 && period<450.0){
0467 E4        1415            clr     a
0468 C0E0      1416            push    acc
046A C0E0      1417            push    acc
046C 74B4      1418            mov     a,#0xB4
046E C0E0      1419            push    acc
0470 7443      1420            mov     a,#0x43
0472 C0E0      1421            push    acc
0474 850082    1422            mov     dpl,_period
0477 850183    1423            mov     dph,(_period + 1)
047A 8502F0    1424            mov     b,(_period + 2)
047D E503      1425            mov     a,(_period + 3)
047F 120100    1426            lcall   ___fsgt
0482 AA82      1427            mov     r2,dpl
0484 E581      1428            mov     a,sp
0486 24FC      1429            add     a,#0xfc
0488 F581      1430            mov     sp,a
048A EA        1431            mov     a,r2
048B 6001      1432            jz      L020005?
048D E4        1433            clr     a
048E C0E0      1434            push    acc
0490 C0E0      1435            push    acc
0492 74E1      1436            mov     a,#0xE1
0494 C0E0      1437            push    acc
0496 7443      1438            mov     a,#0x43
0498 C0E0      1439            push    acc
049A 850082    1440            mov     dpl,_period
049D 850183    1441            mov     dph,(_period + 1)
04A0 8502F0    1442            mov     b,(_period + 2)
04A3 E503      1443            mov     a,(_period + 3)
04A5 120100    1444            lcall   ___fslt
04A8 AA82      1445            mov     r2,dpl
04AA E581      1446            mov     a,sp
04AC 24FC      1447            add     a,#0xfc
04AE F581      1448            mov     sp,a
04B0 EA        1449            mov     a,r2
04B1 6001      1450            jz      L020005?
04B3           1451   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:400: mode = FORWARD;
04B3 75C003    1452            mov     _mode,#0x03
04B6 E4        1453            clr     a
04B7 F5C1      1454            mov     (_mode + 1),a
04B9           1455   L020005?:
04B9           1456   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:403: if(period>135.0 && period<220.0){
04B9 E4        1457            clr     a
04BA C0E0      1458            push    acc
04BC C0E0      1459            push    acc
04BE 7407      1460            mov     a,#0x07
04C0 C0E0      1461            push    acc
04C2 7443      1462            mov     a,#0x43
04C4 C0E0      1463            push    acc
04C6 850082    1464            mov     dpl,_period
04C9 850183    1465            mov     dph,(_period + 1)
04CC 8502F0    1466            mov     b,(_period + 2)
04CF E503      1467            mov     a,(_period + 3)
04D1 120100    1468            lcall   ___fsgt
04D4 AA82      1469            mov     r2,dpl
04D6 E581      1470            mov     a,sp
04D8 24FC      1471            add     a,#0xfc
04DA F581      1472            mov     sp,a
04DC EA        1473            mov     a,r2
04DD 6001      1474            jz      L020008?
04DF E4        1475            clr     a
04E0 C0E0      1476            push    acc
04E2 C0E0      1477            push    acc
04E4 745C      1478            mov     a,#0x5C
04E6 C0E0      1479            push    acc
04E8 7443      1480            mov     a,#0x43
04EA C0E0      1481            push    acc
04EC 850082    1482            mov     dpl,_period
04EF 850183    1483            mov     dph,(_period + 1)
04F2 8502F0    1484            mov     b,(_period + 2)
04F5 E503      1485            mov     a,(_period + 3)
04F7 120100    1486            lcall   ___fslt
04FA AA82      1487            mov     r2,dpl
04FC E581      1488            mov     a,sp
04FE 24FC      1489            add     a,#0xfc
0500 F581      1490            mov     sp,a
0502 EA        1491            mov     a,r2
0503 6001      1492            jz      L020008?
0505           1493   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:404: mode = ROTATE;
0505 75C005    1494            mov     _mode,#0x05
0508 E4        1495            clr     a
0509 F5C1      1496            mov     (_mode + 1),a
050B           1497   L020008?:
050B           1498   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:407: if(period>550.0 && period<650.0){
050B E4        1499            clr     a
050C C0E0      1500            push    acc
050E 7480      1501            mov     a,#0x80
0510 C0E0      1502            push    acc
0512 7409      1503            mov     a,#0x09
0514 C0E0      1504            push    acc
0516 7444      1505            mov     a,#0x44
0518 C0E0      1506            push    acc
051A 850082    1507            mov     dpl,_period
051D 850183    1508            mov     dph,(_period + 1)
0520 8502F0    1509            mov     b,(_period + 2)
0523 E503      1510            mov     a,(_period + 3)
0525 120100    1511            lcall   ___fsgt
0528 AA82      1512            mov     r2,dpl
052A E581      1513            mov     a,sp
052C 24FC      1514            add     a,#0xfc
052E F581      1515            mov     sp,a
0530 EA        1516            mov     a,r2
0531 6001      1517            jz      L020013?
0533 E4        1518            clr     a
0534 C0E0      1519            push    acc
0536 7480      1520            mov     a,#0x80
0538 C0E0      1521            push    acc
053A 7422      1522            mov     a,#0x22
053C C0E0      1523            push    acc
053E 7444      1524            mov     a,#0x44
0540 C0E0      1525            push    acc
0542 850082    1526            mov     dpl,_period
0545 850183    1527            mov     dph,(_period + 1)
0548 8502F0    1528            mov     b,(_period + 2)
054B E503      1529            mov     a,(_period + 3)
054D 120100    1530            lcall   ___fslt
0550 AA82      1531            mov     r2,dpl
0552 E581      1532            mov     a,sp
0554 24FC      1533            add     a,#0xfc
0556 F581      1534            mov     sp,a
0558 EA        1535            mov     a,r2
0559 6001      1536            jz      L020013?
055B           1537   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:408: mode = BACKWARD;
055B 75C004    1538            mov     _mode,#0x04
055E E4        1539            clr     a
055F F5C1      1540            mov     (_mode + 1),a
0561           1541   L020013?:
0561 22        1542            ret
0562           1543   ;------------------------------------------------------------
0562           1544   ;Allocation info for local variables in function 'MotorControl'
0562           1545   ;------------------------------------------------------------
0562           1546   ;IndVolts                  Allocated with name '_MotorControl_IndVolts_1_91'
0562           1547   ;------------------------------------------------------------
0562           1548   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:418: void MotorControl (volatile float IndVolts[])
0562           1549   ;        -----------------------------------------
0562           1550   ;         function MotorControl
0562           1551   ;        -----------------------------------------
0562           1552   _MotorControl:
0562 8582F8    1553            mov     _MotorControl_IndVolts_1_91,dpl
0565 8583F9    1554            mov     (_MotorControl_IndVolts_1_91 + 1),dph
0568 85F0FA    1555            mov     (_MotorControl_IndVolts_1_91 + 2),b
056B           1556   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:421: switch (mode){
056B C3        1557            clr     c
056C 7405      1558            mov     a,#0x05
056E 95C0      1559            subb    a,_mode
0570 E4        1560            clr     a
0571 95C1      1561            subb    a,(_mode + 1)
0573 5001      1562            jnc     L021028?
0575 22        1563            ret
0576           1564   L021028?:
0576 E5C0      1565            mov     a,_mode
0578 25C0      1566            add     a,_mode
057A 25C0      1567            add     a,_mode
057C 90AA18    1568            mov     dptr,#L021029?
057F 73        1569            jmp     @a+dptr
0580           1570   L021029?:
0580 020100    1571            ljmp    L021015?
0583 020100    1572            ljmp    L021016?
0586 020100    1573            ljmp    L021017?
0589 020100    1574            ljmp    L021001?
058C 020100    1575            ljmp    L021008?
058F 020100    1576            ljmp    L021018?
0592           1577   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:423: case FORWARD:
0592           1578   L021001?:
0592           1579   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:424: if((IndVolts[0] - Vblue_middle) > Vblue_thresh){
0592 AAF8      1580            mov     r2,_MotorControl_IndVolts_1_91
0594 ABF9      1581            mov     r3,(_MotorControl_IndVolts_1_91 + 1)
0596 ACFA      1582            mov     r4,(_MotorControl_IndVolts_1_91 + 2)
0598 8A82      1583            mov     dpl,r2
059A 8B83      1584            mov     dph,r3
059C 8CF0      1585            mov     b,r4
059E 120100    1586            lcall   __gptrget
05A1 FD        1587            mov     r5,a
05A2 A3        1588            inc     dptr
05A3 120100    1589            lcall   __gptrget
05A6 FE        1590            mov     r6,a
05A7 A3        1591            inc     dptr
05A8 120100    1592            lcall   __gptrget
05AB FF        1593            mov     r7,a
05AC A3        1594            inc     dptr
05AD 120100    1595            lcall   __gptrget
05B0 F8        1596            mov     r0,a
05B1 C002      1597            push    ar2
05B3 C003      1598            push    ar3
05B5 C004      1599            push    ar4
05B7 7462      1600            mov     a,#0x62
05B9 C0E0      1601            push    acc
05BB 7410      1602            mov     a,#0x10
05BD C0E0      1603            push    acc
05BF 74F8      1604            mov     a,#0xF8
05C1 C0E0      1605            push    acc
05C3 743E      1606            mov     a,#0x3E
05C5 C0E0      1607            push    acc
05C7 8D82      1608            mov     dpl,r5
05C9 8E83      1609            mov     dph,r6
05CB 8FF0      1610            mov     b,r7
05CD E8        1611            mov     a,r0
05CE 120100    1612            lcall   ___fssub
05D1 AD82      1613            mov     r5,dpl
05D3 AE83      1614            mov     r6,dph
05D5 AFF0      1615            mov     r7,b
05D7 F8        1616            mov     r0,a
05D8 E581      1617            mov     a,sp
05DA 24FC      1618            add     a,#0xfc
05DC F581      1619            mov     sp,a
05DE 74AC      1620            mov     a,#0xAC
05E0 C0E0      1621            push    acc
05E2 741C      1622            mov     a,#0x1C
05E4 C0E0      1623            push    acc
05E6 74DA      1624            mov     a,#0xDA
05E8 C0E0      1625            push    acc
05EA 743D      1626            mov     a,#0x3D
05EC C0E0      1627            push    acc
05EE 8D82      1628            mov     dpl,r5
05F0 8E83      1629            mov     dph,r6
05F2 8FF0      1630            mov     b,r7
05F4 E8        1631            mov     a,r0
05F5 120100    1632            lcall   ___fsgt
05F8 AD82      1633            mov     r5,dpl
05FA E581      1634            mov     a,sp
05FC 24FC      1635            add     a,#0xfc
05FE F581      1636            mov     sp,a
0600 D004      1637            pop     ar4
0602 D003      1638            pop     ar3
0604 D002      1639            pop     ar2
0606 ED        1640            mov     a,r5
0607 6001      1641            jz      L021006?
0609           1642   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:425: pwm_BLU1= 0;
0609 756800    1643            mov     _pwm_BLU1,#0x00
060C           1644   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:426: pwm_BLU0 = 0;
060C 75A800    1645            mov     _pwm_BLU0,#0x00
060F           1646   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:427: pwm_RED1 = power;
060F 85E8E8    1647            mov     _pwm_RED1,_power
0612           1648   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:428: pwm_RED0 = 0; 
0612 752800    1649            mov     _pwm_RED0,#0x00
0615 22        1650            ret
0616           1651   L021006?:
0616           1652   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:431: else if( (IndVolts[1] - Vred_middle) > Vred_thresh ){
0616 7404      1653            mov     a,#0x04
0618 2A        1654            add     a,r2
0619 FA        1655            mov     r2,a
061A E4        1656            clr     a
061B 3B        1657            addc    a,r3
061C FB        1658            mov     r3,a
061D 8A82      1659            mov     dpl,r2
061F 8B83      1660            mov     dph,r3
0621 8CF0      1661            mov     b,r4
0623 120100    1662            lcall   __gptrget
0626 FA        1663            mov     r2,a
0627 A3        1664            inc     dptr
0628 120100    1665            lcall   __gptrget
062B FB        1666            mov     r3,a
062C A3        1667            inc     dptr
062D 120100    1668            lcall   __gptrget
0630 FC        1669            mov     r4,a
0631 A3        1670            inc     dptr
0632 120100    1671            lcall   __gptrget
0635 FD        1672            mov     r5,a
0636 741B      1673            mov     a,#0x1B
0638 C0E0      1674            push    acc
063A 742F      1675            mov     a,#0x2F
063C C0E0      1676            push    acc
063E 74CD      1677            mov     a,#0xCD
0640 C0E0      1678            push    acc
0642 743E      1679            mov     a,#0x3E
0644 C0E0      1680            push    acc
0646 8A82      1681            mov     dpl,r2
0648 8B83      1682            mov     dph,r3
064A 8CF0      1683            mov     b,r4
064C ED        1684            mov     a,r5
064D 120100    1685            lcall   ___fssub
0650 AA82      1686            mov     r2,dpl
0652 AB83      1687            mov     r3,dph
0654 ACF0      1688            mov     r4,b
0656 FD        1689            mov     r5,a
0657 E581      1690            mov     a,sp
0659 24FC      1691            add     a,#0xfc
065B F581      1692            mov     sp,a
065D 74AC      1693            mov     a,#0xAC
065F C0E0      1694            push    acc
0661 741C      1695            mov     a,#0x1C
0663 C0E0      1696            push    acc
0665 745A      1697            mov     a,#0x5A
0667 C0E0      1698            push    acc
0669 743D      1699            mov     a,#0x3D
066B C0E0      1700            push    acc
066D 8A82      1701            mov     dpl,r2
066F 8B83      1702            mov     dph,r3
0671 8CF0      1703            mov     b,r4
0673 ED        1704            mov     a,r5
0674 120100    1705            lcall   ___fsgt
0677 AA82      1706            mov     r2,dpl
0679 E581      1707            mov     a,sp
067B 24FC      1708            add     a,#0xfc
067D F581      1709            mov     sp,a
067F EA        1710            mov     a,r2
0680 6001      1711            jz      L021003?
0682           1712   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:432: pwm_BLU1=power;
0682 85E868    1713            mov     _pwm_BLU1,_power
0685           1714   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:433: pwm_BLU0=0;
0685 75A800    1715            mov     _pwm_BLU0,#0x00
0688           1716   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:434: pwm_RED1=0;
0688 75E800    1717            mov     _pwm_RED1,#0x00
068B           1718   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:435: pwm_RED0=0;
068B 752800    1719            mov     _pwm_RED0,#0x00
068E 22        1720            ret
068F           1721   L021003?:
068F           1722   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:438: pwm_BLU1 = power;
068F 85E868    1723            mov     _pwm_BLU1,_power
0692           1724   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:439: pwm_BLU0 = 0;
0692 75A800    1725            mov     _pwm_BLU0,#0x00
0695           1726   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:440: pwm_RED1 = power;
0695 85E8E8    1727            mov     _pwm_RED1,_power
0698           1728   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:441: pwm_RED0 = 0;
0698 752800    1729            mov     _pwm_RED0,#0x00
069B           1730   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:443: break;
069B 22        1731            ret
069C           1732   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:446: case BACKWARD:
069C           1733   L021008?:
069C           1734   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:447: if((IndVolts[0] - Vblue_middle) > Vblue_thresh){
069C AAF8      1735            mov     r2,_MotorControl_IndVolts_1_91
069E ABF9      1736            mov     r3,(_MotorControl_IndVolts_1_91 + 1)
06A0 ACFA      1737            mov     r4,(_MotorControl_IndVolts_1_91 + 2)
06A2 8A82      1738            mov     dpl,r2
06A4 8B83      1739            mov     dph,r3
06A6 8CF0      1740            mov     b,r4
06A8 120100    1741            lcall   __gptrget
06AB FD        1742            mov     r5,a
06AC A3        1743            inc     dptr
06AD 120100    1744            lcall   __gptrget
06B0 FE        1745            mov     r6,a
06B1 A3        1746            inc     dptr
06B2 120100    1747            lcall   __gptrget
06B5 FF        1748            mov     r7,a
06B6 A3        1749            inc     dptr
06B7 120100    1750            lcall   __gptrget
06BA F8        1751            mov     r0,a
06BB C002      1752            push    ar2
06BD C003      1753            push    ar3
06BF C004      1754            push    ar4
06C1 7462      1755            mov     a,#0x62
06C3 C0E0      1756            push    acc
06C5 7410      1757            mov     a,#0x10
06C7 C0E0      1758            push    acc
06C9 74F8      1759            mov     a,#0xF8
06CB C0E0      1760            push    acc
06CD 743E      1761            mov     a,#0x3E
06CF C0E0      1762            push    acc
06D1 8D82      1763            mov     dpl,r5
06D3 8E83      1764            mov     dph,r6
06D5 8FF0      1765            mov     b,r7
06D7 E8        1766            mov     a,r0
06D8 120100    1767            lcall   ___fssub
06DB AD82      1768            mov     r5,dpl
06DD AE83      1769            mov     r6,dph
06DF AFF0      1770            mov     r7,b
06E1 F8        1771            mov     r0,a
06E2 E581      1772            mov     a,sp
06E4 24FC      1773            add     a,#0xfc
06E6 F581      1774            mov     sp,a
06E8 74AC      1775            mov     a,#0xAC
06EA C0E0      1776            push    acc
06EC 741C      1777            mov     a,#0x1C
06EE C0E0      1778            push    acc
06F0 74DA      1779            mov     a,#0xDA
06F2 C0E0      1780            push    acc
06F4 743D      1781            mov     a,#0x3D
06F6 C0E0      1782            push    acc
06F8 8D82      1783            mov     dpl,r5
06FA 8E83      1784            mov     dph,r6
06FC 8FF0      1785            mov     b,r7
06FE E8        1786            mov     a,r0
06FF 120100    1787            lcall   ___fsgt
0702 AD82      1788            mov     r5,dpl
0704 E581      1789            mov     a,sp
0706 24FC      1790            add     a,#0xfc
0708 F581      1791            mov     sp,a
070A D004      1792            pop     ar4
070C D003      1793            pop     ar3
070E D002      1794            pop     ar2
0710 ED        1795            mov     a,r5
0711 6001      1796            jz      L021013?
0713           1797   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:448: pwm_BLU1= 0;
0713 756800    1798            mov     _pwm_BLU1,#0x00
0716           1799   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:449: pwm_BLU0 = 0;
0716 75A800    1800            mov     _pwm_BLU0,#0x00
0719           1801   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:450: pwm_RED1 = 0;
0719 75E800    1802            mov     _pwm_RED1,#0x00
071C           1803   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:451: pwm_RED0 = power; 
071C 85E828    1804            mov     _pwm_RED0,_power
071F 22        1805            ret
0720           1806   L021013?:
0720           1807   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:454: else if( (IndVolts[1] - Vred_middle) > Vred_thresh ){
0720 7404      1808            mov     a,#0x04
0722 2A        1809            add     a,r2
0723 FA        1810            mov     r2,a
0724 E4        1811            clr     a
0725 3B        1812            addc    a,r3
0726 FB        1813            mov     r3,a
0727 8A82      1814            mov     dpl,r2
0729 8B83      1815            mov     dph,r3
072B 8CF0      1816            mov     b,r4
072D 120100    1817            lcall   __gptrget
0730 FA        1818            mov     r2,a
0731 A3        1819            inc     dptr
0732 120100    1820            lcall   __gptrget
0735 FB        1821            mov     r3,a
0736 A3        1822            inc     dptr
0737 120100    1823            lcall   __gptrget
073A FC        1824            mov     r4,a
073B A3        1825            inc     dptr
073C 120100    1826            lcall   __gptrget
073F FD        1827            mov     r5,a
0740 741B      1828            mov     a,#0x1B
0742 C0E0      1829            push    acc
0744 742F      1830            mov     a,#0x2F
0746 C0E0      1831            push    acc
0748 74CD      1832            mov     a,#0xCD
074A C0E0      1833            push    acc
074C 743E      1834            mov     a,#0x3E
074E C0E0      1835            push    acc
0750 8A82      1836            mov     dpl,r2
0752 8B83      1837            mov     dph,r3
0754 8CF0      1838            mov     b,r4
0756 ED        1839            mov     a,r5
0757 120100    1840            lcall   ___fssub
075A AA82      1841            mov     r2,dpl
075C AB83      1842            mov     r3,dph
075E ACF0      1843            mov     r4,b
0760 FD        1844            mov     r5,a
0761 E581      1845            mov     a,sp
0763 24FC      1846            add     a,#0xfc
0765 F581      1847            mov     sp,a
0767 74AC      1848            mov     a,#0xAC
0769 C0E0      1849            push    acc
076B 741C      1850            mov     a,#0x1C
076D C0E0      1851            push    acc
076F 745A      1852            mov     a,#0x5A
0771 C0E0      1853            push    acc
0773 743D      1854            mov     a,#0x3D
0775 C0E0      1855            push    acc
0777 8A82      1856            mov     dpl,r2
0779 8B83      1857            mov     dph,r3
077B 8CF0      1858            mov     b,r4
077D ED        1859            mov     a,r5
077E 120100    1860            lcall   ___fsgt
0781 AA82      1861            mov     r2,dpl
0783 E581      1862            mov     a,sp
0785 24FC      1863            add     a,#0xfc
0787 F581      1864            mov     sp,a
0789 EA        1865            mov     a,r2
078A 6001      1866            jz      L021010?
078C           1867   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:455: pwm_BLU1=0;
078C 756800    1868            mov     _pwm_BLU1,#0x00
078F           1869   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:456: pwm_BLU0=power;
078F 85E8A8    1870            mov     _pwm_BLU0,_power
0792           1871   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:457: pwm_RED1=0;
0792 75E800    1872            mov     _pwm_RED1,#0x00
0795           1873   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:458: pwm_RED0=0;
0795 752800    1874            mov     _pwm_RED0,#0x00
0798 22        1875            ret
0799           1876   L021010?:
0799           1877   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:461: pwm_BLU1 = power;
0799 85E868    1878            mov     _pwm_BLU1,_power
079C           1879   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:462: pwm_BLU0 = 0;
079C 75A800    1880            mov     _pwm_BLU0,#0x00
079F           1881   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:463: pwm_RED1 = power;
079F 85E8E8    1882            mov     _pwm_RED1,_power
07A2           1883   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:464: pwm_RED0 = 0;
07A2 752800    1884            mov     _pwm_RED0,#0x00
07A5           1885   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:466: break;
07A5           1886   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:470: case STOP:
07A5 22        1887            ret
07A6           1888   L021015?:
07A6           1889   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:471: pwm_BLU1 = 0;
07A6 756800    1890            mov     _pwm_BLU1,#0x00
07A9           1891   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:472: pwm_BLU0 = 0;
07A9 75A800    1892            mov     _pwm_BLU0,#0x00
07AC           1893   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:473: pwm_RED1 = 0;
07AC 75E800    1894            mov     _pwm_RED1,#0x00
07AF           1895   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:474: pwm_RED0 = 0;
07AF 752800    1896            mov     _pwm_RED0,#0x00
07B2           1897   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:475: break;
07B2           1898   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:479: case NITL:
07B2 22        1899            ret
07B3           1900   L021016?:
07B3           1901   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:480: pwm_BLU1 = 0;
07B3           1902   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:481: pwm_BLU0 = 0;
07B3           1903   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:482: pwm_RED1 = 3*power;
07B3 E4        1904            clr     a
07B4 F568      1905            mov     _pwm_BLU1,a
07B6 F5A8      1906            mov     _pwm_BLU0,a
07B8 E5E8      1907            mov     a,_power
07BA 75F003    1908            mov     b,#0x03
07BD A4        1909            mul     ab
07BE F5E8      1910            mov     _pwm_RED1,a
07C0           1911   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:483: pwm_RED0 = 0;
07C0 752800    1912            mov     _pwm_RED0,#0x00
07C3           1913   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:484: waitms(1000);
07C3 9003E8    1914            mov     dptr,#0x03E8
07C6 120100    1915            lcall   _waitms
07C9           1916   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:485: mode=STOP;
07C9 E4        1917            clr     a
07CA F5C0      1918            mov     _mode,a
07CC F5C1      1919            mov     (_mode + 1),a
07CE           1920   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:486: break;
07CE           1921   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:490: case NITR:
07CE 22        1922            ret
07CF           1923   L021017?:
07CF           1924   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:491: pwm_BLU1 = 3*power;
07CF E5E8      1925            mov     a,_power
07D1 75F003    1926            mov     b,#0x03
07D4 A4        1927            mul     ab
07D5 F568      1928            mov     _pwm_BLU1,a
07D7           1929   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:492: pwm_BLU0 = 0;
07D7 75A800    1930            mov     _pwm_BLU0,#0x00
07DA           1931   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:493: pwm_RED1 = 0;
07DA 75E800    1932            mov     _pwm_RED1,#0x00
07DD           1933   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:494: pwm_RED0 = 0;
07DD 752800    1934            mov     _pwm_RED0,#0x00
07E0           1935   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:495: waitms(1000);
07E0 9003E8    1936            mov     dptr,#0x03E8
07E3 120100    1937            lcall   _waitms
07E6           1938   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:496: mode = STOP;
07E6 E4        1939            clr     a
07E7 F5C0      1940            mov     _mode,a
07E9 F5C1      1941            mov     (_mode + 1),a
07EB           1942   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:497: break;
07EB           1943   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:501: case ROTATE:
07EB 22        1944            ret
07EC           1945   L021018?:
07EC           1946   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:502: pwm_BLU1 = 0;
07EC 756800    1947            mov     _pwm_BLU1,#0x00
07EF           1948   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:503: pwm_BLU0 = 3*power;
07EF E5E8      1949            mov     a,_power
07F1 75F003    1950            mov     b,#0x03
07F4 A4        1951            mul     ab
07F5 F5A8      1952            mov     _pwm_BLU0,a
07F7           1953   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:504: pwm_RED1 = 3*power;
07F7 E5E8      1954            mov     a,_power
07F9 75F003    1955            mov     b,#0x03
07FC A4        1956            mul     ab
07FD F5E8      1957            mov     _pwm_RED1,a
07FF           1958   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:505: pwm_RED0 = 0;
07FF 752800    1959            mov     _pwm_RED0,#0x00
0802           1960   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:506: waitms(1200);
0802 9004B0    1961            mov     dptr,#0x04B0
0805           1962   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:512: }
0805 020100    1963            ljmp    _waitms
0808           1964   ;------------------------------------------------------------
0808           1965   ;Allocation info for local variables in function 'DebuggingFctn'
0808           1966   ;------------------------------------------------------------
0808           1967   ;------------------------------------------------------------
0808           1968   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:523: void DebuggingFctn (void)
0808           1969   ;        -----------------------------------------
0808           1970   ;         function DebuggingFctn
0808           1971   ;        -----------------------------------------
0808           1972   _DebuggingFctn:
0808           1973   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:525: sprintf(debugstring, "%4.3fms", period);
0808 C000      1974            push    _period
080A C001      1975            push    (_period + 1)
080C C002      1976            push    (_period + 2)
080E C003      1977            push    (_period + 3)
0810 7418      1978            mov     a,#__str_1
0812 C0E0      1979            push    acc
0814 74AD      1980            mov     a,#(__str_1 >> 8)
0816 C0E0      1981            push    acc
0818 7480      1982            mov     a,#0x80
081A C0E0      1983            push    acc
081C 74C0      1984            mov     a,#_debugstring
081E C0E0      1985            push    acc
0820 7417      1986            mov     a,#(_debugstring >> 8)
0822 C0E0      1987            push    acc
0824 7440      1988            mov     a,#0x40
0826 C0E0      1989            push    acc
0828 120100    1990            lcall   _sprintf
082B E581      1991            mov     a,sp
082D 24F6      1992            add     a,#0xf6
082F F581      1993            mov     sp,a
0831           1994   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:526: LCDprint(debugstring, 1,1);
0831 758001    1995            mov     _LCDprint_PARM_2,#0x01
0834 D230      1996            setb    _LCDprint_PARM_3
0836 9017C0    1997            mov     dptr,#_debugstring
0839 75F040    1998            mov     b,#0x40
083C 120100    1999            lcall   _LCDprint
083F           2000   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:527: sprintf(debugstring, "%d", mode);
083F C0C0      2001            push    _mode
0841 C0C1      2002            push    (_mode + 1)
0843 7498      2003            mov     a,#__str_2
0845 C0E0      2004            push    acc
0847 74AD      2005            mov     a,#(__str_2 >> 8)
0849 C0E0      2006            push    acc
084B 7480      2007            mov     a,#0x80
084D C0E0      2008            push    acc
084F 74C0      2009            mov     a,#_debugstring
0851 C0E0      2010            push    acc
0853 7417      2011            mov     a,#(_debugstring >> 8)
0855 C0E0      2012            push    acc
0857 7440      2013            mov     a,#0x40
0859 C0E0      2014            push    acc
085B 120100    2015            lcall   _sprintf
085E E581      2016            mov     a,sp
0860 24F8      2017            add     a,#0xf8
0862 F581      2018            mov     sp,a
0864           2019   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:528: LCDprint(debugstring, 2,1);
0864 758002    2020            mov     _LCDprint_PARM_2,#0x02
0867 D230      2021            setb    _LCDprint_PARM_3
0869 9017C0    2022            mov     dptr,#_debugstring
086C 75F040    2023            mov     b,#0x40
086F 020100    2024            ljmp    _LCDprint
0872           2025   ;------------------------------------------------------------
0872           2026   ;Allocation info for local variables in function 'main'
0872           2027   ;------------------------------------------------------------
0872           2028   ;IndVolts                  Allocated with name '_main_IndVolts_1_103'
0872           2029   ;sloc0                     Allocated with name '_main_sloc0_1_0'
0872           2030   ;------------------------------------------------------------
0872           2031   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:536: void main (void)
0872           2032   ;        -----------------------------------------
0872           2033   ;         function main
0872           2034   ;        -----------------------------------------
0872           2035   _main:
0872           2036   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:543: TIMER0_Init(); // Initialize timer 0 to read the frequency of the fm signal
0872 120100    2037            lcall   _TIMER0_Init
0875           2038   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:544: TIMER2_Init(); // Initialize timer 2 for periodic interrupts used for motor control
0875 120100    2039            lcall   _TIMER2_Init
0878           2040   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:545: LCD_4BIT(); // Initialize the LCD
0878 120100    2041            lcall   _LCD_4BIT
087B           2042   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:546: EA=1; // Enable interrupts
087B D2AF      2043            setb    _EA
087D           2044   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:548: InitPinADC(1, 4); // Configure P1.4 as analog input
087D 755004    2045            mov     _InitPinADC_PARM_2,#0x04
0880 758201    2046            mov     dpl,#0x01
0883 120100    2047            lcall   _InitPinADC
0886           2048   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:549: InitPinADC(2, 0); // Configure P2.0 as analog input
0886 755000    2049            mov     _InitPinADC_PARM_2,#0x00
0889 758202    2050            mov     dpl,#0x02
088C 120100    2051            lcall   _InitPinADC
088F           2052   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:550: InitPinADC(2, 7); // Configure P2.7 as analog input
088F 755007    2053            mov     _InitPinADC_PARM_2,#0x07
0892 758202    2054            mov     dpl,#0x02
0895 120100    2055            lcall   _InitPinADC
0898           2056   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:551: InitADC();
0898 120100    2057            lcall   _InitADC
089B           2058   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:552: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
089B 74D8      2059            mov     a,#__str_3
089D C0E0      2060            push    acc
089F 74AD      2061            mov     a,#(__str_3 >> 8)
08A1 C0E0      2062            push    acc
08A3 7480      2063            mov     a,#0x80
08A5 C0E0      2064            push    acc
08A7 120100    2065            lcall   _printf
08AA 1581      2066            dec     sp
08AC 1581      2067            dec     sp
08AE 1581      2068            dec     sp
08B0           2069   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:560: while(1)
08B0           2070   L023012?:
08B0           2071   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:564: IndVolts[0] = Volts_at_Pin(LQFP32_MUX_P2_7);
08B0 75820F    2072            mov     dpl,#0x0F
08B3 120100    2073            lcall   _Volts_at_Pin
08B6 AA82      2074            mov     r2,dpl
08B8 AB83      2075            mov     r3,dph
08BA ACF0      2076            mov     r4,b
08BC FD        2077            mov     r5,a
08BD 8A48      2078            mov     _main_IndVolts_1_103,r2
08BF 8B49      2079            mov     (_main_IndVolts_1_103 + 1),r3
08C1 8C4A      2080            mov     (_main_IndVolts_1_103 + 2),r4
08C3 8D4B      2081            mov     (_main_IndVolts_1_103 + 3),r5
08C5           2082   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:565: IndVolts[1] = Volts_at_Pin(LQFP32_MUX_P1_4);
08C5 758204    2083            mov     dpl,#0x04
08C8 120100    2084            lcall   _Volts_at_Pin
08CB AA82      2085            mov     r2,dpl
08CD AB83      2086            mov     r3,dph
08CF ACF0      2087            mov     r4,b
08D1 FD        2088            mov     r5,a
08D2 8A4C      2089            mov     (_main_IndVolts_1_103 + 0x0004),r2
08D4 8B4D      2090            mov     ((_main_IndVolts_1_103 + 0x0004) + 1),r3
08D6 8C4E      2091            mov     ((_main_IndVolts_1_103 + 0x0004) + 2),r4
08D8 8D4F      2092            mov     ((_main_IndVolts_1_103 + 0x0004) + 3),r5
08DA           2093   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:566: IndVolts[2] = Volts_at_Pin(LQFP32_MUX_P2_0);
08DA 758208    2094            mov     dpl,#0x08
08DD 120100    2095            lcall   _Volts_at_Pin
08E0 AA82      2096            mov     r2,dpl
08E2 AB83      2097            mov     r3,dph
08E4 ACF0      2098            mov     r4,b
08E6 FD        2099            mov     r5,a
08E7 8A50      2100            mov     (_main_IndVolts_1_103 + 0x0008),r2
08E9 8B51      2101            mov     ((_main_IndVolts_1_103 + 0x0008) + 1),r3
08EB 8C52      2102            mov     ((_main_IndVolts_1_103 + 0x0008) + 2),r4
08ED 8D53      2103            mov     ((_main_IndVolts_1_103 + 0x0008) + 3),r5
08EF           2104   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:570: TL0=0;
08EF 758A00    2105            mov     _TL0,#0x00
08F2           2106   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:571: TH0=0;
08F2 758C00    2107            mov     _TH0,#0x00
08F5           2108   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:572: TF0=0;
08F5 C28D      2109            clr     _TF0
08F7           2110   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:573: overflow_count=0;
08F7 758000    2111            mov     _overflow_count,#0x00
08FA           2112   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:576: if (mode != ROTATE){
08FA 7405      2113            mov     a,#0x05
08FC B5C098    2114            cjne    a,_mode,L023022?
08FF E4        2115            clr     a
0900 B5C198    2116            cjne    a,(_mode + 1),L023022?
0903 020100    2117            ljmp    L023009?
0906           2118   L023022?:
0906           2119   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:577: if (IndVolts[0]<0.10){
0906 74CD      2120            mov     a,#0xCD
0908 C0E0      2121            push    acc
090A 74CC      2122            mov     a,#0xCC
090C C0E0      2123            push    acc
090E C0E0      2124            push    acc
0910 743D      2125            mov     a,#0x3D
0912 C0E0      2126            push    acc
0914 854882    2127            mov     dpl,_main_IndVolts_1_103
0917 854983    2128            mov     dph,(_main_IndVolts_1_103 + 1)
091A 854AF0    2129            mov     b,(_main_IndVolts_1_103 + 2)
091D E54B      2130            mov     a,(_main_IndVolts_1_103 + 3)
091F 120100    2131            lcall   ___fslt
0922 AA82      2132            mov     r2,dpl
0924 E581      2133            mov     a,sp
0926 24FC      2134            add     a,#0xfc
0928 F581      2135            mov     sp,a
092A EA        2136            mov     a,r2
092B 7001      2137            jnz     L023023?
092D 020100    2138            ljmp    L023010?
0930           2139   L023023?:
0930           2140   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:579: TR0=1; // logic zero signal detected! detect time interval btw two falling edges. Start the timer
0930 D28C      2141            setb    _TR0
0932           2142   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:580: while(IndVolts[0]<0.10) // Wait for the signal to be logic one
0932           2143   L023003?:
0932 74CD      2144            mov     a,#0xCD
0934 C0E0      2145            push    acc
0936 74CC      2146            mov     a,#0xCC
0938 C0E0      2147            push    acc
093A C0E0      2148            push    acc
093C 743D      2149            mov     a,#0x3D
093E C0E0      2150            push    acc
0940 854882    2151            mov     dpl,_main_IndVolts_1_103
0943 854983    2152            mov     dph,(_main_IndVolts_1_103 + 1)
0946 854AF0    2153            mov     b,(_main_IndVolts_1_103 + 2)
0949 E54B      2154            mov     a,(_main_IndVolts_1_103 + 3)
094B 120100    2155            lcall   ___fslt
094E AA82      2156            mov     r2,dpl
0950 E581      2157            mov     a,sp
0952 24FC      2158            add     a,#0xfc
0954 F581      2159            mov     sp,a
0956 EA        2160            mov     a,r2
0957 6001      2161            jz      L023005?
0959           2162   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:582: IndVolts[0] = Volts_at_Pin(LQFP32_MUX_P2_7);
0959 75820F    2163            mov     dpl,#0x0F
095C 120100    2164            lcall   _Volts_at_Pin
095F AA82      2165            mov     r2,dpl
0961 AB83      2166            mov     r3,dph
0963 ACF0      2167            mov     r4,b
0965 FD        2168            mov     r5,a
0966 8A48      2169            mov     _main_IndVolts_1_103,r2
0968 8B49      2170            mov     (_main_IndVolts_1_103 + 1),r3
096A 8C4A      2171            mov     (_main_IndVolts_1_103 + 2),r4
096C 8D4B      2172            mov     (_main_IndVolts_1_103 + 3),r5
096E           2173   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:583: if(TF0==1) // Did the 16-bit timer overflow?
096E           2174   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:585: TF0=0;
096E 108D18    2175            jbc     _TF0,L023025?
0971 8001      2176            sjmp    L023003?
0973           2177   L023025?:
0973           2178   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:586: overflow_count++;
0973 0580      2179            inc     _overflow_count
0975 8001      2180            sjmp    L023003?
0977           2181   L023005?:
0977           2182   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:591: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period. Then convert it to frequency
0977 C28C      2183            clr     _TR0
0979           2184   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:593: period=1000.0*(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK); // Compute period. Unit in ms
0979 858082    2185            mov     dpl,_overflow_count
097C 120100    2186            lcall   ___uchar2fs
097F AA82      2187            mov     r2,dpl
0981 AB83      2188            mov     r3,dph
0983 ACF0      2189            mov     r4,b
0985 FD        2190            mov     r5,a
0986 C002      2191            push    ar2
0988 C003      2192            push    ar3
098A C004      2193            push    ar4
098C C005      2194            push    ar5
098E 900000    2195            mov     dptr,#0x0000
0991 75F080    2196            mov     b,#0x80
0994 7447      2197            mov     a,#0x47
0996 120100    2198            lcall   ___fsmul
0999 858288    2199            mov     _main_sloc0_1_0,dpl
099C 858389    2200            mov     (_main_sloc0_1_0 + 1),dph
099F 85F08A    2201            mov     (_main_sloc0_1_0 + 2),b
09A2 F58B      2202            mov     (_main_sloc0_1_0 + 3),a
09A4 E581      2203            mov     a,sp
09A6 24FC      2204            add     a,#0xfc
09A8 F581      2205            mov     sp,a
09AA 858C82    2206            mov     dpl,_TH0
09AD 120100    2207            lcall   ___uchar2fs
09B0 AE82      2208            mov     r6,dpl
09B2 AF83      2209            mov     r7,dph
09B4 AAF0      2210            mov     r2,b
09B6 FB        2211            mov     r3,a
09B7 C006      2212            push    ar6
09B9 C007      2213            push    ar7
09BB C002      2214            push    ar2
09BD C003      2215            push    ar3
09BF 900000    2216            mov     dptr,#0x0000
09C2 75F080    2217            mov     b,#0x80
09C5 7443      2218            mov     a,#0x43
09C7 120100    2219            lcall   ___fsmul
09CA AA82      2220            mov     r2,dpl
09CC AB83      2221            mov     r3,dph
09CE ACF0      2222            mov     r4,b
09D0 FD        2223            mov     r5,a
09D1 E581      2224            mov     a,sp
09D3 24FC      2225            add     a,#0xfc
09D5 F581      2226            mov     sp,a
09D7 C002      2227            push    ar2
09D9 C003      2228            push    ar3
09DB C004      2229            push    ar4
09DD C005      2230            push    ar5
09DF 858882    2231            mov     dpl,_main_sloc0_1_0
09E2 858983    2232            mov     dph,(_main_sloc0_1_0 + 1)
09E5 858AF0    2233            mov     b,(_main_sloc0_1_0 + 2)
09E8 E58B      2234            mov     a,(_main_sloc0_1_0 + 3)
09EA 120100    2235            lcall   ___fsadd
09ED 858288    2236            mov     _main_sloc0_1_0,dpl
09F0 858389    2237            mov     (_main_sloc0_1_0 + 1),dph
09F3 85F08A    2238            mov     (_main_sloc0_1_0 + 2),b
09F6 F58B      2239            mov     (_main_sloc0_1_0 + 3),a
09F8 E581      2240            mov     a,sp
09FA 24FC      2241            add     a,#0xfc
09FC F581      2242            mov     sp,a
09FE AE8A      2243            mov     r6,_TL0
0A00 7F00      2244            mov     r7,#0x00
0A02 8E82      2245            mov     dpl,r6
0A04 8F83      2246            mov     dph,r7
0A06 120100    2247            lcall   ___sint2fs
0A09 AE82      2248            mov     r6,dpl
0A0B AF83      2249            mov     r7,dph
0A0D AAF0      2250            mov     r2,b
0A0F FB        2251            mov     r3,a
0A10 C006      2252            push    ar6
0A12 C007      2253            push    ar7
0A14 C002      2254            push    ar2
0A16 C003      2255            push    ar3
0A18 858882    2256            mov     dpl,_main_sloc0_1_0
0A1B 858983    2257            mov     dph,(_main_sloc0_1_0 + 1)
0A1E 858AF0    2258            mov     b,(_main_sloc0_1_0 + 2)
0A21 E58B      2259            mov     a,(_main_sloc0_1_0 + 3)
0A23 120100    2260            lcall   ___fsadd
0A26 AA82      2261            mov     r2,dpl
0A28 AB83      2262            mov     r3,dph
0A2A ACF0      2263            mov     r4,b
0A2C FD        2264            mov     r5,a
0A2D E581      2265            mov     a,sp
0A2F 24FC      2266            add     a,#0xfc
0A31 F581      2267            mov     sp,a
0A33 C002      2268            push    ar2
0A35 C003      2269            push    ar3
0A37 C004      2270            push    ar4
0A39 C005      2271            push    ar5
0A3B 90126F    2272            mov     dptr,#0x126F
0A3E 75F083    2273            mov     b,#0x83
0A41 7439      2274            mov     a,#0x39
0A43 120100    2275            lcall   ___fsmul
0A46 858200    2276            mov     _period,dpl
0A49 858301    2277            mov     (_period + 1),dph
0A4C 85F002    2278            mov     (_period + 2),b
0A4F F503      2279            mov     (_period + 3),a
0A51 E581      2280            mov     a,sp
0A53 24FC      2281            add     a,#0xfc
0A55 F581      2282            mov     sp,a
0A57 8001      2283            sjmp    L023010?
0A59           2284   L023009?:
0A59           2285   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:597: period = 300.0; // Set period in the STOP band to set Mode = STOP after Mode == ROTATE
0A59 750000    2286            mov     _period,#0x00
0A5C 750100    2287            mov     (_period + 1),#0x00
0A5F 750296    2288            mov     (_period + 2),#0x96
0A62 750343    2289            mov     (_period + 3),#0x43
0A65           2290   L023010?:
0A65           2291   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:603: DetermineMode();
0A65 120100    2292            lcall   _DetermineMode
0A68           2293   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:607: MotorControl(IndVolts);
0A68 909C48    2294            mov     dptr,#_main_IndVolts_1_103
0A6B 75F040    2295            mov     b,#0x40
0A6E 120100    2296            lcall   _MotorControl
0A71           2297   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:611: DebuggingFctn(); 
0A71 120100    2298            lcall   _DebuggingFctn
0A74           2299   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:616: waitms(1);
0A74 900001    2300            mov     dptr,#0x0001
0A77 120100    2301            lcall   _waitms
0A7A           2302   ;        D:\DevFiles\ELEC291_Dev_Files\Project2\Receiver.c:617: millisecond = millisecond + 1;
0A7A 0540      2303            inc     _millisecond
0A7C E4        2304            clr     a
0A7D B54058    2305            cjne    a,_millisecond,L023026?
0A80 0541      2306            inc     (_millisecond + 1)
0A82           2307   L023026?:
0A82 020100    2308            ljmp    L023012?
0A85           2309            rseg R_CSEG
0A85           2310   
0000           2311            rseg R_XINIT
0000           2312   
0000           2313            rseg R_CONST
0000           2314   __str_0:
0000 20202020  2315            db '                '
     20202020
     20202020
     20202020
0010 00        2316            db 0x00
0011           2317   __str_1:
0011 25342E33  2318            db '%4.3fms'
     666D73
0018 00        2319            db 0x00
0019           2320   __str_2:
0019 2564      2321            db '%d'
001B 00        2322            db 0x00
001C           2323   __str_3:
001C 1B        2324            db 0x1B
001D 5B324A    2325            db '[2J'
0020 00        2326            db 0x00
0021           2327   
002E           2328            CSEG
002E           2329   
002E           2330   end
